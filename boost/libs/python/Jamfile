subproject libs/python ;

# bring in the rules for python
SEARCH on <module@>python.jam = $(BOOST_BUILD_PATH) ;
include <module@>python.jam ;


{
    local BOOST_PYTHON_V2_PROPERTIES 
      = $(PYTHON_PROPERTIES)
        <metrowerks><*><cxxflags>"-inline deferred" 
        <cxx><*><include>$(BOOST_ROOT)/boost/compatibility/cpp_c_headers
          <define>BOOST_PYTHON_DYNAMIC_LIB
          <define>BOOST_PYTHON_V2
          ;
    
    local PYTHON_PROPERTIES = $(BOOST_PYTHON_V2_PROPERTIES) ;
    
    dll bpl
      : 
      src/converter/from_python.cpp
      src/converter/registry.cpp
      src/converter/type_id.cpp
      src/object/class.cpp
      src/object/function.cpp
      src/object/inheritance.cpp
      src/object/life_support.cpp
      src/errors.cpp
      src/module.cpp
      src/objects.cpp
      src/converter/builtin_converters.cpp
      :
      $(BOOST_PYTHON_V2_PROPERTIES)
        <define>BOOST_PYTHON_SOURCE
        ;

    # -------- general test -------
    extension m1 : test/m1.cpp <dll>bpl
      : 
      : debug-python
      ;

    extension m2 : test/m2.cpp <dll>bpl
      : 
      : debug-python ;

    boost-python-runtest try : test/newtest.py <pyd>m1 <pyd>m2 : : debug-python ;

    # ----------- builtin converters -----------
    
    extension builtin_converters_ext : test/test_builtin_converters.cpp <dll>bpl
      :
      : debug-python
      ;

    boost-python-runtest test_builtin_converters : test/test_builtin_converters.py
      <pyd>builtin_converters_ext
      :
      : debug-python
      ;
    
    # ----------- pointer adoption -----------
    
    extension test_pointer_adoption_ext : test/test_pointer_adoption.cpp <dll>bpl
      :
      : debug-python
      ;

    boost-python-runtest test_pointer_adoption : test/test_pointer_adoption.py
      <pyd>test_pointer_adoption_ext
      :
      : debug-python
      ;
    
}

unit-test indirect_traits_test
  : test/indirect_traits_test.cpp : <include>$(BOOST_ROOT)  ;
unit-test destroy_test
  : test/destroy_test.cpp : <include>$(BOOST_ROOT)  ;
unit-test pointer_type_id_test
  : test/pointer_type_id_test.cpp : <include>$(BOOST_ROOT)  ;

unit-test select_from_python_test
  : test/select_from_python_test.cpp
  src/converter/type_id.cpp
  src/converter/registry.cpp # MWerks needs this for some reason
  : $(PYTHON_PROPERTIES)
    ;

