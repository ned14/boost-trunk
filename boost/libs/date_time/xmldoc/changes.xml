<section id="date_time.changes">
  <title>Change History</title>
  
  <bridgehead renderas="sect3">Changes from Boost 1.30 to 1.3? (date_time 1.02 to 1.03--prerelease)</bridgehead>
  <informaltable frame="all">
    <tgroup cols="2">
      <thead>
	<row>
	  <entry>Type</entry>
	  <entry>Description</entry>
	</row>
      </thead>
      <tbody>
	<row>
	  <entry>Feature</entry>
	  <entry>Output streaming now supports wide stream output on compiler / standard library combinations that support wide streams. This allows code like:
	    <programlisting>
	      std::wstringstream wss;
	      date d(2003,Aug,21);
	      wss &lt;&lt; d;</programlisting>
	    Thanks to Bart Garst for this change.
	  </entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Input streaming for dates and times types is now supported:
	    <programlisting>
	      std::stringstream ss("2000-FEB-29");
	      date d(not_a_date_time);
	      ss &lt;&lt; d; //Feb 29th, 2000</programlisting>
	    Thanks to Bart Garst for this change.
	  </entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Fixed the special value constructor for date when constructing date(min_date_time) or date(max_date_time) the wrong value was constructed for these.</entry>
	</row>
      </tbody>
    </tgroup>
  </informaltable>
  
  <bridgehead renderas="sect3">Changes from Boost 1.30 to 1.31 (date_time 1.01 to 1.02)</bridgehead>
  <informaltable frame="all">
    <tgroup cols="2">
      <thead>
	<row>
	  <entry>Type</entry>
	  <entry>Description</entry>
	</row>
      </thead>
      <tbody>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Build configuration updated so dll, statically, and dynamically linkable library files are now produced with MSVC compilers. See <link linkend="date_time.buildinfo">Build/Compiler Information</link> for more details.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Time_duration from_string is now correctly constructed from a negative value. (ie "-0:39:00.000") Code provided by Bart Garst.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Fixed many MSVC compiler warnings when compiled with warning level 4.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added prefix decrement operator (--) for date and time iterators. See <link linkend="date_time.posix_time.time_iterators">Time Iterators</link>  and <link linkend="date_time.gregorian.date_iterators">Date Iterators</link> for more details. Code provided by Bart Garst.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Special_values functionality added for date_duration, time_duration and time classes. Code provided by Bart Garst.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Fixed time_duration_traits calculation bug which was causing time duration to be limited to 32bit range even when 64 bits were available. Thanks to Joe de Guzman for tracking this down.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Provided additional operators for duration types (eg: date_duration, time_duration). This includes divideable by integer and fixes to allow +=, -= operators. Thanks to Bart Garst for writing this code. Also, the documentation of <link linkend="date_time.calculations">Calculations</link> has been improved.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Added typedefs to boost::gregorian gregorian_types.hpp various date_generator function classes.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added from_time_t function to convert time_t to a ptime.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added a span function for combining periods. See <link linkend="date_time.gregorian.date_period">date period</link> and <link linkend="date_time.posix_time.time_period">time period</link> docs.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added a function to time_duration to get the total number of seconds in a duration truncating any fractional seconds. In addition, other resolutions were added to allow for easy conversions. For example
seconds(1).total_milliseconds() == 1000
seconds(1).total_microseconds() == 1000000
hours(1).total_milliseconds() == 3600*1000 //3600 sec/hour
seconds(1).total_nanoseconds() == 1000000000</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added output streaming operators for the <link linkend="date_time.gregorian.date_algorithms">date generator</link> classes - partial_date, first_kday_after, first_kday_before, etc. Thanks to Bart Garst for this work.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added unary- operators for durations for reversing the sign of a time duration. For example:
	    <programlisting>
	      time_duration td(5,0,0); //5 hours
	      td = -td; //-5 hours</programlisting>
	  Thanks to Bart Garst for this work.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added support for parsing strings with 'month names'. Thus creating a date object from string now accepts multiple formats ("2003-10-31","2003-Oct-31", and "2003-October-31"). Thus, date d = from_simple_string("2003-Feb-27") is now allowed. A bad month name string ( from_simple_string("2003-SomeBogusMonthName-27")) will cause a bad_month exception. On most compilers the string compare is case insensitive. Thanks to Bart Garst for this work.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>In addition to support for month names or numbers, functions have been added to create date objects from multi-ordered date strings. Ex: "January-21-2002", "2002-Jan-21", and "21-Jan-2003". See <link linkend="date_time.gregorian.date">Date Class</link> for more details.</entry>
	</row>
	<row>
	  <entry>Bug-Fix</entry><!-- leave '-' so table cell doesn't wrap -->
	  <entry>Various documentation fixes. Thanks to Bart Garst for updates.</entry>
	</row>
      </tbody>
    </tgroup>
  </informaltable>
  
  <bridgehead renderas="sect3">Changes from Boost 1.29 to 1.30 (date_time 1.00 to 1.01)</bridgehead>
  <para>
    Notice: The interface to the partial_date class (see <link linkend="date_time.gregorian.algorithms">date_algorithms</link>) was changed. The order of construction parameters was changed which will cause some code to fail execution. This change was made to facilitate more generic local time adjustment code. Thus instead of specifying partial_date pd(Dec,25) the code needs to be changed to partial_date pd(25, Dec); 
  </para>
  <informaltable frame="all">
    <tgroup cols="2">
      <thead>
	<row>
	  <entry>Type</entry>
	  <entry>Description</entry>
	</row>
      </thead>
      <tbody>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Added new experimental feature for Daylight Savings Time calculations. This allows traits based specification of dst rules.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Added new interfaces to calculate julian day and modified julian day to the gregorian date class. See <link linkend="date_time.gregorian.date">boost::gregorian::date</link>.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Add new interface to calculate iso 8601 week number for a date. See <link linkend="date_time.gregorian.date">boost::gregorian::date</link>.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry>Add an iso 8601 time date-time format (eg: YYYYMMDDTHHHMMSS) parsing function. See <link linkend="date_time.posix_time.ptime">Class ptime</link> for more information.</entry>
	</row>
	<row>
	  <entry>Feature</entry>
	  <entry> Added a length function to the period template so that both date_periods and time_periods will now support this function.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Split Jamfiles so that libs/date_time/build/Jamfile only builds library and /libs/date_time/libs/test/Jamfile which runs tests.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Fixed many minor documentation issues.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Removed the DATE_TIME_INLINE macro which was causing link errors. This macro is no longer needed in projects using the library.</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Added missing typedef for year_iterator to gregorian_types.hpp</entry>
	</row>
	<row>
	  <entry>Bug Fix</entry>
	  <entry>Fixed problem with gregorian ostream operators that prevented the use of wide streams.</entry>
	</row>
	<row>
	  <entry>Bug-Fix</entry><!-- leave '-' so table cell doesn't wrap -->
	  <entry>Tighten error handling for dates so that date(2002, 2, 29) will throw a bad_day_of_month exception. Previously the date would be incorrectly constructed. Reported by sourceforge bug: 628054 among others.</entry>
	</row>
      </tbody>
    </tgroup>
  </informaltable>
</section>
