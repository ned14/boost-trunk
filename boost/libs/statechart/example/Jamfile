#  (C) Copyright Andreas Huber Doenni 2004
# Distributed under the Boost Software License, Version 1.0. (See accompany-
# ing file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

subproject libs/fsm/example ;

local no-of-bits-list = 1 2 3 4 5 6 ;

template fsm-common-options
  :
  : <include>$(BOOST_ROOT)
    # The library ensures that all state destructors are only invoked on
    # the most-derived type, therefore state destructors do not need to
    # be virtual
    <gcc><*><cxxflags>-Wno-non-virtual-dtor
    <gcc-stlport><*><cxxflags>-Wno-non-virtual-dtor
    <gcc-nocygwin><*><cxxflags>-Wno-non-virtual-dtor
    <mingw><*><cxxflags>-Wno-non-virtual-dtor
    <mingw-stlport><*><cxxflags>-Wno-non-virtual-dtor
;

rule fsm-st-example-build (
  target-name : directory : sources + : additional-options * )
{
  exe $(target-name)
    : $(directory)/$(sources).cpp <template>fsm-common-options
    : <threading>single
      $(additional-options)
  ;
}

rule fsm-mt-example-build (
  target-name : directory : sources + : additional-options * )
{
  exe $(target-name)
    : $(directory)/$(sources).cpp
      <dll>../../thread/build/boost_thread
      <template>fsm-common-options
    : <threading>multi
      $(additional-options)
  ;
}

rule fsm-bitmachine-build ( tag : no-of-bits-list + : additional-options * )
{
  for local no-of-bits in $(no-of-bits-list)
  {
    fsm-st-example-build BitMachine$(tag)$(no-of-bits)
      : BitMachine : BitMachine
      : <define>NO_OF_BITS=$(no-of-bits)
        $(additional-options) ; 
  }
}

fsm-bitmachine-build Normal : $(no-of-bits-list) ;
fsm-bitmachine-build Custom : $(no-of-bits-list) :
  <define>CUSTOMIZE_MEMORY_MANAGEMENT ;
fsm-bitmachine-build Native : $(no-of-bits-list) :
  <define>BOOST_FSM_USE_NATIVE_RTTI ;

fsm-st-example-build Camera : Camera : Camera Configuring Main Shooting ;
fsm-st-example-build Handcrafted : Handcrafted : Handcrafted ;
fsm-st-example-build Keyboard : Keyboard : Keyboard ;
fsm-st-example-build PingPongSingle : PingPong : PingPong ;
fsm-mt-example-build PingPongMulti1 : PingPong : PingPong ;
fsm-mt-example-build PingPongMulti2 : PingPong : PingPong
  : <define>USE_TWO_THREADS ;
fsm-st-example-build StopWatch : StopWatch : StopWatch ;
