
# Testing Jamfile autogenerated from XML source
subproject libs/function/test ;

# bring in rules for testing
SEARCH on testing.jam = $(BOOST_BUILD_PATH) ;
include testing.jam ;

# Make tests run by default.
DEPENDS all : test ;

{
  # look in BOOST_ROOT for sources first, just in this Jamfile
  local SEARCH_SOURCE = $(BOOST_ROOT) $(SEARCH_SOURCE) ;

  test-suite function
    : 
  [ run libs/function/test/function_test.cpp ]

  [ run libs/function/test/function_n_test.cpp ]

  [ run libs/function/test/allocator_test.cpp <lib>../../../libs/test/build/boost_test_exec_monitor ]

  [ run libs/function/test/stateless_test.cpp <lib>../../../libs/test/build/boost_test_exec_monitor ]

  [ run libs/function/test/lambda_test.cpp <lib>../../../libs/test/build/boost_test_exec_monitor ]

  [ compile-fail libs/function/test/function_test_fail1.cpp ]

  [ compile-fail libs/function/test/function_test_fail2.cpp ]

  [ compile libs/function/test/function_30.cpp ] 

  [ run libs/function/test/function_arith_cxx98.cpp ]

  [ run libs/function/test/function_arith_portable.cpp ]

  [ run libs/function/test/sum_avg_cxx98.cpp ]

  [ run libs/function/test/sum_avg_portable.cpp ]

  [ run libs/function/test/mem_fun_cxx98.cpp ]

  [ run libs/function/test/mem_fun_portable.cpp ]

  [ run libs/function/test/std_bind_cxx98.cpp ]

  [ run libs/function/test/std_bind_portable.cpp ]

  [ run libs/function/test/function_ref_cxx98.cpp ]

  [ run libs/function/test/function_ref_portable.cpp ]
 ;
}
      