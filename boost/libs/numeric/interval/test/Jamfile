# Boost Interval Library test Jamfile
#
# Copyright 2003 Guillaume Melquiond
#
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or
# copy at http://www.boost.org/LICENSE_1_0.txt)

subproject libs/numeric/interval/test ;

# bring in rules for testing
import testing ;

# Local rule to modify requirements on the fly.
local rule special-requirements ( toolset variant : properties * )
{
    # For this library to work correctly on Alpha hardware, dynamic rounding
    # mode must be enabled with a compiler flag.

    if $(UNIX) && $(OS) = OSF
    {
        switch $(toolset)
        {
            case gcc* : properties += <cflags>-mfp-rounding-mode=d ;
            case tru64cxx* : properties += <cflags>-fprm <cflags>d ;
        }
    }
    
    return $(properties) ;
}
    
# Local run rule which automatically includes the local requirements.
local rule local-run ( sources + : args * : input-files * : requirements *
    : name ? : default-build * : args2 * )
{
    return [ run $(sources) : $(args) : $(input-files)
        : $(requirements) special-requirements
        : $(name) : $(default-build) : $(args2) ] ;
}

# Make tests run by default.
DEPENDS all : test ;

{
  # look in BOOST_ROOT for sources first, just in this Jamfile
  local SEARCH_SOURCE = $(BOOST_ROOT) $(SEARCH_SOURCE) ;

  test-suite numeric/interval :
    [ compile libs/numeric/interval/test/integer.cpp ]

    [ local-run libs/numeric/interval/test/add.cpp      ]
    [ local-run libs/numeric/interval/test/det.cpp      ]
    [ local-run libs/numeric/interval/test/fmod.cpp     ]
    [ local-run libs/numeric/interval/test/mul.cpp      ]
    [ local-run libs/numeric/interval/test/overflow.cpp ]
    [ local-run libs/numeric/interval/test/pi.cpp       ]
    [ local-run libs/numeric/interval/test/pow.cpp      ]

    [ local-run libs/numeric/interval/test/cmp.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
    [ local-run libs/numeric/interval/test/cmp_exn.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
    [ local-run libs/numeric/interval/test/cmp_exp.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
    [ local-run libs/numeric/interval/test/cmp_lex.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
    [ local-run libs/numeric/interval/test/cmp_set.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
    [ local-run libs/numeric/interval/test/cmp_tribool.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
    [ local-run libs/numeric/interval/test/test_float.cpp
        <lib>../../../test/build/boost_test_exec_monitor ]
  ;
}
