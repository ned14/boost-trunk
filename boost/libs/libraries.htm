<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="ProgId" content="FrontPage.Editor.Document">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title>Boost Libraries</title>
<meta name="Microsoft Border" content="none, default">
</head>

<body bgcolor="#FFFFFF" text="#000000">

<table border="1" cellpadding="2" bgcolor="#007F7F">
    <tr>
        <td bgcolor="#FFFFFF"><img src="../c++boost.gif"
        alt="c++boost.gif (8819 bytes)" width="277" height="86"></td>
        <td><a href="../index.htm"><font color="#FFFFFF" size="4"
        face="Arial">Home</font></a></td>
        <td><a href="libraries.htm"><font color="#FFFFFF"
        size="4" face="Arial">Libraries</font></a></td>
        <td><a href="../people/people.htm"><font color="#FFFFFF"
        size="4" face="Arial">People</font></a></td>
        <td><a href="../more/faq.htm"><font color="#FFFFFF"
        size="4" face="Arial">FAQ</font></a></td>
        <td><a href="../more/index.htm"><font color="#FFFFFF"
        size="4" face="Arial">More</font></a></td>
    </tr>
</table>

<h1>Boost Libraries</h1>

<ul>
    <li><a href="any/index.html">any</a> - Safe, generic container for single
      values of different value types, from Kevlin Henney.&nbsp;</li>
    <li><a href="array/index.htm">array</a> - STL compliant
        container wrapper for arrays of constant size, from
        Nicolai Josuttis.</li>
    <li><a href="utility/call_traits.htm">call_traits</a> -
        Defines types for passing parameters, from John Maddock,
        Howard Hinnant, et al.</li>
    <li><a href="compatibility/index.html">compatibility</a> - Help for
      non-conforming standard libraries, from Ralf Grosse-Kunstleve and Jens
      Maurer.</li>
    <li><a href="compose/index.htm">compose</a> - Functional
        composition adapters for the STL, from Nicolai Josuttis.</li>
    <li><a href="utility/compressed_pair.htm">compressed_pair</a>
        - Empty member optimization, from John Maddock, Howard
        Hinnant, et al.</li>
    <li><a href="concept_check/concept_check.htm">concept check</a>
        - Tools for generic programming, from Jeremy Siek.</li>
    <li><a href="config/index.htm">config</a> - Helps boost
        library developers adapt to compiler idiosyncrasies; not
        intended for library users.</li>
    <li><a href="conversion/index.htm">conversion</a> - Numeric,
        polymorphic, and lexical casts, from Dave Abrahams and
        Kevlin Henney.</li>
    <li><a href="crc/index.html">crc</a> - Cyclic Redundancy Code, from Daryle
      Walker.</li>
    <li><a href="function/index.html">function</a> - Function object wrappers
      for deferred calls or callbacks, from Doug Gregor</li>
    <li><a href="functional/index.html">functional</a> - Enhanced
        function object adaptors, from Mark Rodgers.</li>
    <li><a href="graph/doc/table_of_contents.html">graph</a> -
        Generic graph components and algorithms, from Jeremy Siek
        and a University of Notre Dame team.</li>
    <li><a href="integer/index.htm">integer</a> - Headers to ease
        dealing with integral types.</li>
    <li><a href="utility/iterator_adaptors.htm">iterator adaptors</a>
        - Adapt a base type into a standard conforming iterator,
        and more, from Dave Abrahams, Jeremy Siek, and John
        Potter.</li>
    <li><a href="math/octonion/index.html">math/octonion</a> -
        Octonions, from Hubert Holin.</li>
    <li><a href="math/quaternion/index.html">math/quaterion</a> -
        Quaterions, from Hubert Holin.</li>
    <li><a href="math/special_functions/index.html">math/special_functions</a> -
        Mathematical special functions such as atanh, sinc, and sinhc,
        from Hubert Holin.</li>
    <li><a href="utility/operators.htm">operators</a> - Templates
        ease arithmetic classes and iterators, from Dave Abrahams
        and Jeremy Siek.</li>
    <li><a href="pool/doc/index.html">pool</a> - Memory pool management, from
      Steve Cleary.</li>
    <li><a href="property_map/property_map.html">property map</a>
        - Concepts defining interfaces which map key objects to
        value objects, from Jeremy Siek.</li>
    <li><a href="python/doc/index.html">python</a> - Reflects C++
        classes and functions into <a
        href="http://www.python.org">Python</a>, from Dave
        Abrahams.</li>
    <li><a href="random/index.html">random</a> - A complete
        system for random number generation, from Jens Maurer.</li>
    <li><a href="rational/index.html">rational</a> - A rational
        number class, from Paul Moore.</li>
    <li><a href="regex/index.htm">regex</a> - Regular expression
        library, from John Maddock.</li>
    <li><a href="smart_ptr/index.htm">smart_ptr</a> - Four smart
        pointer classes, from Greg Colvin and Beman Dawes.</li>
    <li><a href="static_assert/static_assert.htm">static_assert</a>
        - Static assertions (compile time assertions), from John
        Maddock.</li>
    <li><a href="test/doc/index.htm">test</a> - Support for program testing and
      execution, from Beman Dawes.</li>
    <li><a href="timer/index.htm">timer</a> - Event timer,
        progress timer, and progress display classes, from Beman
        Dawes.</li>
    <li><a href="tokenizer/index.htm">tokenizer</a> - Break of a string or other
      character sequence into a series of tokens, from John Bandela.</li>
    <li><a href="tuple/doc/tuple_users_guide.html">tuple</a> - Ease definition of functions returning multiple values, and more,
    from Jaakko Järvi.</li>
    <li><a href="type_traits/index.htm">type_traits</a> -
        Templates for fundamental properties of types, from John
        Maddock, Steve Cleary, et al.</li>
    <li><a href="utility/utility.htm">utility</a> - Class <b>noncopyable</b>
        plus <b>checked_delete()</b>, <b>checked_array_delete()</b>, <b>next(),</b>&nbsp;
      <b>prior(),</b> and <b>tie()</b>
        function templates, from Dave Abrahams and others. </li>
</ul>

<p>See <a href="../status/compiler_status.html">Compiler Status</a>
to find out what library works with which compiler.</p>

<p>See <a href="hdr_depend.html">Header Dependencies</a> to find
out what other headers each boost header includes.</p>

<p>See <a href="../more/download.html">Download and Installation</a> to find out
how to download and install the libraries.</p>

<p>See <a href="../tools/build/index.html">Building Boost Libraries</a> to find
out how to build object libraries, when needed.</p>

<h2>Obsolete Libraries</h2>

<ul>
    <li><a href="min_rand/index.htm">min_rand</a> - a random
        number generator class from Beman Dawes. Replaced by <a
        href="random/index.html">random</a>.</li>
</ul>

<h2>Beta Libraries</h2>

<ul>
    <li><a href="array_traits/index.html">array_traits</a> -
        tools to treat built-in arrays more like STL containers
        from Dietmar Kühl. Also see <a href="array/index.htm">array</a>.</li>
    <li><a href="dir_it/index.htm">dir_it</a> - A set of file
        system directory level iterators from Dietmar Kühl.</li>
    <li><a href="pri_queue/index.html">heaps</a> - a heap of
        priority queues from Dietmar Kühl.</li>
</ul>

<hr>

<p>Revised <!--webbot bot="Timestamp" s-type="EDITED"
s-format="%d %b %Y" startspan -->19 Aug 2001<!--webbot bot="Timestamp" endspan i-checksum="14767" --></p>
</body>
</html>
