#  (C) Copyright Gennadiy Rozental 2001-2004.
#  Distributed under the Boost Software License, Version 1.0. 
#  (See accompanying file LICENSE_1_0.txt or copy at www.boost.org/LICENSE_1_0.txt)
#
#  See http://www.boost.org/libs/test for the library home page.

subproject libs/test/build ;

PRG_EXEC_MON_SOURCES =
  execution_monitor
  cpp_main
  ;

TEST_EXEC_MON_SOURCES =
  compiler_log_formatter
  execution_monitor
  framework
  logged_expectations
  plain_report_formatter
  progress_monitor
  results_collector
  results_reporter
  test_main
  test_tools
  unit_test_log
  unit_test_main
  unit_test_monitor
  unit_test_parameters
  unit_test_suite
  xml_log_formatter
  xml_report_formatter
  ;

UTF_SOURCES =
  compiler_log_formatter
  exception_safety
  execution_monitor
  framework
  interaction_based
  logged_expectations
  plain_report_formatter
  progress_monitor
  results_collector
  results_reporter
  test_tools
  unit_test_log
  unit_test_main
  unit_test_monitor
  unit_test_parameters
  unit_test_suite
  xml_log_formatter
  xml_report_formatter
  ;

    

template boost_test_dll
     ## sources ##
     : 
     ## requirements ##
     : <borland><*><cxxflags>-w-8080
      # the "common-variant-tag" rule ensures that the library will
      # be named according to the rules used by the install
      # and auto-link features:
      common-variant-tag 
      # tell our source that we're building (and maybe using) dll's:
      <define>BOOST_ALL_DYN_LINK=1
      # only build this for dynamic runtimes:
      <runtime-link>dynamic
      # set include path for Boost headers:
      <sysinclude>$(BOOST_ROOT)
     ## default build ##
     : debug release
     ;

template boost_test_lib 
     ## sources ##
     : 
     ## requirements ##
     : <sysinclude>$(BOOST_ROOT) <borland><*><cxxflags>-w-8080 
       common-variant-tag       
     ## default build ##
     : debug release <runtime-link>static/dynamic
     ;

lib boost_prg_exec_monitor    : <template>boost_test_lib
                                ../src/$(PRG_EXEC_MON_SOURCES).cpp ;

lib boost_test_exec_monitor   : <template>boost_test_lib
                                ../src/$(TEST_EXEC_MON_SOURCES).cpp ; 

lib boost_unit_test_framework : <template>boost_test_lib
                                ../src/$(UTF_SOURCES).cpp ; 

dll boost_unit_test_framework : <template>boost_test_dll
                                ../src/$(UTF_SOURCES).cpp ;

dll boost_prg_exec_monitor    : <template>boost_test_lib
                                ../src/$(PRG_EXEC_MON_SOURCES).cpp ;

install test lib
    :
        <dll>boost_prg_exec_monitor
        <dll>boost_unit_test_framework
        <lib>boost_prg_exec_monitor
        <lib>boost_test_exec_monitor
        <lib>boost_unit_test_framework
    ;

stage stage/lib 
    : 
        <dll>boost_prg_exec_monitor
        <dll>boost_unit_test_framework
        <lib>boost_prg_exec_monitor
        <lib>boost_test_exec_monitor
        <lib>boost_unit_test_framework

    :
        <locate>$(BOOST_ROOT)
        common-stage-tag
        <tag><postfix>-$(version-tag)
        <target>stage
        <target>all
    :
        debug release
    ;
