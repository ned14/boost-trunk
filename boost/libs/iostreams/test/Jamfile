# Boost.Iostreams Library test Jamfile

# (C) Copyright Jonathan Turkanis 2004
# Distributed under the Boost Software License, Version 1.0. (See accompanying 
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)

# See http://www.boost.org/libs/iostreams for documentation.

subproject libs/iostreams/test ;

# bring in rules for testing
import testing ;

# import compression libraries
import ../build/bzip2 ;
import ../build/zlib ;

# Make tests run by default.
DEPENDS all : test ;

{
    # look in BOOST_ROOT for sources first, just in this Jamfile
    local SEARCH_SOURCE = $(BOOST_ROOT) $(SEARCH_SOURCE) ;

    template bzip2
        : # sources
          <template>basic
          <lib>../build/boost_iostreams
          <lib>../build/boost_bzip2
        : # build requirements
          <define>BOOST_IOSTREAMS_NO_LIB
        : # build variants
        ;

    template zlib
        : # sources
          <template>basic
          <lib>../build/boost_iostreams
          <lib>../build/boost_zlib
        : # build requirements
          <define>BOOST_IOSTREAMS_NO_LIB
        : # build variants
        ;

    rule test-iostreams ( sources * : requirements * ) {
        return [
            run
                $(sources)
                <lib>../../test/build/boost_unit_test_framework
            : # command
            : # input files
            : # build requirements
                <vc-6_5-stlport><*><runtime-link>static
                <define>BOOST_IOSTREAMS_NO_LIB
                $(requirements)
        ] ;
    }
    
    rule intialize_suite {
        TEST_SUITE =
          [ test-iostreams libs/iostreams/test/array_test.cpp ]
          [ test-iostreams libs/iostreams/test/auto_close_test.cpp ]
          [ test-iostreams libs/iostreams/test/buffer_size_test.cpp ]
          [ test-iostreams 
                libs/iostreams/test/code_converter_test.cpp 
                libs/iostreams/test/detail/utf8_codecvt_facet.cpp 
              : # build requirements 
                std::locale-support ]   
          [ test-iostreams libs/iostreams/test/component_access_test.cpp ]
          [ test-iostreams libs/iostreams/test/compose_test.cpp ]
          [ test-iostreams libs/iostreams/test/copy_test.cpp ]
          [ test-iostreams libs/iostreams/test/counter_test.cpp ]
          [ test-iostreams libs/iostreams/test/direct_adapter_test.cpp ]
          [ test-iostreams libs/iostreams/test/example_test.cpp ]
          [ test-iostreams libs/iostreams/test/file_test.cpp ]
          [ test-iostreams 
                libs/iostreams/test/file_descriptor_test.cpp 
                libs/iostreams/src/file_descriptor.cpp ]
          [ test-iostreams libs/iostreams/test/filtering_stream_test.cpp ]
          [ test-iostreams 
                libs/iostreams/test/finite_state_filter_test.cpp 
              : # build requirements 
                std::locale-support ]
          [ test-iostreams libs/iostreams/test/flush_test.cpp ]
          [ test-iostreams libs/iostreams/test/invert_test.cpp ]
          [ test-iostreams libs/iostreams/test/line_filter_test.cpp ]
          [ test-iostreams 
                libs/iostreams/test/mapped_file_test.cpp 
                libs/iostreams/src/mapped_file.cpp ]
          [ test-iostreams libs/iostreams/test/newline_test.cpp ]
          [ test-iostreams libs/iostreams/test/null_test.cpp ]
          [ test-iostreams libs/iostreams/test/pipeline_test.cpp ]
          [ test-iostreams libs/iostreams/test/positioning_test.cpp ]
          [ test-iostreams 
                libs/iostreams/test/regex_filter_test.cpp     
                <lib>../../regex/build/boost_regex ]
          [ test-iostreams libs/iostreams/test/restrict_test.cpp ]
          [ test-iostreams libs/iostreams/test/seekable_file_test.cpp ]
          [ test-iostreams libs/iostreams/test/seekable_filter_test.cpp ]
          [ test-iostreams libs/iostreams/test/stdio_filter_test.cpp ]
          [ test-iostreams libs/iostreams/test/symmetric_filter_test.cpp ]
          [ test-iostreams libs/iostreams/test/tee_test.cpp ]
          [ test-iostreams libs/iostreams/test/wide_stream_test.cpp ] ;
          
        if ! $(NO_BZIP2) 
        {
            TEST_SUITE += 
                [ test-iostreams 
                      libs/iostreams/test/bzip2_test.cpp 
                      <template>bzip2 
                    : # build requirements
                      <define>BOOST_IOSTREAMS_NO_LIB ] ;
        }

        if ! $(NO_ZLIB) 
        {
            TEST_SUITE += 
                [ test-iostreams 
                      libs/iostreams/test/gzip_test.cpp 
                      <template>zlib
                    : # build requirements
                      <define>BOOST_IOSTREAMS_NO_LIB ]
                [ test-iostreams 
                      libs/iostreams/test/zlib_test.cpp 
                      <template>zlib
                    : # build requirements
                      <define>BOOST_IOSTREAMS_NO_LIB ] ;
        }
    }
    
    intialize_suite ;

    test-suite "iostreams"
        : $(IOSTREAMS_TEST_SUITE)
        ;
}
