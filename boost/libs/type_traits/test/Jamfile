
subproject libs/type_traits/test ;

# bring in the rules for testing
SEARCH on testing.jam = $(BOOST_BUILD_PATH) ;
include testing.jam ;

{

local TYPE_TRAIT_PATH = "" ;
local TEST_LIB_PATH = "../../test/build/" ;


	
test-suite type_traits :

	[ lib type_traits_init : $(TYPE_TRAIT_PATH)init.cpp 
    	: 
        	<sysinclude>$(BOOST_ROOT)
    	: 
    ]
    
    			
	[ run $(TYPE_TRAIT_PATH)add_const_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)add_pointer_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)add_reference_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)add_volatile_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)alignment_of_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)function_traits_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_nothrow_assign_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_nothrow_constructor_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_nothrow_copy_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_trivial_assign_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_trivial_constructor_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_trivial_copy_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)has_trivial_destructor_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_arithmetic_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_array_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_base_and_derived_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_class_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_compound_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_const_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_convertible_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_empty_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_enum_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_float_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_function_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_fundamental_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_integral_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_member_function_pointer_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_member_pointer_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_object_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_pod_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_pointer_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_polymorphic_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_reference_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_same_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_scalar_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_stateless_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_union_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_void_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)is_volatile_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)remove_bounds_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)remove_const_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)remove_cv_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)remove_pointer_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)remove_reference_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)remove_volatile_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)tricky_abstract_type_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)tricky_add_pointer_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)tricky_function_type_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)tricky_partial_specialization_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			
			
	[ run $(TYPE_TRAIT_PATH)type_with_alignment_test.cpp
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
		]
			

	[ run $(TYPE_TRAIT_PATH)type_with_alignment_test.cpp $(TYPE_TRAIT_PATH)tricky_partial_specialization_test.cpp $(TYPE_TRAIT_PATH)tricky_function_type_test.cpp $(TYPE_TRAIT_PATH)tricky_add_pointer_test.cpp $(TYPE_TRAIT_PATH)tricky_abstract_type_test.cpp $(TYPE_TRAIT_PATH)remove_volatile_test.cpp $(TYPE_TRAIT_PATH)remove_reference_test.cpp $(TYPE_TRAIT_PATH)remove_pointer_test.cpp $(TYPE_TRAIT_PATH)remove_cv_test.cpp $(TYPE_TRAIT_PATH)remove_const_test.cpp $(TYPE_TRAIT_PATH)remove_bounds_test.cpp $(TYPE_TRAIT_PATH)is_volatile_test.cpp $(TYPE_TRAIT_PATH)is_void_test.cpp $(TYPE_TRAIT_PATH)is_union_test.cpp $(TYPE_TRAIT_PATH)is_stateless_test.cpp $(TYPE_TRAIT_PATH)is_scalar_test.cpp $(TYPE_TRAIT_PATH)is_same_test.cpp $(TYPE_TRAIT_PATH)is_reference_test.cpp $(TYPE_TRAIT_PATH)is_polymorphic_test.cpp $(TYPE_TRAIT_PATH)is_pointer_test.cpp $(TYPE_TRAIT_PATH)is_pod_test.cpp $(TYPE_TRAIT_PATH)is_object_test.cpp $(TYPE_TRAIT_PATH)is_member_pointer_test.cpp $(TYPE_TRAIT_PATH)is_member_function_pointer_test.cpp $(TYPE_TRAIT_PATH)is_integral_test.cpp $(TYPE_TRAIT_PATH)is_fundamental_test.cpp $(TYPE_TRAIT_PATH)is_function_test.cpp $(TYPE_TRAIT_PATH)is_float_test.cpp $(TYPE_TRAIT_PATH)is_enum_test.cpp $(TYPE_TRAIT_PATH)is_empty_test.cpp $(TYPE_TRAIT_PATH)is_convertible_test.cpp $(TYPE_TRAIT_PATH)is_const_test.cpp $(TYPE_TRAIT_PATH)is_compound_test.cpp $(TYPE_TRAIT_PATH)is_class_test.cpp $(TYPE_TRAIT_PATH)is_base_and_derived_test.cpp $(TYPE_TRAIT_PATH)is_array_test.cpp $(TYPE_TRAIT_PATH)is_arithmetic_test.cpp $(TYPE_TRAIT_PATH)has_trivial_destructor_test.cpp $(TYPE_TRAIT_PATH)has_trivial_copy_test.cpp $(TYPE_TRAIT_PATH)has_trivial_constructor_test.cpp $(TYPE_TRAIT_PATH)has_trivial_assign_test.cpp $(TYPE_TRAIT_PATH)has_nothrow_copy_test.cpp $(TYPE_TRAIT_PATH)has_nothrow_constructor_test.cpp $(TYPE_TRAIT_PATH)has_nothrow_assign_test.cpp $(TYPE_TRAIT_PATH)function_traits_test.cpp $(TYPE_TRAIT_PATH)alignment_of_test.cpp $(TYPE_TRAIT_PATH)add_volatile_test.cpp $(TYPE_TRAIT_PATH)add_reference_test.cpp $(TYPE_TRAIT_PATH)add_pointer_test.cpp $(TYPE_TRAIT_PATH)add_const_test.cpp 
   		<lib>$(TYPE_TRAIT_PATH)type_traits_init 
   		<lib>$(TEST_LIB_PATH)unit_test_framework 
		:
			--report_level=detailed --build_info=yes --log_level=messages
		: 
		:
			<sysinclude>$(BOOST_ROOT)
		:
			type_traits_tests
		]

;

}

