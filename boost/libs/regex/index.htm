<!DOCTYPE HTML PUBLIC "-//w3c//dtd html 4.0 transitional//en">
 
<HTML>
 
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1"> 
<META NAME="keywords"
 CONTENT="regex++, regular expressions, regular expression library, C++"> 
<META NAME="Template"
 CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot"> 
<META NAME="GENERATOR" CONTENT="Mozilla/4.5 [en] (Win98; I) [Netscape]"> 
<TITLE>regex++, Index</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#800080">
&nbsp; <TABLE BORDER="0" CELLSPACING="0" CELLPADDING="7" WIDTH="100%">
<TR>
<TD VALIGN="TOP" WIDTH="50%"> <H3>
<IMG SRC="../../c++boost.gif" HEIGHT="86" WIDTH="277" ALT="C++ Boost"></H3>
</TD>
<TD VALIGN="TOP" WIDTH="50%"> <CENTER>
<H3> Regex++, Index.</H3>
</CENTER>
<CENTER>
<I>(version 3.01, 18 April 2000)</I> 
</CENTER>
<PRE><I>Copyright (c) 1998-2000
Dr John Maddock

Permission to use, copy, modify, distribute and sell this software
and its documentation for any purpose is hereby granted without fee,
provided that the above copyright notice appear in all copies and
that both that copyright notice and this permission notice appear
in supporting documentation.&nbsp; Dr John Maddock makes no representations
about the suitability of this software for any purpose.&nbsp;&nbsp;
It is provided &quot;as is&quot; without express or implied warranty.</I></PRE>

</TD>
</TR>
</TABLE>
<HR>
<CENTER>
<H3> Contents</H3>
</CENTER>
<UL>
<LI> <A HREF="introduction.htm#intro">Introduction</A></LI>
<LI> <A HREF="introduction.htm#Installation">Installation and Configuration</A>
</LI>
<LI> <A HREF="template_class_ref.htm#regbase">Template Class and Algorithm
Reference</A> <UL>
<LI> Class <A HREF="template_class_ref.htm#regbase">regbase</A></LI>
<LI> Class <A HREF="template_class_ref.htm#bad_expression">bad_expression</A> 
</LI>
<LI> Class <A HREF="template_class_ref.htm#reg_expression">reg_expression</A> 
</LI>
<LI> Class <A
HREF="template_class_ref.htm#regex_char_traits">char_regex_traits</A></LI>
<LI> Class <A HREF="template_class_ref.htm#match_results">match_results</A>
</LI>
<LI> Algorithm <A HREF="template_class_ref.htm#query_match">regex_match</A> 
</LI>
<LI> Algorithm <A HREF="template_class_ref.htm#reg_search">regex_search</A> 
</LI>
<LI> Algorithm <A HREF="template_class_ref.htm#reg_grep">regex_grep</A></LI>
<LI> Algorithm <A HREF="template_class_ref.htm#reg_format">regex_format</A> 
</LI>
<LI> Algorithm <A HREF="template_class_ref.htm#reg_merge">regex_merge</A></LI>
<LI> Algorithm <A HREF="template_class_ref.htm#regex_split">regex_split</A> 
</LI>
</UL>
</LI>
<LI> Class <A HREF="hl_ref.htm#RegEx">RegEx</A> reference</LI>
<LI> <A HREF="posix_ref.htm#posix">POSIX Compatibility Functions</A></LI>
<LI> <A HREF="syntax.htm#syntax">Regular Expression Syntax</A></LI>
<LI> <A HREF="format_string.htm#format_string">Format String Syntax</A></LI>
<LI> <A HREF="appendix.htm#implementation">Appendices</A> <UL>
<LI> <A HREF="appendix.htm#implementation">Implementation notes</A></LI>
<LI> <A HREF="appendix.htm#threads">Thread safety</A></LI>
<LI> <A HREF="appendix.htm#localisation">Localization</A></LI>
<LI> <A HREF="appendix.htm#demos">Demo Applications</A> <UL>
<LI> <A HREF="demo/snippets/snip1.cpp">snip1.cpp</A>: ftp based regex_match
example.</LI>
<LI><A HREF="demo/snippets/snip2.cpp">snip2.cpp</A>: regex_search example:
searches a cpp file for class definitions.</LI>
<LI><A HREF="demo/snippets/snip3.cpp">snip3.cpp</A>: regex_grep example 1:
searches a cpp file for class definitions.</LI>
<LI><A HREF="demo/snippets/snip4.cpp">snip4.cpp</A>: regex_merge example:
converts a C++ file to syntax highlighted HTML.</LI>
<LI><A HREF="demo/snippets/snip5.cpp">snip5.cpp</A>: regex_grep example 2:
searches a cpp file for class definitions, using a global callback function. 
</LI>
<LI><A HREF="demo/snippets/snip6.cpp">snip6.cpp</A>: regex_grep example 2:
searches a cpp file for class definitions, using a bound member function
callback.</LI>
<LI><A HREF="demo/snippets/snip7.cpp">snip7.cpp</A>: regex_grep example 2:
searches a cpp file for class definitions, using a C++ Builder closure as a
callback.</LI>
<LI><A HREF="demo/snippets/snip8.cpp">snip8.cpp</A>: regex_split example: split
a string into tokens.</LI>
<LI><A HREF="demo/snippets/snip9.cpp">snip9.cpp</A>: regex_split example: spit
out linked URL's.</LI>
</UL>
</LI>
<LI> <A HREF="appendix.htm#headers">Header Files.</A></LI>
<LI> <A HREF="appendix.htm#redist">Redistributables</A></LI>
<LI> <A HREF="appendix.htm#upgrade">Note for upgraders</A></LI>
</UL>
</LI>
<LI> <A HREF="appendix.htm#furtherInfo">Further Information</A> </LI>
<LI><A HREF="faq.htm">FAQ</A></LI>
</UL>
<HR>
<P><I>Copyright <A HREF="mailto:John_Maddock@compuserve.com">Dr John
Maddock</A> 1998-2000 all rights reserved.</I> </P>
</BODY>
</HTML>

