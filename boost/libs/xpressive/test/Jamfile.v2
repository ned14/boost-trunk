# (C) Copyright 2004: Eric Niebler
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

# bring in rules for testing
import testing ;

# NOT PORTED YET.
# A bug in the Win32 intel compilers causes compilation of one of our
# tests to take forever when debug symbols are enabled. This rule
# turns them off when added to the requirements section
#local rule xpressive-requirements ( toolset variant : properties * )
#{
#    if $(NT) && [ MATCH (.*intel.*) : $(toolset) ]
#    {
#        properties = [ difference $(properties) : <debug-symbols>on ] <debug-symbols>off ;
#    }
#    if [ MATCH (.*stlport.*) : $(toolset) ]
#    {
#        properties = $(properties) <define>_STLP_EXPOSE_GLOBALS_IMPLEMENTATION ;
#    }
#    return $(properties) ;
#}

test-suite "xpressive"
       : [ run regress.cpp ]
         [ run c_traits.cpp ]
         [ run test1.cpp ]
         [ run test2.cpp ]
         [ run test3.cpp ]
         [ run test4.cpp ]
         [ run test5.cpp ]
         [ run test6.cpp ]
         [ run test7.cpp ]
         [ run test8.cpp ]
         [ run test9.cpp ]
	 [ run test10.cpp ]
	 [ run test11.cpp ]
         [ run test1u.cpp ]
         [ run test2u.cpp ]
         [ run test3u.cpp ]
         [ run test4u.cpp ]
         [ run test5u.cpp ]
         [ run test6u.cpp ]
         [ run test7u.cpp ]
         [ run test8u.cpp ]
         [ run test9u.cpp ]
	 [ run test10u.cpp ]
	 [ run test11u.cpp ]
         [ run misc1.cpp ]
         [ run test_cycles.cpp ]
         [ run test_non_char.cpp ]
         [ run test_static.cpp ]
         [ run test_dynamic.cpp ]
         [ link multiple_defs1.cpp multiple_defs2.cpp : : multiple_defs ]
         [ compile test_basic_regex.cpp ]
         [ compile test_match_results.cpp ]
         [ compile test_regex_algorithms.cpp ]
         [ compile test_regex_compiler.cpp ]
         [ compile test_regex_constants.cpp ]
         [ compile test_regex_error.cpp ]
         [ compile test_regex_iterator.cpp ]
         [ compile test_regex_primitives.cpp ]
         [ compile test_regex_token_iterator.cpp ]
         [ compile test_regex_traits.cpp ]
         [ compile test_sub_match.cpp ]
    ;
