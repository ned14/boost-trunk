# Boost.Wave: A Standard compliant C++ preprocessor library
#
# Boost Wave Library Build Jamfile
#
# http://www.boost.org/
#
# Copyright (c) 2001-2005 Hartmut Kaiser. Distributed under the Boost 
# Software License, Version 1.0. (See accompanying file 
# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

subproject libs/wave/build ;

SOURCES = instantiate_cpp_exprgrammar 
          instantiate_cpp_grammar 
          instantiate_cpp_literalgrs 
          instantiate_defined_grammar
          instantiate_predef_macros 
          instantiate_re2c_lexer
          instantiate_re2c_lexer_str
          cpplexer/re2clex/aq 
          cpplexer/re2clex/cpp_re
    ;

lib boost_wave
    : ../src/$(SOURCES).cpp
    :                         # build requirements
      [ common-names ]        # magic for install and auto-link features
      <include>$(BOOST_ROOT) 
      <sysinclude>$(BOOST_ROOT)
      <vc-7_1><*><rtti>off    # workaround for compiler bug
      <vc-7_1-stlport><*><rtti>off
      <no-warn>cpp_re.cpp
    : debug release           # build variants
    ;

#dll boost_wave
#    : ../src/$(SOURCES).cpp
#    :                        # build requirements
#      [ common-names ]       # magic for install and auto-link features
#      <define>BOOST_WAVE_DYN_LINK=1  # tell source we're building dll's
#      <runtime-link>dynamic  # build only for dynamic runtimes
#      <include>$(BOOST_ROOT) 
#      <sysinclude>$(BOOST_ROOT)
#    : debug release          # build variants
#    ;

install wave lib
    : <lib>boost_wave 
#      <dll>boost_wave
    ;

stage stage/lib : <lib>boost_wave # <dll>boost_wave
    :     
     # copy to a path rooted at BOOST_ROOT:
       <locate>$(BOOST_ROOT)
     # make sure the names of the libraries are correctly named:
       [ common-names ]
     # add this target to the "stage" and "all" pseudo-targets:
       <target>stage
       <target>all
    :
       debug release
    ;

# end
