# Boost.Wave: A Standard compliant C++ preprocessor library
#
# Boost Wave Library Test Jamfile
#
# http://www.boost.org/
#
# Copyright (c) 2001-2005 Hartmut Kaiser. Distributed under the Boost 
# Software License, Version 1.0. (See accompanying file 
# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)


#
# These are the sources to compile for the testwave application
#
SOURCES = testwave testwave_app
    ;
    
path-constant TESTWAVE_DIR : ../testwave/testfiles ;    

#
# This are the arguments for the testwave executable
#
TESTWAVE_ARGUMENTS = 
        -d4                              # use -d4 for verbose results 
        -S$(TESTWAVE_DIR) 
        -S$(BOOST_ROOT) -I$(BOOST_ROOT)
    ;

#
# These are the names of the different unit tests to run
#
TESTWAVE_FILES = test.cfg
    ;


project wave/test
    : requirements
        <toolset-msvc:version>7.1:<rtti>off   # workaround for compiler bug
        <toolset-msvc:version>7.1_stlport4:<rtti>off 
#        <os>NT:<runtime-link>static
        <threading>single
        <variant>debug
        <define>BOOST_LIB_DIAGNOSTIC=1
	<define>BOOST_ALL_NO_LIB=1
	<link>shared:<define>BOOST_ALL_DYN_LINK=1
    ;

#
# Wave test suite
#
test-suite wave
    : 
        [   
            run
            # sources
                ../testwave/$(SOURCES).cpp
                /boost/wave//boost_wave 
                /boost/program_options//boost_program_options
                /boost/filesystem//boost_filesystem    
            :
            # arguments
                $(TESTWAVE_ARGUMENTS) 
                --config-file $(TESTWAVE_DIR)/$(TESTWAVE_FILES)
            :
            # input files
            :
            # requirements
            :
            # name
                testwave_dll
        ]

        [   
            run
            # sources
                ../testwave/$(SOURCES).cpp
                /boost/wave//boost_wave/<link>static
                /boost/program_options//boost_program_options/<link>static
                /boost/filesystem//boost_filesystem/<link>static
            :
            # arguments
                $(TESTWAVE_ARGUMENTS) 
                --config-file $(TESTWAVE_DIR)/$(TESTWAVE_FILES)
            :
            # input files
            : 
            # requirements
	    <link>static     # Linking to DLL tested by testwave_dll
            : 
            # name
                testwave
        ]

        # test the Slex wave lexing component
        [   
            run
            # sources
                ../testlexers/test_slex_lexer.cpp
                /boost/wave//boost_wave
            :
            # arguments
            :
            # input files
            :
            # requirements
            :
            # name
                test_slex_lexer
        ]
        # test the Re2C wave lexing component
        [   
            run
            # sources
                ../testlexers/test_re2c_lexer.cpp
                /boost/wave//boost_wave
            :
            # arguments
            :
            # input files
            :
            # requirements
            :
            # name
                test_re2c_lexer
        ]

    ;

