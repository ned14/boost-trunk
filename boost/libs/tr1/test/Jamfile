# Copyright John Maddock 2005

subproject libs/tr1/test ;

# bring in the rules for testing
import testing ;

#
# define the sources which need testing, mostly this is just
# all the files *_test.cpp, but any badly named examples can 
# be added to this list :-)
#

# this rule enumerates through all the sources and invokes
# the run rule for each source, the result is a list of all
# the run rules, which we can pass on to the test_suite rule:
rule test_all
{
   #ECHO executing test_all rule ;
   local all_rules = ;
   for local file in [ GLOB $(BOOST_ROOT)/libs/tr1/test : test*.cpp ]
   {
      all_rules += [ compile $(file)
         : <include>$(BOOST_ROOT) ] ;
      all_rules += [ compile $(file) 
         : #<sysinclude>$(BOOST_ROOT)/boost/tr1/tr1 
           <include>$(BOOST_ROOT)/boost/tr1/tr1 
           <include>$(BOOST_ROOT)/boost/tr1/tr1/bcc32 
           <include>$(BOOST_ROOT) 
           <define>TEST_STD_HEADERS=1 : std_$(file:B) ] ;
   }
   for local fileb in [ GLOB $(BOOST_ROOT)/libs/tr1/test : run*.cpp ]
   {
      all_rules += [ run $(fileb) ] ;
      all_rules += [ run $(fileb) 
      :  # additional args
      :  # test-files
      :  # requirements
		#<sysinclude>$(BOOST_ROOT)/boost/tr1/tr1 
		<include>$(BOOST_ROOT)/boost/tr1/tr1 
		<include>$(BOOST_ROOT)/boost/tr1/tr1/bcc32 
      <include>$(BOOST_ROOT) 
		<define>TEST_STD_HEADERS=1 : std_$(fileb:B)  ] ;
   }
   for local file2 in [ GLOB $(BOOST_ROOT)/libs/tr1/test/config : has_tr1*fail.cpp ]
   {
      local test = [ compile-fail $(file2) : <include>$(BOOST_ROOT) ] ;
      all_rules += $(test) ;
   }
   for local filec in [ GLOB $(BOOST_ROOT)/libs/tr1/test/config : has_tr1*pass.cpp ]
   {
      local test = [ compile $(filec) : <include>$(BOOST_ROOT) ] ;
      all_rules += $(test) ;
   }
   
   for local file3 in [ GLOB $(BOOST_ROOT)/libs/tr1/test/type_traits : *.cpp ]
   {
      all_rules += [ run $(file3) 
      :  # additional args
      :  # test-files
      :  # requirements
        <include>$(BOOST_ROOT)/boost/tr1/tr1  
        #<sysinclude>$(BOOST_ROOT)/boost/tr1/tr1 
        <include>$(BOOST_ROOT)/boost/tr1/tr1/bcc32 
        <include>$(BOOST_ROOT)/libs/type_traits/test 
        <include>$(BOOST_ROOT) 
        <define>TEST_STD=1 ] ;
   }
   for local file5 in [ GLOB $(BOOST_ROOT)/libs/tr1/test/std_headers : *.cpp ]
   {
      all_rules += [ compile $(file5) 
      :   
        <include>$(BOOST_ROOT)/boost/tr1/tr1 
        #<sysinclude>$(BOOST_ROOT)/boost/tr1/tr1 
        <include>$(BOOST_ROOT)/boost/tr1/tr1/bcc32 
        <include>$(BOOST_ROOT) 
        <define>TEST_STD=1 ] ;
   }
   #ECHO $(all_rules) ;
   return $(all_rules) ;
}

test-suite tr1 : [ test_all r ] ; 








