<explicit-failures-markup>

  <!-- Toolsets -->

  <mark-toolset name="borland-5.6.4" status="required">
    <title></title>
    <description></description>
  </mark-toolset>

  <mark-toolset name="cwpro8" status="required">
    <title></title>
    <description></description>
  </mark-toolset>

  <mark-toolset name="msvc" status="required">
    <title></title>
    <description></description>
  </mark-toolset>

  <mark-toolset name="msvc-stlport" status="required">
    <title></title>
    <description></description>
  </mark-toolset>

  <mark-toolset name="vc7" status="required">
    <title></title>
    <description></description>
  </mark-toolset>

  <mark-toolset name="vc7.1" status="required">
    <title></title>
    <description></description>
  </mark-toolset>


  <!-- Libraries -->

    <library name="array">
        <test name="array3">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>

        <test name="array4">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>
    </library>

    <library name="concept_check">
        <test name="class_concept_fail_expected">
            <mark-failure>
                <toolset name="cwpro8"/>
                <note author="B. Dawes" refid="3"/>
            </mark-failure>
        </test>
    </library>

    <library name="config">
        <test name="config_test">
            <mark-failure>
                <toolset name="intel-win32"/>
                <toolset name="intel-win32-7.1-vc6-stlport-4.5.3"/>
                <note author="B. Dawes" refid="3"/>
            </mark-failure>
        </test>

        <test name="config_link_test">
            <mark-failure>
                <toolset name="meta-como-win32-4.3.3-vc7"/>
                <note author="J. Maddock" refid="3"/>
            </mark-failure>
        </test>
        
        <test name="limits_test">
            <mark-failure>
                <toolset name="cwpro8"/>
                <note author="B. Dawes" refid="3"/>
            </mark-failure>
        </test>
    </library>

    <library name="date_time">
        <mark-unusable>
            <toolset name="intel-win32"/>
            <note author="B. Dawes" refid="10"/>
        </mark-unusable>

        <test name="testmicrosec_time_clock">
            <mark-failure>
                <toolset name="gcc"/>
                <note author="B. Dawes" refid="14"/>
            </mark-failure>
        </test>

        <test name="*">
            <mark-failure>
                <toolset name="intel-win32"/>
                <note refid="10"/>
            </mark-failure>
        </test>

    </library>

  <library name="lambda">
    <mark-unusable>
      <toolset name="msvc"/>
      <toolset name="msvc-stlport"/>
      <toolset name="borland"/>
      <toolset name="borland-5.6.4"/>
      <toolset name="borland-5.5.1"/>
      <toolset name="vc7"/>

      <note>
        TBD: Explain why it is not usable 
      </note>
    </mark-unusable>
  </library>

  <library name="multi_array">
    <mark-unusable>
      <toolset name="borland"/>
      <toolset name="borland-5.6.4"/>
      <toolset name="borland-5.5.1"/>

      <note author="Alisdair Meredith" date="30 Jan 2004">
        <p>
        This library has never worked [on Borland 5.5.1 and 5.6.4], and the only tests that 'pass' are
        compile-fail tests failing for the wrong reasons!
        </p>
      </note>
    </mark-unusable>
  </library>


    <library name="spirit">
        <mark-unusable>
            <toolset name="msvc"/>
            <toolset name="msvc-stlport"/>
            <toolset name="borland-5.5.1"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="vc7"/>
            <toolset name="gcc-2.95.3-linux"/>
            <toolset name="gcc-2.95.3-stlport-4.5.3-linux"/>
      <note>
          <p>
            Historically, Spirit supported a lot of compilers, including (to some
            extent) poorly conforming compilers such as VC6. Spirit v1.6.x will be
            the last release that will support older poorly conforming compilers.
            Starting from Spirit v1.8.0, ill conforming compilers will not be       
            supported. If you are still using one of these older compilers, you can
            still use Spirit v1.6.x.
          </p>

          <p>
            The reason why Spirit v1.6.x worked on old non-conforming compilers is
            that the authors laboriously took the trouble of searching for
            workarounds to make these compilers happy. The process takes a lot of
            time and energy, especially when one encounters the dreaded ICE or
            "Internal Compiler Error". Sometimes searching for a single workaround
            takes days or even weeks. Sometimes, there are no known workarounds. This
            stifles progress a lot. And, as the library gets more progressive and
            takes on more advanced C++ techniques, the difficulty is escalated to
            even new heights.
          </p>

          <p>           
            Spirit v1.6.x will still be supported. Maintenance and bug fixes will
            still be applied. There will still be active development for the back-
            porting of new features introduced in Spirit v1.8.0 (and Spirit 1.9.0)
            to lesser able compilers; hopefully, fueled by contributions from the
            community. For instance, there is already a working AST tree back-port
            for VC6 and VC7 by Peder Holt.
          </p>

      </note>
        </mark-unusable>
    </library>


  <!-- function -->

  <library name="function">

    <test name="allocator_test">
        <mark-failure>
            <toolset name="msvc"/>
            <toolset name="vc7"/>

            <note author="B.Dawes" refid="5"/>
        </mark-failure>
    </test>

    <test name="function_arith_cxx98">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="3"/>
        </mark-failure> 
    </test>

    <test name="function_ref_cxx98">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="3"/>
        </mark-failure> 
    </test>

    <test name="lambda_test">
        <mark-failure>
           <toolset name="borland"/>
           <toolset name="borland-5.6.4"/>
           <toolset name="msvc"/>
           <toolset name="vc7"/>
           <note author="B. Dawes" refid="3"/>
        </mark-failure> 

        <mark-failure>
            <toolset name="cwpro8"/>
            <note author="B. Dawes" refid="2"/>
        </mark-failure> 
    </test>

    <test name="lib_function_test">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="3"/>
        </mark-failure> 

        <mark-failure>
            <toolset name="cwpro8"/>
            <note author="B. Dawes" refid="2"/>
        </mark-failure> 
    </test>

    <test name="mem_fun_cxx98">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="3"/>
        </mark-failure> 

        <mark-failure>
            <toolset name="cwpro8"/>
            <note author="B. Dawes" refid="2"/>
        </mark-failure> 
    </test>

    <test name="std_bind_cxx98">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="3"/>
        </mark-failure> 
    </test>

    <test name="std_bind_portable">
        <mark-failure>
            <toolset name="msvc"/>
            <note author="B. Dawes" refid="5"/>
        </mark-failure>
    </test>

    <test name="sum_avg_cxx98">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="3"/>
        </mark-failure> 
    </test>

  </library>


  <!-- iterator -->

  <library name="iterator">
    <test name="interoperable_fail">
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="2"/>
        </mark-failure>

        <mark-failure>
            <toolset name="gcc"/>
            <note refid="3"/>
        </mark-failure>

        <mark-failure> 
            <toolset name="*"/>
            <note author="D. Abrahams">
            This failure is caused by a compiler bug.  Templated operators
            which combine different iterators built with iterator_facade or
            iterator_adaptor be present in an overload set even when those
            iterators are not interoperable.  The usual result is that error
            messages generated by illegal use of these operators will be of
            lower quality.
            </note>
        </mark-failure>
    </test>

    <test name="is_convertible_fail" corner-case="yes" >
        <mark-failure>
            <toolset name="borland"/>
            <toolset name="borland-5.6.4"/>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note refid="2"/>
        </mark-failure>

        <mark-failure>
          <toolset name="*"/>
            <note author="D. Abrahams">
                This failure is caused by a compiler bug.
                <code>is_convertible&lt;T,U&gt;::value</code> may be true for unrelated
                iterators <code>T</code> and <code>U</code>
                (including many of the Boost specialized adaptors) which use
                <code>enable_if_convertible</code> to restrict the applicability
                of converting constructors, even when <code>T</code> is not
                convertible to <code>U</code> because instantiating the
                conversion will cause a compilation failure.
            </note>
        </mark-failure>
    </test>
  </library>

    <!-- math -->

    <library name="math">
        <test name="quaternion_mult_incl_test">
            <mark-failure>
                <toolset name="intel-win32"/>
                <note author="B. Dawes" refid="3"/>
            </mark-failure>
        </test>
    </library>

    <!-- python -->

    <library name="python">
        <mark-unusable>
            <toolset name="borland"/>
            <toolset name="borland-5.5.1"/>
            <toolset name="borland-5.6.4"/>
            <note refid="2"/>
            <note refid="17"/>
        </mark-unusable>
    </library>

    <!-- random -->

    <library name="random">
        <mark-unusable>
            <toolset name="msvc"/>
            <toolset name="vc7"/>
            <note author="B. Dawes" refid="10"/>
        </mark-unusable>

        <test name="random_test">
            <mark-failure>
                <toolset name="cwpro8"/>
                <toolset name="como-win32"/>
                <toolset name="intel-win32"/>
                <note author="B. Dawes" refid="3"/>
            </mark-failure>
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <note author="B. Dawes" refid="2"/>
            </mark-failure>
        </test>
    </library>

    <!-- regex -->

    <library name="regex">
        <test name="regex_token_iterator_eg_2">
            <mark-failure>
                <toolset name="msvc"/>
                <note author="J. Maddock"/>
            </mark-failure>
         </test>
        <test name="posix_api_check">
            <mark-failure>
                <toolset name="meta-como-win32-4.3.3-vc7"/>
                <note author="J. Maddock"/>
            </mark-failure>
         </test>
        <test name="regex_regress_dll">
            <mark-failure>
                <toolset name="meta-como-win32-4.3.3-vc7"/>
                <note author="J. Maddock"/>
            </mark-failure>
         </test>
        <test name="regex_wide_regress_dll">
            <mark-failure>
                <toolset name="meta-como-win32-4.3.3-vc7"/>
                <note author="J. Maddock"/>
            </mark-failure>
         </test>
    </library>

    <!-- signals -->

    <library name="signals">
        <test name="signal_test">
            <mark-failure>
                <toolset name="cwpro8"/>
                <note author="B. Dawes" refid="2"/>
            </mark-failure>
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note author="B. Dawes" refid="3"/>
            </mark-failure>
        </test>
    </library>

    <!-- static_assert -->

    <library name="static_assert">
        <test name="static_assert_test_fail_8">
            <toolset name="cwpro8"/>
            <note author="B. Dawes" refid="3"/>
        </test>
    </library>

    <!-- test -->

    <library name="test">
        <test name="errors_handling_test">
            <toolset name="como-win32"/>
            <note author="B. Dawes" refid="3"/>
        </test>
    </library>


    <!-- thread -->

    <library name="thread">
        <mark-unusable>
            <toolset name="gcc"/>
            <note author="B. Dawes" refid="6"/>
        </mark-unusable>
        <mark-unusable>
            <toolset name="como-win32"/>
            <note author="B. Dawes" refid="10"/>
        </mark-unusable>

        <test name="test_mutex">
            <mark-failure>
                <toolset name="vc7"/>            
                <note author="B. Dawes" refid="0"/>
                <note author="B. Dawes" refid="6"/>
            </mark-failure>
        </test>

    </library>

    <!-- tuple -->

    <library name="tuple">
        <test name="io_test">
            <toolset name="intel-win32"/>
            <note author="B. Dawes" refid="3"/>
        </test>
    </library>

    <!-- type_traits -->

    <library name="type_traits">
        <test name="function_traits_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

        <test name="remove_bounds_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

        <test name="remove_const_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

        <test name="remove_cv_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

        <test name="remove_pointer_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

        <test name="remove_reference_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

        <test name="remove_volatile_test">
            <markup-failure>
                <toolset name="msvc"/>             
                <toolset name="vc7"/>             
            </markup-failure>
        </test>

    </library>

    <!-- utility -->

    <library name="utility">
        <test name="enable_if_constructors">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_dummy_arg_disambiguation">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_lazy">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_lazy_test">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_member_templates">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_namespace_disambiguation">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_no_disambiguation">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="enable_if_partial_specializations">
            <mark-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </mark-failure>
        </test>        

        <test name="fun_out_iter_example">
            <mark-failure>
                <toolset name="como-win32"/>
                <note author="B. Dawes" refid="4"/>
            </mark-failure>
        </test>
    
    </library>

    <library name="variant">
        <test name="recursive_variant_test">
            <markup-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <toolset name="como-win32"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </markup-failure>
        </test>

        <test name="variant_test1">
            <markup-failure>
                <toolset name="borland"/>
                <toolset name="borland-5.6.4"/>
                <note refid="2"/>
            </markup-failure>
        </test>

        <test name="variant_reference_test">
            <markup-failure>
                <toolset name="cwpro8"/>
                <toolset name="msvc"/>
                <toolset name="vc7"/>
                <note refid="3"/>
            </markup-failure>
            <markup-failure>
                <toolset name="intel-win32"/>
                <note refid="2"/>
            </markup-failure>
        </test>

    </library>



  <!-- Standard note definitions -->

  <note id="0">
    This test fails only intermittently.
  </note>  

  <note id="1">
    The failure is caused by a problem in Boost code. The Boost developer is aware of the problem and plans to fix it.
  </note>

  <note id="2">
    The failure is caused by a compiler bug.
  </note>

  <note id="3">
    The failure is caused by a compiler bug, which has been reported to the compiler supplier (or is already known to them).
  </note>

  <note id="4">
    The failure is caused by a standard library bug.
  </note>

  <note id="5">
    The failure is caused by a standard library bug, which has been reported to the standard library supplier (or is already known to them).
  </note>

  <note id="6">
    The failure is probably caused by the test code, harness, or configuration. Thus it may not affect users of the library.
  </note>

  <note id="9">
    The failure is serious and likely to prevent all use of this Boost library with this compiler.
  </note>

  <note id="10">
    The failure is serious and likely to prevent all use of this Boost library with this compiler. The failure is caused by a compiler bug, which has been reported to the compiler supplier (or is already known to them).
  </note>

  <note id="14">
    The failure is caused by a platform API bug.
  </note>

  <note id="15">
    The failure is caused by a platform API bug, which has been reported to the platform API supplier (or is already known to them).
  </note>

  <note id="16">
    The failure is not serious and will not affect most users. The library degrades gracefully.
  </note>

  <note id="17">
    This compiler's bugs are not supported by the library.
  </note>


</explicit-failures-markup>


