#  Copyright (c) 2003 Michael Stevens
#
#  Use, modification and distribution is subject to the Boost Software
#  License Version 1.0. (See accompanying file LICENSE_1_0.txt or
#  http://www.boost.org/LICENSE_1_0.txt)

import toolset ;
import feature ;
import toolset : flags ;

import intel ;
import gcc ;
import common ;
import errors ;

feature.extend-subfeature toolset intel : platform : linux ;
toolset.inherit-generators intel-linux 
     <toolset>intel <toolset-intel:platform>linux : gcc ;
toolset.inherit-flags intel-linux : gcc 
    : <inlining>off <inlining>on <inlining>full <optimization>space ;
toolset.inherit-rules intel-linux : gcc ;

# Initializes the intel-linux toolset
#   version in mandatory
#   name (default icc) is used to invoke the specified intellinux complier
#   compile and link options allow you to specify addition command line options for each version
rule init ( version ? :  name ? : compile_options * : link_options * )
{
    common.check-init-parameters intel-linux : version $(version) ;
    if ! $(name)
    {
        name = [ common.find-tool "icc" : /opt/intel_cc_80/bin ] ;
    }
    else    
    {
        name = [ common.check-tool $(name) ] ;
    }
    if ! $(name)
    {
        ECHO "warning: intel toolset configuration: could not find compiler " ;
        ECHO "warning: initialized from" [ errors.nearest-user-location ] ;
    }
            
    local condition = <toolset>intel-linux-$(version) ;
    condition ?= <toolset>intel-linux ;
    
    feature.extend-subfeature toolset intel : version : $(version) ;
    flags intel-linux CONFIG_NAME $(condition) : $(name) ;
    flags intel-linux CONFIG_COMPILE $(condition) : $(compile_options) ;
    flags intel-linux CONFIG_LINK $(condition) : $(link_options) ;
}

flags intel-linux.compile OPTIONS <inlining>off : "-Ob0" ;
flags intel-linux.compile OPTIONS <inlining>on : "-Ob1" ;
flags intel-linux.compile OPTIONS <inlining>full : "-Ob2" ;
flags intel-linux.compile OPTIONS <optimization>space : "-O1" ; # no specific space optimization flag in icc
actions compile.c++
{
    $(CONFIG_NAME) -c -xc++ $(CONFIG_COMPILE) $(OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<)" "$(>)"
}

actions compile.c
{
    $(CONFIG_NAME) -c -xc $(CONFIG_COMPILE) $(OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<)" "$(>)"
}

actions link bind LIBRARIES
{
    $(CONFIG_NAME) $(CONFIG_LINK) $(OPTIONS) -L"$(LINKPATH)" -Wl,-R$(SPACE)-Wl,"$(RPATH)" -Wl,-rpath-link$(SPACE)-Wl,"$(RPATH_LINK)" -o "$(<)" "$(>)" "$(LIBRARIES)" -Wl,-Bdynamic -l$(FINDLIBS-SA) -Wl,-Bstatic -l$(FINDLIBS-ST) -Wl,-B$(LINK-RUNTIME)
}

# Differ from 'link' above only by -shared.
actions link.dll bind LIBRARIES
{
    $(CONFIG_NAME) $(CONFIG_LINK) $(OPTIONS) -L"$(LINKPATH)" -Wl,-R$(SPACE)-Wl,"$(RPATH)" -o "$(<)" -Wl,-h$(SPACE)-Wl,$(<[1]:D=) -shared "$(>)"  "$(LIBRARIES)" -Wl,-Bdynamic -l$(FINDLIBS-SA) -Wl,-Bstatic -l$(FINDLIBS-ST) "$(LIBRARIES)" -Wl,-Bdynamic -l$(FINDLIBS-SA) -Wl,-Bstatic -l$(FINDLIBS-ST) -Wl,-B$(LINK-RUNTIME)
}
