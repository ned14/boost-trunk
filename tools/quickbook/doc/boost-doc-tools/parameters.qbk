[chapter Boostbook and Docbook build parameters
[id boost_doc_tools.parameters]
[quickbook 1.6]
[source-mode teletype]
]

Back in the simple examples, you might remember how `boost.root` was passed
to the Boost.Build script:

    boostbook simple : simple.xml :
        <xsl:param>boost.root=../../../../..
        ;

There are many such XSL parameters that can be used, for example to
split the documentation into a file for each section:

    boostbook simple : simple.xml :
        <xsl:param>boost.root=../../../../..
        <xsl:param>chunk.section.depth=99
        ;

In this case, `boost.root` is a parameter for the BoostBook XSL stylesheets,
while `chunk.section.depth` is a parameter for the DocBook XSL stylesheets.
There are far more DocBook XSL parameters than can be listed here, see the
[@http://docbook.sourceforge.net/release/xsl/1.77.1/doc/param.html
DocBook documentation] for a full list. This also isn't a complete list
of BoostBook XSL parameters, if you wish to look into them in more detail,
the best source of information is the XSL source code at
[@boost:tools/boostbook/xsl/ `tools/boostbook/xsl/`].

[heading:toc Table of Contents settings]

[/TODO: Quick description of docbook parameters?]

BoostBook adds an extra parameter, `boost.noexpand.chapter.toc`, to the DocBook
parameters for generating the table of contents for a book. This adjusts a
book's table of contents so they don't show the contents of chapters,
regardless of the `toc.max.depth` parameter.

This is mainly used in the Boost.Math documentation but could be useful in
large books so that the top level table of contents aren't overwhelmed by
the individual chapeter contents.

[heading:mathjax MathJax parameters]

BoostBook has experimental support for MathJax, an open source JavaScript
script that is used to display mathematics in the browser. This is activated
by setting the `boost.mathjax` parameter to 1, and the location can be set
using `boost.mathjax.script`.

