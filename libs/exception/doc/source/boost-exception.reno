<shared_ptr>
	<id>1</id>
	<type>
		<string>reno_project</string>
	</type>
	<object>
		<reno_project>
			<config>
				<shared_ptr>
					<id>2</id>
					<type>
						<string>reno_config</string>
					</type>
					<object>
						<source>
							<string>../..;../../../../boost</string>
						</source>
						<match>
							<string>.*\.(cpp|hpp|h)$</string>
						</match>
					</object>
				</shared_ptr>
			</config>
			<layers>
				<shared_ptr>
					<id>3</id>
					<type>
						<string>reno_layer_map</string>
					</type>
					<object>
						<sorted>
							<size>7</size>
							<pair>
								<string>default</string>
								<shared_ptr>
									<id>4</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>5</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>8C77439A1F52A50CF8C4131A44CC7FA9CF5E02508CB32C4FF40B565613A396F4</strong>
																			<weak>476106477</weak>
																			<size>3812</size>
																			<position>518</position>
																			<strong>D31BCE814DF5B8B718E7EB67A194AD08EF716A26D422E436596ABA1F145007D8</strong>
																			<weak>4055211476</weak>
																			<size>525</size>
																			<position>3281</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception/operator&lt;&lt;</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>6</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>3</size>
																			<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
																			<weak>1282550303</weak>
																			<size>9192</size>
																			<position>323</position>
																			<strong>65D35B8A2063883A53E9D0DCC3FF8E5CA3573A58451A653CDE3003FFBEC576D3</strong>
																			<weak>1693870740</weak>
																			<size>2195</size>
																			<position>3720</position>
																			<strong>DA154372D8C23BD9EDC30005CA7959CE686D198891097A837D006B5222F04DE9</strong>
																			<weak>2768248809</weak>
																			<size>143</size>
																			<position>60</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception::exception</string>
															</title>
															<file_name>
																<string>exception_constructors</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>7</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
																			<weak>3660693492</weak>
																			<size>8718</size>
																			<position>487</position>
																			<strong>E23085202D084CBB50F289988A6A592F06D923B77D0AB25D7A98A7188DF5BE3B</strong>
																			<weak>1414247481</weak>
																			<size>766</size>
																			<position>7382</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>current_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>8</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>3</size>
																			<strong>612485E090D76B2CC43C1A296F813075BA165C2496082E78E939F10B3DA8E09A</strong>
																			<weak>1770110914</weak>
																			<size>587</size>
																			<position>1497</position>
																			<strong>60F3F48B87487FA6E0D2CCC0750AF435CC92CEC80BBBF609AC71295031AADD0D</strong>
																			<weak>3929437933</weak>
																			<size>361</size>
																			<position>213</position>
																			<strong>CD1241D84950468704F3C3F04116B8DA5162A8BEA4364F10951232F49113C5DE</strong>
																			<weak>1658463867</weak>
																			<size>121</size>
																			<position>238</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>configuration macros</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>9</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>126BB1D8971585CBE7D78EF3C12259D72FD5E973A84626AA9FC3234220A11CAB</strong>
																			<weak>3471702891</weak>
																			<size>969</size>
																			<position>344</position>
																			<strong>A7FD310E1340E103081DA2A7899DA0E213C696C84D52C17ADA09F6942EE97D47</strong>
																			<weak>2978648279</weak>
																			<size>530</size>
																			<position>433</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/detail/error_info_impl.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>error_info</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>10</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>8DC5E3F51F580F74905ADF7542CBFBE23989808ACFF69E8C2B98B5092C633B42</strong>
																			<weak>378737885</weak>
																			<size>4007</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/info.hpp</string>
															</title>
															<file_name>
																<string>exception_error_info_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>11</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
																			<weak>3660693492</weak>
																			<size>8718</size>
																			<position>487</position>
																			<strong>DA033132CFA8F85C147C01F51FF7CF7399CF7D32D412F730EA3219CDAC608C72</strong>
																			<weak>3830952485</weak>
																			<size>712</size>
																			<position>1496</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>unknown_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>12</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
																			<weak>1282550303</weak>
																			<size>9192</size>
																			<position>323</position>
																			<strong>17E691632123EB67BA67D590B49EB8094F462F5A10A66A1C5438E1867EF1478E</strong>
																			<weak>765399792</weak>
																			<size>77</size>
																			<position>5917</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception::~exception</string>
															</title>
															<file_name>
																<string>exception_destructor</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>13</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>transporting of exceptions between threads</string>
															</title>
															<file_name>
																<string>tutorial_exception_ptr</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>14</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>17FF6C63843EE64ED66CB038DD95B4C4D6BA1B0FD36B27BEFD84A909161D2853</strong>
																			<weak>1237535165</weak>
																			<size>231</size>
																			<position>1186</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_THROW_EXCEPTION</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:pagelist link=&quot;backlink&quot;:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>15</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>439278045C9E304238B86C5BD4DA9CA64630D4CC73D442089068A186A28CA55A</strong>
																			<weak>3686240039</weak>
																			<size>1522</size>
																			<position>433</position>
																			<strong>6FE1F0AF570A010E8FDA1647DE61E0CC3AA979C8A8638722DAACDF8FBC4790D2</strong>
																			<weak>1246830037</weak>
																			<size>1023</size>
																			<position>493</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/diagnostic_information.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>diagnostic_information</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>16</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>FC684D0DD5A9732B4130F2AB3DB6E0491D0F523E14B7FB738B2019EA2C7F8717</strong>
																			<weak>2229778754</weak>
																			<size>631</size>
																			<position>319</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/cloning_2.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>cloning and re-throwing an exception</string>
															</title>
															<file_name>
																<string>cloning_and_rethrowing</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>17</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>F4C951B28F7DE500973AA3DFAA99F2BADA6EDAFA2B406C30BEF3B7FBE6FD57D7</strong>
																			<weak>2263754923</weak>
																			<size>982</size>
																			<position>306</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/error_info_2.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>adding of arbitrary data to active exception objects</string>
															</title>
															<file_name>
																<string>adding_data_later</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>18</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>F7633FDCF6615C0199645701EE6E7ACE5CBCD7A7CF6838573791E91ABB3C09F2</strong>
																			<weak>1668435395</weak>
																			<size>1332</size>
																			<position>396</position>
																			<strong>A1F443AF571973A12005D2F7D4AE09A32AAF686FEEAE272EC21512A65EB943E8</strong>
																			<weak>3879093659</weak>
																			<size>1300</size>
																			<position>26</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info_tuple.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>tuple/operator&lt;&lt;</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>19</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>CAD6C404CB725D336A44920D2341ECA131149AB02C368B59028F8147F16737BF</strong>
																			<weak>2258638601</weak>
																			<size>94</size>
																			<position>227</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info_tuple.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/info_tuple.hpp</string>
															</title>
															<file_name>
																<string>exception_error_info_group_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>20</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>FBC69CDA5E19FA40270F3855A8B99B2F77572439353F9DC5D15386F3520BC616</strong>
																			<weak>1405483403</weak>
																			<size>8882</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception_ptr.hpp</string>
															</title>
															<file_name>
																<string>exception_cloning_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>21</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>9A4ECF9A49A73AED83C1565CB8C67AE1519E8AFE6818F968B4C4733CB9E86CEF</strong>
																			<weak>1615599655</weak>
																			<size>68</size>
																			<position>227</position>
																			<strong>34F0583BC8DE767CE2D79721E1F956895E43E5397473B1050F59BE7E26C773DB</strong>
																			<weak>805836816</weak>
																			<size>66</size>
																			<position>1</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/error_info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/error_info.hpp</string>
															</title>
															<file_name>
																<string>exception_error_info_value_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>22</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
																			<weak>3660693492</weak>
																			<size>8718</size>
																			<position>487</position>
																			<strong>F86EB07D04CD0D0645080D1121DA899746D0C45137E17E1D9BE605E75396F047</strong>
																			<weak>1983537541</weak>
																			<size>1346</size>
																			<position>148</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception_ptr</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>23</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>373FAB70D1DAE4F1111AACCCCD3F6B55EAF8D1222E03A26A5A2F860B70D2D0C4</strong>
																			<weak>3697768091</weak>
																			<size>2013</size>
																			<position>91</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/throw_exception.hpp</string>
															</title>
															<file_name>
																<string>throw_exception_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>24</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
																			<weak>1282550303</weak>
																			<size>9192</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/exception.hpp</string>
															</title>
															<file_name>
																<string>exception_exception_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>25</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>187BFD2B78A0DD006717B5B06FFD465E2468F521C32A86FB793F7A68AB5417F3</strong>
																			<weak>4276724153</weak>
																			<size>574</size>
																			<position>382</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/error_info_1.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>adding of arbitrary data at the point of the throw</string>
															</title>
															<file_name>
																<string>adding_data_at_throw</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>26</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>D9B8E6AA12A4F33953B1A961FA590C5A3840234B6531CA8C04AC985AD5800835</strong>
																			<weak>2432554768</weak>
																			<size>702</size>
																			<position>408</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/enable_error_info.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>integrating boost exception in existing exception class hierarchies</string>
															</title>
															<file_name>
																<string>tutorial_enable_error_info</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>27</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>612485E090D76B2CC43C1A296F813075BA165C2496082E78E939F10B3DA8E09A</strong>
																			<weak>1770110914</weak>
																			<size>587</size>
																			<position>1497</position>
																			<strong>60F3F48B87487FA6E0D2CCC0750AF435CC92CEC80BBBF609AC71295031AADD0D</strong>
																			<weak>3929437933</weak>
																			<size>361</size>
																			<position>213</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>throw_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>28</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>transporting of arbitrary data to the catch site</string>
															</title>
															<file_name>
																<string>tutorial_transporting_data</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>29</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>7116AEECEA666794E31DC99390ADEC1BA6AF74B2398067A0739767B4B76FA97A</strong>
																			<weak>4128134227</weak>
																			<size>307</size>
																			<position>302</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/logging.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>diagnostic information</string>
															</title>
															<file_name>
																<string>tutorial_diagnostic_information</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>30</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
																			<weak>1282550303</weak>
																			<size>9192</size>
																			<position>323</position>
																			<strong>65D35B8A2063883A53E9D0DCC3FF8E5CA3573A58451A653CDE3003FFBEC576D3</strong>
																			<weak>1693870740</weak>
																			<size>2195</size>
																			<position>3720</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;----&#10;!!!See Also:&#10;&#10;(:pagelist link=&quot;backlink&quot; except_tags=&quot;exception,member&quot; mod=&quot;w&quot;:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>31</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>4ED9709788BBAB4DE7CF336561606B8C0B41F70877A3395F4EE026F4AEB66CC6</strong>
																			<weak>743998427</weak>
																			<size>409</size>
																			<position>307</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/cloning_1.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>using enable_current_exception at the time of the throw</string>
															</title>
															<file_name>
																<string>using_enable_cloning</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>32</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Index</string>
															</title>
															<file_name>
																<string>name_idx</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !:)&#10;&#10;(:pagelist fmt=&quot;index&quot; except_tags=&quot;index,noindex&quot; mod=&quot;w&quot;:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>33</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/enable_current_exception.hpp</string>
															</title>
															<file_name>
																<string>exception_enable_current_exception_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>34</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>7CAF5D62B1ED0802B65B428119DBDD84C352A24A98EB167E1B0681F3E8DD7628</strong>
																			<weak>3711957388</weak>
																			<size>3837</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/get_error_info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/get_error_info.hpp</string>
															</title>
															<file_name>
																<string>exception_get_error_info_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>35</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost exception</string>
															</title>
															<file_name>
																<string>boost-exception</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>117</size>
													<variant>2</variant>
													<string>!!Introduction&#10;&#10;The purpose of Boost Exception is to ease the design of exception class hierarchies and to help write exception handling and error reporting code.&#10;&#10;It supports transporting of arbitrary data to the catch site, which is otherwise tricky due to the no-throw requirements (15.5.1) for exception types. Data can be added to any exception object, either directly in the throw-expression (15.1), or at a later time as the exception object propagates up the call stack.&#10;&#10;The ability to add data to exception objects after they have been passed to throw is important, because often some of the information needed to handle an exception is unavailable in the context where the failure is detected. &#10;&#10;Boost Exception also supports (:link http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html|N2179:)-style (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|copying:) of exception objects, implemented non-intrusively and automatically by the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function.&#10;&#10;!!Contents&#10;&#10;#Tutorial&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-26</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;#Documentation&#10;##Class (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##Transporting of Arbitrary Data to the Catch Site&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-18</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>36</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>2</size>
																				<strong>391956879B098B05CB774BAD3285881434482FD633818A579F7183052E6BAD09</strong>
																				<weak>1787869209</weak>
																				<size>3656</size>
																				<position>504</position>
																				<strong>BB8AF986C96801345719855FEA083AF5684FBC349F6520E150F19A6370019265</strong>
																				<weak>3731478139</weak>
																				<size>686</size>
																				<position>2964</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception/get_error_info.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>get_error_info</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>37</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>2</size>
																				<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
																				<weak>1282550303</weak>
																				<size>9192</size>
																				<position>323</position>
																				<strong>F3FB15CD82336271C6E875BC620385322777D16F0B7C233300783CE35710CCBF</strong>
																				<weak>3292878997</weak>
																				<size>282</size>
																				<position>7305</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception/exception.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>enable_error_info</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html|N2179:) Transporting of Exceptions between Threads&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>38</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>2</size>
																				<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
																				<weak>1282550303</weak>
																				<size>9192</size>
																				<position>323</position>
																				<strong>DF9EA87B0140AACF4422F1B76F6A6A409C15F32858BBBA85A35981A824C56BA9</strong>
																				<weak>1137981799</weak>
																				<size>192</size>
																				<position>8994</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception/exception.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>enable_current_exception</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>39</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>2</size>
																				<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
																				<weak>3660693492</weak>
																				<size>8718</size>
																				<position>487</position>
																				<strong>0066D4E6E6B189906E6DE04F08509F3737511701A1B1355B37511EC18E8371F4</strong>
																				<weak>2078296250</weak>
																				<size>305</size>
																				<position>8150</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception_ptr.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>copy_exception</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>40</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>2</size>
																				<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
																				<weak>3660693492</weak>
																				<size>8718</size>
																				<position>487</position>
																				<strong>0E9DF8366080712A816BE91ABCEF1E2044145B63D75B0B995B537900F378189E</strong>
																				<weak>1069696031</weak>
																				<size>255</size>
																				<position>8457</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception_ptr.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>rethrow_exception</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##Headers&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>41</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>1</size>
																				<strong>67D64FAD0AB7CA6B2173A14F363D19B27F59EEBDB5C1076F8BCCA1B54D4CCD7D</strong>
																				<weak>2241687287</weak>
																				<size>303</size>
																				<position>323</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>boost/exception.hpp</string>
																</title>
																<file_name>
																	<string>exception_hpp</string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>42</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>1</size>
																				<strong>265AFB67CCEF87EC9B58DB910ED23C0B1A5546C44767E2FFD6829ABADAF4828B</strong>
																				<weak>1235989793</weak>
																				<size>1632</size>
																				<position>323</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception/diagnostic_information.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>boost/exception/diagnostic_information.hpp</string>
																</title>
																<file_name>
																	<string>exception_diagnostic_information_hpp</string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-33</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>43</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>0</size>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>1</empty>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>boost/exception/enable_error_info.hpp</string>
																</title>
																<file_name>
																	<string>exception_enable_error_info_hpp</string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-21</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-34</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;#(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-32</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;!!Synopsis&#10;&#10;`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-42</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-33</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;&#10;`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api:)@]&#10;&#10;!!Class exception&#10;&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;&#10;!!Transporting of Arbitrary Data to the Catch Site&#10;&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-18</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;&#10;!!Transporting of Exceptions between Threads&#10;&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-39</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;&#10;!!Printing Diagnostic Information&#10;&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;&#10;!!Throwing Exceptions&#10;&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;&#10;!!Acknowledgements&#10;&#10;Peter Dimov has been continuously influencing the design and evolution of Boost Exception. Also thanks to Tobias Schwinger, Tom Brinkman, Pavel Vozenilek and everyone who participated in the review process.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>44</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>E444EE9697EEADFDE0767E1D0242FC0E70D98E61FB1F0FFA099648DE509B82F3</strong>
																			<weak>94503238</weak>
																			<size>773</size>
																			<position>374</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/info_tuple.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>adding grouped data to exceptions</string>
															</title>
															<file_name>
																<string>grouping_data</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>def</string>
								<shared_ptr>
									<id>45</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class Tag,class T&gt;&#10;class&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;    {&#10;    public:&#10;&#10;    typedef T value_type;&#10;&#10;    error_info( value_type const &amp; );&#10;    };@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>[@class&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;    {&#10;    protected:&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;    };@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>api</string>
								<shared_ptr>
									<id>46</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> def:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-18</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-39</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> def:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;typedef (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_throw_function,char const *&gt; throw_function;&#10;typedef (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_throw_file,char const *&gt; throw_file;&#10;typedef (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_throw_line,int&gt; throw_line;@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>15</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-42</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-21</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-34</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>decl</string>
								<shared_ptr>
									<id>47</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@template &lt;class E, class Tag, class T&gt;&#10;E const &amp; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:)( E const &amp; x, (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt; const &amp; v );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>[@(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)();&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)( (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class Tag,class T&gt;&#10;class (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:);@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@class&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:):&#10;    public std::exception&#10;    public boost::</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&#10;    {&#10;    ---unspecified---&#10;    };@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)();@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>19</size>
													<variant>2</variant>
													<string>[@#if !defined( BOOST_NO_EXCEPTIONS ) &amp;&amp; !defined( BOOST_EXCEPTION_DISABLE )&#10;    #include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;    #include &lt;boost/current_function.hpp&gt;&#10;    #define </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>(x)\&#10;        ::boost::</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>( ::boost::</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>(x) &lt;&lt;\&#10;        ::boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|throw_function:)(BOOST_CURRENT_FUNCTION) &lt;&lt;\&#10;        ::boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|throw_file:)(__FILE__) &lt;&lt;\&#10;        ::boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|throw_line:)((int)__LINE__) )&#10;#else&#10;    #define </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>(x) ::boost::</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>(x)&#10;#endif@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@std::string (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>[@template &lt;class E, class Tag1, class T1, ..., class TagN, class TN&gt;&#10;E const &amp; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-18</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:)( E const &amp; x,&#10;    (:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html|tuple:)&lt;&#10;        (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag1,T1&gt;,&#10;        ...,&#10;        (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;TagN,TN&gt; &gt; const &amp; v );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@typedef ---unspecified--- (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:);@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@#ifdef BOOST_NO_EXCEPTIONS&#10;    void (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( std::exception const &amp; e ); // user defined&#10;#else&#10;    template &lt;class E&gt;&#10;    void (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( E const &amp; e );&#10;#endif@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@class (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:);@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@template &lt;class T&gt;&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-39</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( T const &amp; e );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@void (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const &amp; ep );</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class T&gt;&#10;---unspecified--- (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( T const &amp; e );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class T&gt;&#10;---unspecified--- (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( T const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class ErrorInfo,class E&gt;&#10;(:link http://www.boost.org/libs/smart_ptr/shared_ptr.htm|shared_ptr:)&lt;typename ErrorInfo::value_type const&gt; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( E const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>include</string>
								<shared_ptr>
									<id>48</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;E must be boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), or a type that derives (indirectly) from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;!!!!Effects:&#10;&#10;Stores a copy of v into x. If x already contains data of type (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt;, that data is overwritten.&#10;&#10;!!!!Returns:&#10;&#10;x.&#10;&#10;(:include throws:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;!!!!Effects:&#10;&#10;* Default constructor: initializes an empty boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object.&#10;* Copy constructor: initializes a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object which shares ownership with x of all data added through (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:), including data that is added at a future time.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>29</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function must not be called outside of a catch block.&#10;&#10;!!!!Returns:&#10;&#10;* An (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) that refers to the currently handled exception or a copy of the currently handled exception.&#10;* If the function needs to allocate memory and the attempt fails, it returns an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) that refers to an instance of std::bad_alloc.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;&#10;!!!!Notes:&#10;&#10;* It is unspecified whether the return values of two successive calls to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) refer to the same exception object.&#10;* Correct implementation of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may require compiler support, unless (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) was used at the time the currently handled exception object was passed to throw. If (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) was not used, and if the compiler does not provide the necessary support, then (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may return an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) that refers to an instance of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). In this case, if the original exception object derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), then the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) sub-object of the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object is initialized by the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) copy constructor.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>15</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;Boost Exception responds to the following configuration macros:&#10;&#10;&apos;&apos;&apos;BOOST_NO_RTTI&apos;&apos;&apos;\\&#10;&apos;&apos;&apos;BOOST_NO_TYPEID&apos;&apos;&apos;&#10;&#10;The first macro prevents Boost Exception from using dynamic_cast and dynamic typeid. If the second macro is also defined, Boost Exception does not use static typeid either. There are no observable degrading effects on the library functionality, except for the following:&#10;&#10;-&gt;By default, the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template can be called with any exception type. If BOOST_NO_RTTI is defined, (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) can be used only with objects of type boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;&apos;&apos;&apos;BOOST_EXCEPTION_DISABLE&apos;&apos;&apos;&#10;&#10;By default, (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) are integrated directly in the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function. Defining BOOST_EXCEPTION_DISABLE disables this integration.&#10;&#10;Note that on some non-conformant compilers, for example MSVC 7.0 and older, as well as BCC, BOOST_EXCEPTION_DISABLE is implicitly defined in (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>25</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;T must have accessible copy constructor and must not be a reference (there is no requirement that T&apos;s copy constructor does not throw.)&#10;&#10;!!!!Description:&#10;&#10;This class template is used to associate a Tag type with a value type T. Objects of type (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt; can be passed to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:) to be stored in objects of type boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;!!!!Note:&#10;&#10;The header &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-21</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt; provides a declaration of the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) template, which is sufficient for the purpose of typedefing an instance for specific Tag and T, like this:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-21</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info;@]&#10;&#10;Of course, to actually add an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;p&quot;:) using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:), or to retrieve it using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), you must first #include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This type is used by the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) support in Boost Exception. Please see (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;!!!!Effects:&#10;&#10;&#10;&#10;Frees all resources associated with a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object.&#10;&#10;!!!!Throws:&#10;&#10;&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;Boost Exception supports transporting of exception objects between threads through cloning. This system is similar to (:link http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html|N2179:), but because Boost Exception can not rely on language support, the use of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) at the time of the throw is required in order to use cloning.&#10;&#10;!!!!Note:&#10;&#10;All exceptions emitted by the familiar function boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) are guaranteed to derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and to support cloning.&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This macro takes an exception object, records BOOST_CURRENT_FUNCTION, __FILE__ and __LINE__ in it, and forwards it to </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>. To recover this information at the catch site, use </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>; the information is also included in the message returned by </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Returns:&#10;&#10;This function iterates over all data objects stored in the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) through (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:). The returned string is constructed by converting each data object to string and then concatenating these strings together.&#10;&#10;When the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt; template is instantiated, the system attempts overload resolution for an unqualified call to to_string(x), where x is of type T. If this is successful, the to_string overload is expected to return std::string and is used to convert objects of type T to string.&#10;&#10;Otherwise, the system attempts overload resolution for s &lt;&lt; x, where s is a std::ostringstream and x is of type T. If this is successful, the operator&lt;&lt; overload is used to convert objects of type T to string.&#10;&#10;Otherwise the system is unable to convert objects of type T to string, and an unspecified stub string value is used without issuing a compile error.&#10;&#10;!!!!Notes:&#10;&#10;*The format of the returned string is unspecified.&#10;*The returned string is &apos;&apos;not&apos;&apos; user-friendly.&#10;*If dynamic_cast&lt;std::exception const *&gt;(&amp;x) is not null, the returned string includes the output from std::exception::what.&#10;*The returned string may include additional platform-specific diagnostic information.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>37</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;When you catch an exception, you can call (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) to get an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/thread.hpp&gt;&#10;#include &lt;boost/bind.hpp&gt;&#10;&#10;void do_work(); //throws cloning-enabled boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)s&#10;&#10;void&#10;worker_thread( boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp; error )&#10;    {&#10;    try&#10;        {&#10;        do_work();&#10;        error = boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();&#10;        }&#10;    catch(&#10;    ... )&#10;        {&#10;        error = boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();&#10;        }&#10;    }@]&#10;&#10;In the above example, note that (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) captures the original type of the exception object. The exception can be thrown again using the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function:&#10;&#10;[@// ...continued&#10;&#10;void&#10;work()&#10;    {&#10;    boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) error;&#10;    boost::(:link http://www.boost.org/doc/html/boost/thread.html|thread:) t( boost::(:link http://www.boost.org/libs/bind/bind.html|bind:)(worker_thread,boost::(:link http://www.boost.org/doc/html/ref.html|ref:)(error)) );&#10;    t.(:link http://www.boost.org/doc/html/boost/thread.html|join:)();&#10;    if( error )&#10;        boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(error);&#10;    }@]&#10;&#10;Note that (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) could fail to copy the original exception object in the following cases:&#10;&#10;* if there is not enough memory, in which case the returned (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) points to an instance of std::bad_alloc, or&#10;* if (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) was not used in the throw-expression passed to the original throw statement and the current implementation does not have the necessary compiler-specific support to copy the exception automatically, in which case the returned (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) points to an instance of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;Regardless, the use of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) in the above examples is well-formed.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>21</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;Sometimes the throw site does not have all the information that is needed at the catch site to make sense of what went wrong. Here is an example:&#10;&#10;[@#include &lt;stdio.h&gt;&#10;#include &lt;string&gt;&#10;        &#10;class&#10;file_read_error&#10;    {&#10;    public:&#10;&#10;    explicit&#10;    file_read_error( std::string const &amp; fn ):&#10;        fn_(fn)&#10;        {&#10;        };&#10;&#10;    std::string const &amp;&#10;    file_name() const&#10;        {&#10;        return fn_;&#10;        }&#10;&#10;    private:&#10;&#10;    std::string fn_;&#10;    };&#10;&#10;void&#10;file_read( FILE * f, void * buffer, size_t size )&#10;    {&#10;    if( size!=fread(buffer,1,size,f) )&#10;        throw file_read_error(&quot;????&quot;);&#10;    }@]&#10;&#10;We have defined an exception class file_read_error which can store a file name, so that when we catch a file_read_error object, we know which file the failure is related to. However, the file_read function does not have the file name at the time of the throw; all it has is a FILE handle.&#10;&#10;One possible solution is to not use FILE handles directly. We could have our own class file which stores both a FILE handle and a file name, and pass that to file_read. However, this could be problematic if we communicate with 3rd party code that does not use our class file (probably because they have their own similar class.)&#10;&#10;A better solution is to make class file_read_error derive (possibly indirectly) from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), and free the file_read function from the burden of storing the file name in exceptions it throws:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;errno.h&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info;&#10;&#10;class file_read_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) { };&#10;&#10;void&#10;file_read( FILE * f, void * buffer, size_t size )&#10;    {&#10;    if( size!=fread(buffer,1,size,f) )&#10;        throw file_read_error() &lt;&lt; errno_info(errno);&#10;    }@]&#10;&#10;If file_read detects a failure, it throws an exception which contains the information that is available at the time, namely the errno. Other relevant information, such as the file name, can be added in a context higher up the call stack, where it is known naturally:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/shared_ptr.hpp&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;string&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_file_name,std::string&gt; file_name_info;&#10;&#10;boost::shared_ptr&lt;FILE&gt; file_open( char const * file_name, char const * mode );&#10;void file_read( FILE * f, void * buffer, size_t size );&#10;&#10;void&#10;parse_file( char const * file_name )&#10;    {&#10;    boost::shared_ptr&lt;FILE&gt; f = file_open(file_name,&quot;rb&quot;);&#10;    assert(f);&#10;    try&#10;        {&#10;        char buf[1024];&#10;        file_read( f.get(), buf, sizeof(buf) );&#10;        }&#10;    catch(&#10;    boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp; e )&#10;        {&#10;        e &lt;&lt; file_name_info(file_name);&#10;        throw;&#10;        }&#10;    }@]&#10;&#10;The above function is (almost) exception-neutral -- if an exception is emitted by any function call within the try block, parse_file does not need to do any real work, but it intercepts any boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object, stores the file name, and re-throws using a throw-expression with no operand (15.1.6). The rationale for catching any boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object is that the file name is relevant to any failure that occurs in parse_file, &apos;&apos;even if the failure is unrelated to file I/O&apos;&apos;.&#10;&#10;As usual, the stored data can be retrieved using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;E must be boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), or a type that derives (indirectly) from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;!!!!Effects:&#10;&#10;Equivalent to x &lt;&lt; v.(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html#accessing_elements|get:)&lt;0&gt;() &lt;&lt; ... &lt;&lt; v.(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html#accessing_elements|get:)&lt;N&gt;().&#10;&#10;!!!!Returns:&#10;&#10;x.&#10;&#10;(:include throws:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>17</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) type can be used to refer to a copy of an exception object. It is Default Constructible, Copy Constructible, Assignable and Equality Comparable; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&apos;s operations do not throw.&#10;&#10;Two instances of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) are equivalent and compare equal if and only if they refer to the same exception.&#10;&#10;The default constructor of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) produces the null value of the type. The null value is equivalent only to itself.&#10;&#10;!!!!Thread safety&#10;&#10;* It is legal for multiple threads to hold (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) references to the same exception object.&#10;* It is illegal for multiple threads to modify the same (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object concurrently.&#10;* While calling (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) makes a copy of the current exception object, it is still possible for the two copies to share internal state. Therefore, in general it is not safe to call (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) concurrently to throw the same exception object into multiple threads.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>17</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;The following example demonstrates how errno can be stored in exception objects using Boost Exception:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;errno.h&gt;&#10;#include &lt;iostream&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info; //(1)&#10;&#10;class my_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), public std::exception { }; //(2)&#10;&#10;void&#10;f()&#10;    {&#10;    throw my_error() &lt;&lt; errno_info(errno); //(3)&#10;    }&#10;@]&#10;&#10;First, we instantiate the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) template using a unique identifier -- tag_errno, and the type of the info it identifies -- int. This provides compile-time type safety for the various values stored in exception objects.&#10;&#10;Second, we define class my_error, which derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;Finally, (3) illustrates how the typedef from (1) can be used with (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) to store values in exception objects at the point of the throw.&#10;&#10;The stored errno value can be recovered at a later time like this:&#10;&#10;[@// ...continued&#10;&#10;void&#10;g()&#10;    {&#10;    try&#10;        {&#10;        f();&#10;        }&#10;    catch(&#10;    my_error &amp; x )&#10;        {&#10;        if( boost::shared_ptr&lt;int const&gt; err=boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;errno_info&gt;(x) )&#10;            std::cerr &lt;&lt; &quot;Error code: &quot; &lt;&lt; *err;&#10;        }&#10;    }@]&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template is instantiated with the typedef from (1), and is passed an exception object of a polymorphic type. If the exception object contains the requested value, the returned (:link http://www.boost.org/libs/smart_ptr/shared_ptr.htm|shared_ptr:) will point to it; otherwise an empty (:link http://www.boost.org/libs/smart_ptr/shared_ptr.htm|shared_ptr:) is returned.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>27</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;Some exception hierarchies can not be modified to make boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) a base type. In this case, the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template can be used to make exception objects derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) anyway. Here is an example:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;stdexcept&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_std_range_min,size_t&gt; std_range_min;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_std_range_max,size_t&gt; std_range_max;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_std_range_index,size_t&gt; std_range_index;&#10;&#10;template &lt;class T&gt;&#10;class&#10;my_container&#10;    {&#10;    public:&#10;&#10;    size_t size() const;&#10;&#10;    T const &amp;&#10;    operator[]( size_t i ) const&#10;        {&#10;        if( i &gt; size() )&#10;            throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(std::range_error(&quot;Index out of range&quot;)) &lt;&lt;&#10;                std_range_min(0) &lt;&lt;&#10;                std_range_max(size()) &lt;&lt;&#10;                std_range_index(i);&#10;        //....&#10;        }&#10;    };&#10;@]&#10;&#10;The call to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;T&gt; gets us an object of &apos;&apos;unspecified type&apos;&apos; which is guaranteed to derive from both boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and T. This makes it possible to use (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:) to store additional information in the exception object. The exception can be intercepted as T &amp;, so existing exception handling will not break. It can also be intercepted as boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp;, so that (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|more information can be added to the exception at a later time:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;E must derive publicly from std::exception.&#10;&#10;!!!!Effects:&#10;&#10;* If BOOST_NO_EXCEPTIONS is not defined, boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e) is equivalent to throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e)), unless BOOST_EXCEPTION_DISABLE is defined, in which case boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e) is equivalent to throw e;&#10;* If BOOST_NO_EXCEPTIONS is defined, the function is left undefined, and the user is expected to supply an appropriate definition. Callers of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) are allowed to assume that the function never returns; therefore, if the user-defined (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) returns, the behavior is undefined.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;All exception types that derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) can be used as type-safe containers of arbitrary data objects, while complying with the no-throw requirements (15.5.1) of the ANSI C++ standard for exception types. Data can be added to a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) at the time of the throw, or at a later time.&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-25</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-44</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>17</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;Boost Exception provides a namespace-scope function (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) which takes a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). The returned string contains:&#10;&#10;*the string representation of all data objects added to the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) through (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:);&#10;*the output from std::exception::what;&#10;*additional platform-specific diagnostic information.&#10;&#10;The returned string is not presentable as a friendly user message, but because it is generated automatically, it is useful for debugging or logging purposes. Here is an example:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;iostream&gt;&#10;&#10;void f(); //throws unknown types that derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;void&#10;g()&#10;    {&#10;    try&#10;        {&#10;        f();&#10;        }&#10;    catch(&#10;    boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp; e )&#10;        {&#10;        std::cerr &lt;&lt; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e);&#10;        }&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Class boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) is designed to be used as a universal base for user-defined exception types.&#10;&#10;An object of any type deriving from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) can store data of arbitrary types, using the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) wrapper and (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:).&#10;&#10;To retrieve data from a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object, use the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;Here is how cloning can be enabled in a throw-expression (15.1):&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;errno.h&gt;&#10;&#10;typedef boost::error_info&lt;struct tag_errno,int&gt; errno_info;&#10;&#10;class file_read_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) { };&#10;&#10;void&#10;file_read( FILE * f, void * buffer, size_t size )&#10;    {&#10;    if( size!=fread(buffer,1,size,f) )&#10;        throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(file_read_error()) &lt;&lt;&#10;            errno_info(errno);&#10;    }@]&#10;&#10;Of course, (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may be used with any exception type; there is no requirement that it should derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if&#10;&#10;[@try&#10;    {&#10;    throw </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>(e);&#10;    }&#10;catch(...)&#10;    {&#10;    return (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Precondition:&#10;&#10;ep shall not be null.&#10;&#10;!!!!Throws:&#10;&#10;&#10;&#10;The exception to which ep refers.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>21</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;T must be a class with an accessible no-throw copy constructor.&#10;&#10;!!!!Returns:&#10;&#10;An object of &apos;&apos;unspecified&apos;&apos; type which derives publicly from T. That is, the returned object can be intercepted by a catch(T &amp;).&#10;&#10;!!!!Description:&#10;&#10;&#10;&#10;This function is designed to be used directly in a throw-expression to enable the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) support in Boost Exception. For example:&#10;&#10;[@class&#10;my_exception:&#10;    public std::exception&#10;    {&#10;    };&#10;&#10;....&#10;throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(my_exception());@]&#10;&#10;Unless (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) is called at the time an exception object is used in a throw-expression, an attempt to copy it using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may return an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) which refers to an instance of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). See (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) for details.&#10;&#10;!!!!Note:&#10;&#10;Instead of using the throw keyword directly, it is preferable to call boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). This is guaranteed to throw an exception that derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and supports the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) functionality.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;T must be a class with an accessible no-throw copy constructor as per (15.5.1).&#10;&#10;!!!!Returns:&#10;&#10;* If T derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), the returned object is of type T and is a copy of x.&#10;* Otherwise, the returned object is of an unspecified type that derives publicly from both T and boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). The T sub-object is initialized from x by the T copy constructor.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;* ErrorInfo must be an instance of the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) template.&#10;* E must be polymorphic.&#10;* The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function must not be called outside of a catch block.&#10;&#10;!!!!Returns:&#10;&#10;* If dynamic_cast&lt;boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const *&gt;(&amp;x) is 0, or if x does not store an object of type ErrorInfo, the returned value is an empty shared_ptr.&#10;* Otherwise, the returned shared_ptr points to the stored value (use (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;/&quot;:) to store values in exception objects.) The shared_ptr is valid even after x has been destroyed.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;&#10;!!!!Note:&#10;&#10;The interface of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may be affected by the build (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;The code snippet below demonstrates how boost::(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html|tuple:) can be used to bundle the name of the function that failed, together with the reported errno so that they can be added to exception objects more conveniently together:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/shared_ptr.hpp&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;string&gt;&#10;#include &lt;errno.h&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_file_name,std::string&gt; file_name_info;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_function,char const *&gt; function_info;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info;&#10;typedef boost::tuple&lt;function_info,errno_info&gt; clib_failure;&#10;&#10;class file_open_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) { };&#10;&#10;boost::shared_ptr&lt;FILE&gt;&#10;file_open( char const * name, char const * mode )&#10;    {&#10;    if( FILE * f=fopen(name,mode) )&#10;        return boost::shared_ptr&lt;FILE&gt;(f,fclose);&#10;    else&#10;        throw file_open_error() &lt;&lt;&#10;            file_name_info(name) &lt;&lt;&#10;            clib_failure(&quot;fopen&quot;,errno);&#10;    }@]&#10;&#10;Note that the members of a boost::(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html|tuple:) are stored separately in exception objects; they can only be retrieved individually, using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>throws</string>
								<shared_ptr>
									<id>49</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>!!!!Throws:&#10;&#10;std::bad_alloc, or any exception emitted by the T copy constructor.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>!!!!Throws:&#10;&#10;std::bad_alloc, or any exception emitted by T1..TN copy constructor.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>synopsis</string>
								<shared_ptr>
									<id>50</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;\\&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include def pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/current_function.hpp&gt;&#10;#include &lt;boost/shared_ptr.hpp&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;(:include decl:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-42</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;\\&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-18</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@#include &lt;boost/tuple/tuple.hpp&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include api:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include def pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@#include &lt;boost/shared_ptr.hpp&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-33</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@(:include api:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;string&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-34</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
						</sorted>
					</object>
				</shared_ptr>
			</layers>
			<contexts>
				<shared_ptr>
					<id>51</id>
					<type>
						<string>reno_context_map</string>
					</type>
					<object>
						<contexts>
							<sorted>
								<size>40</size>
								<shared_ptr>
									<id>-5</id>
								</shared_ptr>
								<shared_ptr>
									<id>-6</id>
								</shared_ptr>
								<shared_ptr>
									<id>-7</id>
								</shared_ptr>
								<shared_ptr>
									<id>-8</id>
								</shared_ptr>
								<shared_ptr>
									<id>-9</id>
								</shared_ptr>
								<shared_ptr>
									<id>-10</id>
								</shared_ptr>
								<shared_ptr>
									<id>-11</id>
								</shared_ptr>
								<shared_ptr>
									<id>-12</id>
								</shared_ptr>
								<shared_ptr>
									<id>-13</id>
								</shared_ptr>
								<shared_ptr>
									<id>-14</id>
								</shared_ptr>
								<shared_ptr>
									<id>-15</id>
								</shared_ptr>
								<shared_ptr>
									<id>-16</id>
								</shared_ptr>
								<shared_ptr>
									<id>-17</id>
								</shared_ptr>
								<shared_ptr>
									<id>-18</id>
								</shared_ptr>
								<shared_ptr>
									<id>-19</id>
								</shared_ptr>
								<shared_ptr>
									<id>-20</id>
								</shared_ptr>
								<shared_ptr>
									<id>-21</id>
								</shared_ptr>
								<shared_ptr>
									<id>-22</id>
								</shared_ptr>
								<shared_ptr>
									<id>-23</id>
								</shared_ptr>
								<shared_ptr>
									<id>-24</id>
								</shared_ptr>
								<shared_ptr>
									<id>-25</id>
								</shared_ptr>
								<shared_ptr>
									<id>-26</id>
								</shared_ptr>
								<shared_ptr>
									<id>-27</id>
								</shared_ptr>
								<shared_ptr>
									<id>-28</id>
								</shared_ptr>
								<shared_ptr>
									<id>-29</id>
								</shared_ptr>
								<shared_ptr>
									<id>-30</id>
								</shared_ptr>
								<shared_ptr>
									<id>-31</id>
								</shared_ptr>
								<shared_ptr>
									<id>-32</id>
								</shared_ptr>
								<shared_ptr>
									<id>-33</id>
								</shared_ptr>
								<shared_ptr>
									<id>-34</id>
								</shared_ptr>
								<shared_ptr>
									<id>-35</id>
								</shared_ptr>
								<shared_ptr>
									<id>-39</id>
								</shared_ptr>
								<shared_ptr>
									<id>-40</id>
								</shared_ptr>
								<shared_ptr>
									<id>-38</id>
								</shared_ptr>
								<shared_ptr>
									<id>-41</id>
								</shared_ptr>
								<shared_ptr>
									<id>-43</id>
								</shared_ptr>
								<shared_ptr>
									<id>-37</id>
								</shared_ptr>
								<shared_ptr>
									<id>-42</id>
								</shared_ptr>
								<shared_ptr>
									<id>-36</id>
								</shared_ptr>
								<shared_ptr>
									<id>-44</id>
								</shared_ptr>
							</sorted>
						</contexts>
						<index>
							<sorted>
								<size>40</size>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-35</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-13</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-28</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-32</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-43</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-33</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>391956879B098B05CB774BAD3285881434482FD633818A579F7183052E6BAD09</strong>
												<weak>1787869209</weak>
												<size>3656</size>
												<position>504</position>
												<strong>BB8AF986C96801345719855FEA083AF5684FBC349F6520E150F19A6370019265</strong>
												<weak>3731478139</weak>
												<size>686</size>
												<position>2964</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/get_error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-36</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>FBC69CDA5E19FA40270F3855A8B99B2F77572439353F9DC5D15386F3520BC616</strong>
												<weak>1405483403</weak>
												<size>8882</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-20</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>FC684D0DD5A9732B4130F2AB3DB6E0491D0F523E14B7FB738B2019EA2C7F8717</strong>
												<weak>2229778754</weak>
												<size>631</size>
												<position>319</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/cloning_2.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-16</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>7CAF5D62B1ED0802B65B428119DBDD84C352A24A98EB167E1B0681F3E8DD7628</strong>
												<weak>3711957388</weak>
												<size>3837</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/get_error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-34</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>D9B8E6AA12A4F33953B1A961FA590C5A3840234B6531CA8C04AC985AD5800835</strong>
												<weak>2432554768</weak>
												<size>702</size>
												<position>408</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/enable_error_info.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-26</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>8DC5E3F51F580F74905ADF7542CBFBE23989808ACFF69E8C2B98B5092C633B42</strong>
												<weak>378737885</weak>
												<size>4007</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-10</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>17FF6C63843EE64ED66CB038DD95B4C4D6BA1B0FD36B27BEFD84A909161D2853</strong>
												<weak>1237535165</weak>
												<size>231</size>
												<position>1186</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-14</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>439278045C9E304238B86C5BD4DA9CA64630D4CC73D442089068A186A28CA55A</strong>
												<weak>3686240039</weak>
												<size>1522</size>
												<position>433</position>
												<strong>6FE1F0AF570A010E8FDA1647DE61E0CC3AA979C8A8638722DAACDF8FBC4790D2</strong>
												<weak>1246830037</weak>
												<size>1023</size>
												<position>493</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/diagnostic_information.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-15</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>7116AEECEA666794E31DC99390ADEC1BA6AF74B2398067A0739767B4B76FA97A</strong>
												<weak>4128134227</weak>
												<size>307</size>
												<position>302</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/logging.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-29</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>67D64FAD0AB7CA6B2173A14F363D19B27F59EEBDB5C1076F8BCCA1B54D4CCD7D</strong>
												<weak>2241687287</weak>
												<size>303</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-41</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>265AFB67CCEF87EC9B58DB910ED23C0B1A5546C44767E2FFD6829ABADAF4828B</strong>
												<weak>1235989793</weak>
												<size>1632</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/diagnostic_information.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-42</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>612485E090D76B2CC43C1A296F813075BA165C2496082E78E939F10B3DA8E09A</strong>
												<weak>1770110914</weak>
												<size>587</size>
												<position>1497</position>
												<strong>60F3F48B87487FA6E0D2CCC0750AF435CC92CEC80BBBF609AC71295031AADD0D</strong>
												<weak>3929437933</weak>
												<size>361</size>
												<position>213</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-27</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>3</size>
												<strong>612485E090D76B2CC43C1A296F813075BA165C2496082E78E939F10B3DA8E09A</strong>
												<weak>1770110914</weak>
												<size>587</size>
												<position>1497</position>
												<strong>60F3F48B87487FA6E0D2CCC0750AF435CC92CEC80BBBF609AC71295031AADD0D</strong>
												<weak>3929437933</weak>
												<size>361</size>
												<position>213</position>
												<strong>CD1241D84950468704F3C3F04116B8DA5162A8BEA4364F10951232F49113C5DE</strong>
												<weak>1658463867</weak>
												<size>121</size>
												<position>238</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-8</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>126BB1D8971585CBE7D78EF3C12259D72FD5E973A84626AA9FC3234220A11CAB</strong>
												<weak>3471702891</weak>
												<size>969</size>
												<position>344</position>
												<strong>A7FD310E1340E103081DA2A7899DA0E213C696C84D52C17ADA09F6942EE97D47</strong>
												<weak>2978648279</weak>
												<size>530</size>
												<position>433</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/detail/error_info_impl.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-9</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
												<weak>1282550303</weak>
												<size>9192</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-24</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
												<weak>1282550303</weak>
												<size>9192</size>
												<position>323</position>
												<strong>17E691632123EB67BA67D590B49EB8094F462F5A10A66A1C5438E1867EF1478E</strong>
												<weak>765399792</weak>
												<size>77</size>
												<position>5917</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-12</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
												<weak>1282550303</weak>
												<size>9192</size>
												<position>323</position>
												<strong>DF9EA87B0140AACF4422F1B76F6A6A409C15F32858BBBA85A35981A824C56BA9</strong>
												<weak>1137981799</weak>
												<size>192</size>
												<position>8994</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-38</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
												<weak>1282550303</weak>
												<size>9192</size>
												<position>323</position>
												<strong>F3FB15CD82336271C6E875BC620385322777D16F0B7C233300783CE35710CCBF</strong>
												<weak>3292878997</weak>
												<size>282</size>
												<position>7305</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-37</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
												<weak>1282550303</weak>
												<size>9192</size>
												<position>323</position>
												<strong>65D35B8A2063883A53E9D0DCC3FF8E5CA3573A58451A653CDE3003FFBEC576D3</strong>
												<weak>1693870740</weak>
												<size>2195</size>
												<position>3720</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-30</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>3</size>
												<strong>55F1164770FD778354E151EF65A3E830DA20F325F7ED20A95130A4B83FC801BF</strong>
												<weak>1282550303</weak>
												<size>9192</size>
												<position>323</position>
												<strong>65D35B8A2063883A53E9D0DCC3FF8E5CA3573A58451A653CDE3003FFBEC576D3</strong>
												<weak>1693870740</weak>
												<size>2195</size>
												<position>3720</position>
												<strong>DA154372D8C23BD9EDC30005CA7959CE686D198891097A837D006B5222F04DE9</strong>
												<weak>2768248809</weak>
												<size>143</size>
												<position>60</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-6</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>CAD6C404CB725D336A44920D2341ECA131149AB02C368B59028F8147F16737BF</strong>
												<weak>2258638601</weak>
												<size>94</size>
												<position>227</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info_tuple.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-19</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>373FAB70D1DAE4F1111AACCCCD3F6B55EAF8D1222E03A26A5A2F860B70D2D0C4</strong>
												<weak>3697768091</weak>
												<size>2013</size>
												<position>91</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-23</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>4ED9709788BBAB4DE7CF336561606B8C0B41F70877A3395F4EE026F4AEB66CC6</strong>
												<weak>743998427</weak>
												<size>409</size>
												<position>307</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/cloning_1.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-31</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>F4C951B28F7DE500973AA3DFAA99F2BADA6EDAFA2B406C30BEF3B7FBE6FD57D7</strong>
												<weak>2263754923</weak>
												<size>982</size>
												<position>306</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/error_info_2.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-17</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
												<weak>3660693492</weak>
												<size>8718</size>
												<position>487</position>
												<strong>E23085202D084CBB50F289988A6A592F06D923B77D0AB25D7A98A7188DF5BE3B</strong>
												<weak>1414247481</weak>
												<size>766</size>
												<position>7382</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-7</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
												<weak>3660693492</weak>
												<size>8718</size>
												<position>487</position>
												<strong>F86EB07D04CD0D0645080D1121DA899746D0C45137E17E1D9BE605E75396F047</strong>
												<weak>1983537541</weak>
												<size>1346</size>
												<position>148</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-22</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
												<weak>3660693492</weak>
												<size>8718</size>
												<position>487</position>
												<strong>DA033132CFA8F85C147C01F51FF7CF7399CF7D32D412F730EA3219CDAC608C72</strong>
												<weak>3830952485</weak>
												<size>712</size>
												<position>1496</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-11</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
												<weak>3660693492</weak>
												<size>8718</size>
												<position>487</position>
												<strong>0E9DF8366080712A816BE91ABCEF1E2044145B63D75B0B995B537900F378189E</strong>
												<weak>1069696031</weak>
												<size>255</size>
												<position>8457</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-40</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>808CABE6CCA47C52CC9DD21911BF0B42284A5DD55AC3E665B29ED2B5F16AF7DA</strong>
												<weak>3660693492</weak>
												<size>8718</size>
												<position>487</position>
												<strong>0066D4E6E6B189906E6DE04F08509F3737511701A1B1355B37511EC18E8371F4</strong>
												<weak>2078296250</weak>
												<size>305</size>
												<position>8150</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-39</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>9A4ECF9A49A73AED83C1565CB8C67AE1519E8AFE6818F968B4C4733CB9E86CEF</strong>
												<weak>1615599655</weak>
												<size>68</size>
												<position>227</position>
												<strong>34F0583BC8DE767CE2D79721E1F956895E43E5397473B1050F59BE7E26C773DB</strong>
												<weak>805836816</weak>
												<size>66</size>
												<position>1</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-21</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>F7633FDCF6615C0199645701EE6E7ACE5CBCD7A7CF6838573791E91ABB3C09F2</strong>
												<weak>1668435395</weak>
												<size>1332</size>
												<position>396</position>
												<strong>A1F443AF571973A12005D2F7D4AE09A32AAF686FEEAE272EC21512A65EB943E8</strong>
												<weak>3879093659</weak>
												<size>1300</size>
												<position>26</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info_tuple.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-18</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>187BFD2B78A0DD006717B5B06FFD465E2468F521C32A86FB793F7A68AB5417F3</strong>
												<weak>4276724153</weak>
												<size>574</size>
												<position>382</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/error_info_1.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-25</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>E444EE9697EEADFDE0767E1D0242FC0E70D98E61FB1F0FFA099648DE509B82F3</strong>
												<weak>94503238</weak>
												<size>773</size>
												<position>374</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/info_tuple.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-44</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>8C77439A1F52A50CF8C4131A44CC7FA9CF5E02508CB32C4FF40B565613A396F4</strong>
												<weak>476106477</weak>
												<size>3812</size>
												<position>518</position>
												<strong>D31BCE814DF5B8B718E7EB67A194AD08EF716A26D422E436596ABA1F145007D8</strong>
												<weak>4055211476</weak>
												<size>525</size>
												<position>3281</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-5</id>
									</shared_ptr>
								</pair>
							</sorted>
						</index>
					</object>
				</shared_ptr>
			</contexts>
			<index>
				<shared_ptr>
					<id>52</id>
					<type>
						<string>tag_index</string>
					</type>
					<object>
						<tag_index>
							<sorted>
								<size>40</size>
								<pair>
									<weak_ptr>
										<expired>1</expired>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-5</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-6</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-7</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-9</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-10</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-11</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-12</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-13</id>
										</shared_ptr>
									</weak_ptr>
									<string>tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-14</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-15</id>
										</shared_ptr>
									</weak_ptr>
									<string>diagnostic_information free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-16</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-17</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-18</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-19</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-20</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-21</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-22</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-23</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-24</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-25</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-26</id>
										</shared_ptr>
									</weak_ptr>
									<string>tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-27</id>
										</shared_ptr>
									</weak_ptr>
									<string>free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-28</id>
										</shared_ptr>
									</weak_ptr>
									<string>tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-29</id>
										</shared_ptr>
									</weak_ptr>
									<string>diagnostic_information tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-30</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-31</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-32</id>
										</shared_ptr>
									</weak_ptr>
									<string>index noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-33</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-34</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-35</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-39</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-40</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-38</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-41</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-43</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-37</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-42</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-36</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-44</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
							</sorted>
						</tag_index>
					</object>
				</shared_ptr>
			</index>
		</reno_project>
	</object>
</shared_ptr>
