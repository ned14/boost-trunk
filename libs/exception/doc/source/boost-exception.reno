<shared_ptr>
	<id>1</id>
	<type>
		<string>reno_project</string>
	</type>
	<object>
		<reno_project>
			<config>
				<shared_ptr>
					<id>2</id>
					<type>
						<string>reno_config</string>
					</type>
					<object>
						<source>
							<string>../..;../../../../boost</string>
						</source>
						<match>
							<string>.*\.(cpp|hpp|h)$</string>
						</match>
					</object>
				</shared_ptr>
			</config>
			<layers>
				<shared_ptr>
					<id>3</id>
					<type>
						<string>reno_layer_map</string>
					</type>
					<object>
						<sorted>
							<size>7</size>
							<pair>
								<string>default</string>
								<shared_ptr>
									<id>4</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>5</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
																			<weak>737034355</weak>
																			<size>10349</size>
																			<position>521</position>
																			<strong>4B6ED02EA5B5A3B326838794C37ED01C5DC3E8D89FA78E62B9F7A0C78D4DB6FD</strong>
																			<weak>2715164371</weak>
																			<size>116</size>
																			<position>10227</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>rethrow_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>6</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>AE3A2E2D2C5F64EF089B5E3B27F1D42E1D0FD99D0CF898C7D5F828D4401090DB</strong>
																			<weak>2880991434</weak>
																			<size>1268</size>
																			<position>472</position>
																			<strong>40062E1E97460C1E0AB685CE189F5D6607389A5A533C9E7D28050B4037EE3A50</strong>
																			<weak>4283132066</weak>
																			<size>1236</size>
																			<position>26</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/get_error_info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>get_error_info</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>7</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
																			<weak>737034355</weak>
																			<size>10349</size>
																			<position>521</position>
																			<strong>F87D7E0321BDDAE23D5A6667CB12116411468AEC54E3B35FB9C8CA94BFECA41E</strong>
																			<weak>1149388739</weak>
																			<size>296</size>
																			<position>9929</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>copy_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>8</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
																			<weak>737034355</weak>
																			<size>10349</size>
																			<position>521</position>
																			<strong>C84057F7B3954843F5360E9764B35DC5EB1D8ED65CA9F1B6B633D95B417E3AA9</strong>
																			<weak>1591300832</weak>
																			<size>2322</size>
																			<position>1609</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception_ptr</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>9</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>3EFECC50102590C4E9074D4F86B0E8F831D933193CCF70B8D80E8A0CF345C150</strong>
																			<weak>877841526</weak>
																			<size>4772</size>
																			<position>726</position>
																			<strong>82BA37021947A2C641B3285537EB8841A6AC59067CE01D873BC19725BAADCFC1</strong>
																			<weak>1244314370</weak>
																			<size>733</size>
																			<position>243</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>error_info</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>10</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>D5ABFC95B9593A7346BF1C09827808A9AE95C161469B25D50305FCD7AC1A6FC2</strong>
																			<weak>556762679</weak>
																			<size>1647</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/enable_current_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/enable_current_exception.hpp</string>
															</title>
															<file_name>
																<string>exception_enable_exception_cloning_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>11</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>transporting of arbitrary data to the catch site</string>
															</title>
															<file_name>
																<string>tutorial_transporting_data</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>12</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>DA91A64CCC9A5B149DFB580E5466539607C9CE92A93F56CE4C03996A468C1145</strong>
																			<weak>2002159572</weak>
																			<size>10547</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception_ptr.hpp</string>
															</title>
															<file_name>
																<string>exception_cloning_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>13</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>3EFECC50102590C4E9074D4F86B0E8F831D933193CCF70B8D80E8A0CF345C150</strong>
																			<weak>877841526</weak>
																			<size>4772</size>
																			<position>726</position>
																			<strong>C552A651ADC0B9506373CC1A78CB4D7D0342BC99BD24F2F2B8CAD3B555037FE7</strong>
																			<weak>141521629</weak>
																			<size>382</size>
																			<position>4384</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator&lt;&lt;/exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>14</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>0C00BEB179039380247D771B12C728884E9A3E5B483AC63CD5789852C7A5CC35</strong>
																			<weak>2506662970</weak>
																			<size>2467</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/enable_error_info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/enable_error_info.hpp</string>
															</title>
															<file_name>
																<string>exception_enable_error_info_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>15</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>CE411E21EE9878B55B5906D033A0FC52574FB59D8A8CECB75405E9B1C9D782DB</strong>
																			<weak>1173443713</weak>
																			<size>308</size>
																			<position>302</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/logging.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>diagnostic information</string>
															</title>
															<file_name>
																<string>tutorial_diagnostic_information</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>16</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>285A4D5FBF3D13C5729697E61680A07DC52493A4A964D54F6B21FDAA35A3AC70</strong>
																			<weak>3873809619</weak>
																			<size>448</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception.hpp</string>
															</title>
															<file_name>
																<string>exception_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>17</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>3999B09B03466CF6F624CB20689AE32FEFBAF81B2ADDA4D0E6777BC052B1BE70</strong>
																			<weak>2497361403</weak>
																			<size>3349</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/exception.hpp</string>
															</title>
															<file_name>
																<string>exception_exception_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>18</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>F4C951B28F7DE500973AA3DFAA99F2BADA6EDAFA2B406C30BEF3B7FBE6FD57D7</strong>
																			<weak>2263754923</weak>
																			<size>982</size>
																			<position>306</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/error_info_2.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>adding of arbitrary data to active exception objects</string>
															</title>
															<file_name>
																<string>adding_data_later</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>19</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
																			<weak>1525247529</weak>
																			<size>3149</size>
																			<position>523</position>
																			<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
																			<weak>1676293364</weak>
																			<size>2098</size>
																			<position>886</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;----&#10;!!!See Also:&#10;&#10;(:pagelist link=&quot;backlink&quot; except_tags=&quot;exception,member&quot; mod=&quot;w&quot;:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>20</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>49D31376D97691F7C84A134B5D8C7C66EF1ED6901D376CA250D634AE2B38AB5E</strong>
																			<weak>549270010</weak>
																			<size>163</size>
																			<position>561</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>BOOST_ERROR_INFO</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>21</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>E444EE9697EEADFDE0767E1D0242FC0E70D98E61FB1F0FFA099648DE509B82F3</strong>
																			<weak>94503238</weak>
																			<size>773</size>
																			<position>374</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/info_tuple.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>adding grouped data to exceptions</string>
															</title>
															<file_name>
																<string>grouping_data</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>22</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>5373E336DC4892A41D31694BCA1146382FC3137819A04689CA1F9FFAF1CFAB3B</strong>
																			<weak>4050491732</weak>
																			<size>466</size>
																			<position>307</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/cloning_1.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>using enable_current_exception at the time of the throw</string>
															</title>
															<file_name>
																<string>using_enable_cloning</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>23</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>CAB4D823BD4720B71E1CA5BE482AC95B42A9E07CD5E08671EA23184635F281A2</strong>
																			<weak>3077708282</weak>
																			<size>89</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/error_info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/error_info.hpp</string>
															</title>
															<file_name>
																<string>exception_error_info_value_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>24</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>3</size>
																			<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
																			<weak>1525247529</weak>
																			<size>3149</size>
																			<position>523</position>
																			<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
																			<weak>1676293364</weak>
																			<size>2098</size>
																			<position>886</position>
																			<strong>BACD79DFB4C710C1A67687FC6344DF2251E2379613C2DF5B2729B2CD37E24EA3</strong>
																			<weak>458367129</weak>
																			<size>154</size>
																			<position>246</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception::exception</string>
															</title>
															<file_name>
																<string>exception_constructors</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>25</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>A0BB65AB464BCD75627D942684603207867D3C5D1BAE93902A812A07677B596F</strong>
																			<weak>3668753278</weak>
																			<size>646</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/diagnostic_information.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/diagnostic_information.hpp</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>26</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>D9B8E6AA12A4F33953B1A961FA590C5A3840234B6531CA8C04AC985AD5800835</strong>
																			<weak>2432554768</weak>
																			<size>702</size>
																			<position>408</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/enable_error_info.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>integrating boost exception in existing exception class hierarchies</string>
															</title>
															<file_name>
																<string>tutorial_enable_error_info</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>27</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>8DF6E9F9346E2A1297844433695E2BAE1AD14FBDB6D943D81B87200FB9F9AE66</strong>
																			<weak>4241576983</weak>
																			<size>5175</size>
																			<position>323</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/info.hpp</string>
															</title>
															<file_name>
																<string>exception_error_info_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>28</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>F7633FDCF6615C0199645701EE6E7ACE5CBCD7A7CF6838573791E91ABB3C09F2</strong>
																			<weak>1668435395</weak>
																			<size>1332</size>
																			<position>396</position>
																			<strong>A1F443AF571973A12005D2F7D4AE09A32AAF686FEEAE272EC21512A65EB943E8</strong>
																			<weak>3879093659</weak>
																			<size>1300</size>
																			<position>26</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info_tuple.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>operator&lt;&lt;/tuple</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>29</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
																			<weak>737034355</weak>
																			<size>10349</size>
																			<position>521</position>
																			<strong>8A536C83AAA6BF19C2B173BE32022C6363004D5F0B88F7982711F5D66F539FE9</strong>
																			<weak>3888149824</weak>
																			<size>2495</size>
																			<position>7432</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>current_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>30</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>3</size>
																			<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
																			<weak>1525247529</weak>
																			<size>3149</size>
																			<position>523</position>
																			<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
																			<weak>1676293364</weak>
																			<size>2098</size>
																			<position>886</position>
																			<strong>BAC52AC87CFA3174B3352140A8DC10BB7F48C945FC87787C3AC96F0FC2CFDB40</strong>
																			<weak>1066412964</weak>
																			<size>165</size>
																			<position>57</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception::diagnostic_information</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>31</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>0C9E5FE5B32FD3F31875CF6AD87A485CACC42754EE56F0E72D9D9749734959D5</strong>
																			<weak>2969409401</weak>
																			<size>544</size>
																			<position>425</position>
																			<strong>1DE66DC4BD5E2E323BA4281B4BAB063AF5E9F7E4A5FE32BA3C0686A844FBA86E</strong>
																			<weak>4200042321</weak>
																			<size>512</size>
																			<position>26</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/diagnostic_information.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>diagnostic_information</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>32</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>4</size>
																			<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
																			<weak>1525247529</weak>
																			<size>3149</size>
																			<position>523</position>
																			<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
																			<weak>1676293364</weak>
																			<size>2098</size>
																			<position>886</position>
																			<strong>85EE1980CFB24E054EDB1B3BDFA61FD4D65AD0EF248A1A42D4C2552700459327</strong>
																			<weak>2238151539</weak>
																			<size>428</size>
																			<position>928</position>
																			<strong>AD3F339F7126003907BCBDB3EF846FCACA895132E1100D202DA67D2B7846EE65</strong>
																			<weak>3032091776</weak>
																			<size>60</size>
																			<position>369</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>exception::~exception</string>
															</title>
															<file_name>
																<string>exception_destructor</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>33</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>187BFD2B78A0DD006717B5B06FFD465E2468F521C32A86FB793F7A68AB5417F3</strong>
																			<weak>4276724153</weak>
																			<size>574</size>
																			<position>382</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/error_info_1.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>adding of arbitrary data at the point of the throw</string>
															</title>
															<file_name>
																<string>adding_data_at_throw</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>34</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>FC684D0DD5A9732B4130F2AB3DB6E0491D0F523E14B7FB738B2019EA2C7F8717</strong>
																			<weak>2229778754</weak>
																			<size>631</size>
																			<position>319</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../example/cloning_2.cpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>cloning and re-throwing an exception</string>
															</title>
															<file_name>
																<string>cloning_and_rethrowing</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>35</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>CAD6C404CB725D336A44920D2341ECA131149AB02C368B59028F8147F16737BF</strong>
																			<weak>2258638601</weak>
																			<size>94</size>
																			<position>227</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/info_tuple.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/exception/info_tuple.hpp</string>
															</title>
															<file_name>
																<string>exception_error_info_group_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>36</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>1</size>
																			<strong>4DC5257313CB18D2FB860A51C10E0CA1F26C0130EF7884BEA62F2B9202796B14</strong>
																			<weak>1113469887</weak>
																			<size>1807</size>
																			<position>91</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/throw_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost/throw_exception.hpp</string>
															</title>
															<file_name>
																<string>throw_exception_hpp</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>37</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
																			<weak>737034355</weak>
																			<size>10349</size>
																			<position>521</position>
																			<strong>CCBCB5EADA66B82DFC7650F467A0E51CA5B10EFCD3729EDFB038A1C5DCB5722D</strong>
																			<weak>1007135774</weak>
																			<size>701</size>
																			<position>3933</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception_ptr.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>unknown_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>38</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>506A4FDA868A2B69175F6B3CF0FE18C9A87901D397934D3DE90A261C1F8409AA</strong>
																			<weak>945649359</weak>
																			<size>1603</size>
																			<position>367</position>
																			<strong>DF9EA87B0140AACF4422F1B76F6A6A409C15F32858BBBA85A35981A824C56BA9</strong>
																			<weak>1137981799</weak>
																			<size>192</size>
																			<position>1405</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/enable_current_exception.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>enable_current_exception</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>39</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>Index</string>
															</title>
															<file_name>
																<string>name_idx</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !:)&#10;&#10;(:pagelist fmt=&quot;index&quot; except_tags=&quot;index,noindex&quot; mod=&quot;w&quot;:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>40</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>2</size>
																			<strong>7ACC4E316D4EDB3EC7AEC35FED3ADB47DDF75D575028D7BCD11C5233E4F4A277</strong>
																			<weak>4268848542</weak>
																			<size>2333</size>
																			<position>457</position>
																			<strong>61DE70107961C0B9A65674017F91FF85190CF84B4F3B0CA7AC04A7E16DE80B37</strong>
																			<weak>3187961206</weak>
																			<size>2301</size>
																			<position>26</position>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>0</empty>
																		<string>../../../../boost/exception/enable_error_info.hpp</string>
																		<type>0</type>
																		<base>0</base>
																	</path>
																</file>
															</hook>
															<title>
																<string>enable_error_info</string>
															</title>
															<file_name>
																<string></string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>41</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>transporting of exceptions between threads</string>
															</title>
															<file_name>
																<string>tutorial_exception_ptr</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>42</id>
														<type>
															<string>reno_context</string>
														</type>
														<object>
															<hook>
																<hook>
																	<stream_hook_path>
																		<container>
																			<size>0</size>
																		</container>
																	</stream_hook_path>
																</hook>
																<file>
																	<path>
																		<empty>1</empty>
																	</path>
																</file>
															</hook>
															<title>
																<string>boost exception</string>
															</title>
															<file_name>
																<string>boost-exception</string>
															</file_name>
														</object>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>115</size>
													<variant>2</variant>
													<string>!!Introduction&#10;&#10;The purpose of Boost Exception is to ease the design of exception class hierarchies and to help write exception handling and error reporting code.&#10;&#10;It supports transporting of arbitrary data to the catch site, which is otherwise tricky due to the no-throw requirements (15.5.1) for exception types. Data can be added to any exception object, either directly in the throw-expression (15.1), or at a later time as the exception object propagates up the call stack.&#10;&#10;The ability to add data to exception objects after they have been passed to throw is important, because often some of the information needed to handle an exception is unavailable in the context where the failure is detected. &#10;&#10;Boost Exception also supports (:link http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html|N2179:)-style (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|copying:) of exception objects, implemented non-intrusively and automatically by the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>43</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>2</size>
																				<strong>612485E090D76B2CC43C1A296F813075BA165C2496082E78E939F10B3DA8E09A</strong>
																				<weak>1770110914</weak>
																				<size>587</size>
																				<position>1291</position>
																				<strong>60F3F48B87487FA6E0D2CCC0750AF435CC92CEC80BBBF609AC71295031AADD0D</strong>
																				<weak>3929437933</weak>
																				<size>361</size>
																				<position>213</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/throw_exception.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>throw_exception</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function.&#10;&#10;!!Contents&#10;&#10;#Tutorial&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-26</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-41</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&#10;#Documentation&#10;##Class (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##Transporting of Arbitrary Data to the Catch Site&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html|N2179:) Transporting of Exceptions between Threads&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;##Headers&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-25</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>44</id>
															<type>
																<string>reno_context</string>
															</type>
															<object>
																<hook>
																	<hook>
																		<stream_hook_path>
																			<container>
																				<size>1</size>
																				<strong>86DE119A4A3E9251475D1291AF99B769E304A8E0172409FC2A4E02B8D4BF73A2</strong>
																				<weak>767141628</weak>
																				<size>1417</size>
																				<position>323</position>
																			</container>
																		</stream_hook_path>
																	</hook>
																	<file>
																		<path>
																			<empty>0</empty>
																			<string>../../../../boost/exception/get_error_info.hpp</string>
																			<type>0</type>
																			<base>0</base>
																		</path>
																	</file>
																</hook>
																<title>
																	<string>boost/exception/get_error_info.hpp</string>
																</title>
																<file_name>
																	<string></string>
																</file_name>
															</object>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-35</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;###(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;#(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-39</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;&#10;!!Synopsis&#10;&#10;`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-35</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-25</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;&#10;!!Class exception&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;!!Transporting of Arbitrary Data to the Catch Site&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;!!Transporting of Exceptions between Threads&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;!!Printing Diagnostic Information&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;&#10;!!Throwing Exceptions&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:include include:)&#10;(:auto also:)&#10;</string>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>def</string>
								<shared_ptr>
									<id>45</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class Tag,class T&gt;&#10;class&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;    {&#10;    public:&#10;&#10;    typedef T value_type;&#10;&#10;    error_info( value_type const &amp; );&#10;    };@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>9</size>
													<variant>2</variant>
													<string>[@class&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;    {&#10;    public:&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;&#10;    protected:&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-32</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;    };@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>api</string>
								<shared_ptr>
									<id>46</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>21</size>
													<variant>2</variant>
													<string>[@#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-25</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-44</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-35</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> def:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> def:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl:)@]&#10;</string>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>decl</string>
								<shared_ptr>
									<id>47</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@void (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const &amp; ep );</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class ErrorInfo,class E&gt;&#10;(:link http://www.boost.org/libs/smart_ptr/shared_ptr.htm|shared_ptr:)&lt;typename ErrorInfo::value_type const&gt; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( E const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@template &lt;class T&gt;&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-7</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( T const &amp; e );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@typedef ---unspecified--- (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:);@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class Tag,class T&gt;&#10;class (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:);@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@template &lt;class E, class Tag, class T&gt;&#10;E const &amp; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:)( E const &amp; x, (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt; const &amp; v );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@class </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>;@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>9</size>
													<variant>2</variant>
													<string>[@typedef (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_throw_function,char const *&gt; throw_function;&#10;typedef (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_throw_file,char const *&gt; throw_file;&#10;typedef (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_throw_line,int&gt; throw_line;&#10;&#10;#define (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-20</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)\&#10;    ::boost::throw_function(BOOST_CURRENT_FUNCTION) &lt;&lt;\&#10;    ::boost::throw_file(__FILE__) &lt;&lt;\&#10;    ::boost::throw_line((int)__LINE__)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>[@(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)();&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)( (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>[@template &lt;class E, class Tag1, class T1, ..., class TagN, class TN&gt;&#10;E const &amp; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:)( E const &amp; x,&#10;    (:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html|tuple:)&lt;&#10;        (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag1,T1&gt;,&#10;        ...,&#10;        (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;TagN,TN&gt; &gt; const &amp; v );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@virtual char const * (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)() const throw();@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@std::string </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>( std::exception const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-32</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)();@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@class&#10;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:):&#10;    public std::exception&#10;    public boost::</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&#10;    {&#10;    ---unspecified---&#10;    };@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class T&gt;&#10;---unspecified--- (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( T const &amp; e );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@template &lt;class T&gt;&#10;---unspecified--- (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( T const &amp; x );@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@#ifdef BOOST_NO_EXCEPTIONS&#10;&#10;void (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( std::exception const &amp; e ); // user defined&#10;&#10;#else&#10;&#10;template &lt;class E&gt;&#10;void (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)( E const &amp; e );&#10;&#10;#endif@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>include</string>
								<shared_ptr>
									<id>48</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Precondition:&#10;&#10;ep shall not be null.&#10;&#10;!!!!Throws:&#10;&#10;&#10;&#10;The exception to which ep refers.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>9</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;* ErrorInfo must be an instance of the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) template.&#10;* E must be polymorphic.&#10;* The </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> function must not be called outside of a catch block.&#10;&#10;!!!!Returns:&#10;&#10;* If dynamic_cast&lt;boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const *&gt;(&amp;x) is 0, or if x does not store an object of type ErrorInfo, the returned value is an empty shared_ptr.&#10;* Otherwise, the returned shared_ptr points to the stored value (use (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) to store values in exception objects.) The shared_ptr is valid even after x has been destroyed.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Effects:&#10;&#10;As if try { throw e; } catch( ... ) { return (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(); }&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>9</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) type can be used to refer to a copy of an exception object. It is Default Constructible, Copy Constructible, Assignable and Equality Comparable; (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&apos;s operations do not throw.&#10;&#10;Two instances of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) are equivalent and compare equal if and only if they refer to the same exception.&#10;&#10;The default constructor of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) produces the null value of the type. The null value is equivalent only to itself.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>25</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;T must have accessible copy constructor and must not be a reference (there is no requirement that T&apos;s copy constructor does not throw.)&#10;&#10;!!!!Description:&#10;&#10;This class template is used to associate a Tag type with a value type T. Objects of type (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt; can be passed to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) to be stored in objects of type boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;!!!!Note:&#10;&#10;The header &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt; provides a declaration of the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) template, which is sufficient for the purpose of typedefing an instance for specific Tag and T, like this:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-23</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info;@]&#10;&#10;Of course, to actually add an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;p&quot;:) using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:), or to retrieve it using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), you must first #include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;All exception types that derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) can be used as type-safe containers of arbitrary data objects, while complying with the no-throw requirements (15.5.1) of the ANSI C++ standard for exception types. Data can be added to a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) at the time of the throw, or at a later time.&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-33</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-18</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-21</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;E must be boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), or a type that derives (indirectly) from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;!!!!Effects:&#10;&#10;Stores a copy of v into x. If x already contains data of type (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt;, that data is overwritten.&#10;&#10;!!!!Returns:&#10;&#10;x.&#10;&#10;(:include throws:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>21</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;Class boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) provides a virtual member function (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:), with a signature similar to the familiar std::exception::what function. The default implementation returns a string value that is not presentable as a friendly user message, but because it is generated automatically, it is useful for debugging or logging purposes. Here is an example:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;iostream&gt;&#10;&#10;void f(); //throws unknown types that derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;void&#10;g()&#10;    {&#10;    try&#10;        {&#10;        f();&#10;        }&#10;    catch(&#10;    boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp; e )&#10;        {&#10;        std::cerr &lt;&lt; e.(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:)();&#10;        }&#10;    }@]&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;m&quot;:) member function iterates over all data objects stored in the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) through (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:). The returned string is constructed by converting each data object to string and then concatenating these strings together.&#10;&#10;When the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;Tag,T&gt; template is instantiated, the system attempts overload resolution for an unqualified call to to_string(x), where x is of type T. If this is successful, the to_string overload is expected to return std::string and is used to convert objects of type T to string.&#10;&#10;Otherwise, the system attempts overload resolution for s &lt;&lt; x, where s is a std::ostringstream and x is of type T. If this is successful, the operator&lt;&lt; overload is used to convert objects of type T to string.&#10;&#10;Otherwise the system is unable to convert objects of type T to string, and an unspecified stub string value is used without issuing a compile error.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>21</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;Sometimes the throw site does not have all the information that is needed at the catch site to make sense of what went wrong. Here is an example:&#10;&#10;[@#include &lt;stdio.h&gt;&#10;#include &lt;string&gt;&#10;        &#10;class&#10;file_read_error&#10;    {&#10;    public:&#10;&#10;    explicit&#10;    file_read_error( std::string const &amp; fn ):&#10;        fn_(fn)&#10;        {&#10;        };&#10;&#10;    std::string const &amp;&#10;    file_name() const&#10;        {&#10;        return fn_;&#10;        }&#10;&#10;    private:&#10;&#10;    std::string fn_;&#10;    };&#10;&#10;void&#10;file_read( FILE * f, void * buffer, size_t size )&#10;    {&#10;    if( size!=fread(buffer,1,size,f) )&#10;        throw file_read_error(&quot;????&quot;);&#10;    }@]&#10;&#10;We have defined an exception class file_read_error which can store a file name, so that when we catch a file_read_error object, we know which file the failure is related to. However, the file_read function does not have the file name at the time of the throw; all it has is a FILE handle.&#10;&#10;One possible solution is to not use FILE handles directly. We could have our own class file which stores both a FILE handle and a file name, and pass that to file_read. However, this could be problematic if we communicate with 3rd party code that does not use our class file (probably because they have their own similar class.)&#10;&#10;A better solution is to make class file_read_error derive (possibly indirectly) from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), and free the file_read function from the burden of storing the file name in exceptions it throws:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;errno.h&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info;&#10;&#10;class file_read_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) { };&#10;&#10;void&#10;file_read( FILE * f, void * buffer, size_t size )&#10;    {&#10;    if( size!=fread(buffer,1,size,f) )&#10;        throw file_read_error() &lt;&lt; errno_info(errno);&#10;    }@]&#10;&#10;If file_read detects a failure, it throws an exception which contains the information that is available at the time, namely the errno. Other relevant information, such as the file name, can be added in a context higher up the call stack, where it is known naturally:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/shared_ptr.hpp&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;string&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_file_name,std::string&gt; file_name_info;&#10;&#10;boost::shared_ptr&lt;FILE&gt; file_open( char const * file_name, char const * mode );&#10;void file_read( FILE * f, void * buffer, size_t size );&#10;&#10;void&#10;parse_file( char const * file_name )&#10;    {&#10;    boost::shared_ptr&lt;FILE&gt; f = file_open(file_name,&quot;rb&quot;);&#10;    assert(f);&#10;    try&#10;        {&#10;        char buf[1024];&#10;        file_read( f.get(), buf, sizeof(buf) );&#10;        }&#10;    catch(&#10;    boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp; e )&#10;        {&#10;        e &lt;&lt; file_name_info(file_name);&#10;        throw;&#10;        }&#10;    }@]&#10;&#10;The above function is (almost) exception-neutral -- if an exception is emitted by any function call within the try block, parse_file does not need to do any real work, but it intercepts any boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object, stores the file name, and re-throws using a throw-expression with no operand (15.1.6). The rationale for catching any boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object is that the file name is relevant to any failure that occurs in parse_file, &apos;&apos;even if the failure is unrelated to file I/O&apos;&apos;.&#10;&#10;As usual, the stored data can be retrieved using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>19</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;Class boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) is designed to be used as a universal base for user-defined exception types.&#10;&#10;An object of any type deriving from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) can store data of arbitrary types, using the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) wrapper and (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:).&#10;&#10;To retrieve data from a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object, use the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template.&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-24</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-32</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This macro is designed to be used with (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) when throwing a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), to store information about the location of the throw statement. It can be chained with other (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;p&quot;:) in a single throw expression.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;The code snippet below demonstrates how boost::(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html|tuple:) can be used to bundle the name of the function that failed, together with the reported errno so that they can be added to exception objects more conveniently together:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-35</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/shared_ptr.hpp&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;string&gt;&#10;#include &lt;errno.h&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_file_name,std::string&gt; file_name_info;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_function,char const *&gt; function_info;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info;&#10;typedef boost::tuple&lt;function_info,errno_info&gt; clib_failure;&#10;&#10;class file_open_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) { };&#10;&#10;boost::shared_ptr&lt;FILE&gt;&#10;file_open( char const * name, char const * mode )&#10;    {&#10;    if( FILE * f=fopen(name,mode) )&#10;        return boost::shared_ptr&lt;FILE&gt;(f,fclose);&#10;    else&#10;        throw file_open_error() &lt;&lt;&#10;            file_name_info(name) &lt;&lt;&#10;            clib_failure(&quot;fopen&quot;,errno);&#10;    }@]&#10;&#10;Note that the members of a boost::(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html|tuple:) are stored separately in exception objects; they can only be retrieved individually, using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;Here is how cloning can be enabled in a throw-expression (15.1):&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;stdio.h&gt;&#10;#include &lt;errno.h&gt;&#10;&#10;typedef boost::error_info&lt;struct tag_errno,int&gt; errno_info;&#10;&#10;class file_read_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) { };&#10;&#10;void&#10;file_read( FILE * f, void * buffer, size_t size )&#10;    {&#10;    if( size!=fread(buffer,1,size,f) )&#10;        throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(file_read_error()) &lt;&lt;&#10;            errno_info(errno);&#10;    }@]&#10;&#10;Of course, (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may be used with any exception type; there is no requirement that it should derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;!!!!Effects:&#10;&#10;* Default constructor: initializes an empty boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object.&#10;* Copy constructor: initializes a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object which shares with x all data added through (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:), including data that is added at a future time.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>27</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;Some exception hierarchies can not be modified to make boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) a base type. In this case, the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template can be used to make exception objects derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) anyway. Here is an example:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;stdexcept&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_std_range_min,size_t&gt; std_range_min;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_std_range_max,size_t&gt; std_range_max;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_std_range_index,size_t&gt; std_range_index;&#10;&#10;template &lt;class T&gt;&#10;class&#10;my_container&#10;    {&#10;    public:&#10;&#10;    size_t size() const;&#10;&#10;    T const &amp;&#10;    operator[]( size_t i ) const&#10;        {&#10;        if( i &gt; size() )&#10;            throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(std::range_error(&quot;Index out of range&quot;)) &lt;&lt;&#10;                std_range_min(0) &lt;&lt;&#10;                std_range_max(size()) &lt;&lt;&#10;                std_range_index(i);&#10;        //....&#10;        }&#10;    };&#10;@]&#10;&#10;The call to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;T&gt; gets us an object of &apos;&apos;unspecified type&apos;&apos; which is guaranteed to derive from both boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and T. This makes it possible to use (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) to store additional information in the exception object. The exception can be intercepted as T &amp;, so existing exception handling will not break. It can also be intercepted as boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp;, so that (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-11</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|more information can be added to the exception at a later time:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;E must be boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), or a type that derives (indirectly) from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;!!!!Effects:&#10;&#10;Equivalent to x &lt;&lt; v.(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html#accessing_elements|get:)&lt;0&gt;() &lt;&lt; ... &lt;&lt; v.(:link http://www.boost.org/libs/tuple/doc/tuple_users_guide.html#accessing_elements|get:)&lt;N&gt;().&#10;&#10;!!!!Returns:&#10;&#10;x.&#10;&#10;(:include throws:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>29</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function must not be called outside of a catch block.&#10;&#10;!!!!Returns:&#10;&#10;* An (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) that refers to the currently handled exception or a copy of the currently handled exception.&#10;* If the function needs to allocate memory and the attempt fails, it returns an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) that refers to an instance of std::bad_alloc.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;&#10;!!!!Notes:&#10;&#10;* It is unspecified whether the return values of two successive calls to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) refer to the same exception object.&#10;* Correct implementation of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may require compiler support, unless (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) was used at the time the currently handled exception object was passed to throw. If (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) was not used, and if the compiler does not provide the necessary support, then (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may return an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) that refers to an instance of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). In this case, if the original exception object derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), then the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) sub-object of the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object is initialized by the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) copy constructor.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>15</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;!!!!Returns:&#10;&#10;A string representation of all data stored in the boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object by the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) function. See &quot;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-15</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> mod=&quot;w&quot;:)&quot; for details.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;&#10;!!!!Notes:&#10;&#10;*The return value remains valid until the exception object from which it was obtained is destroyed or modified.&#10;*The header </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-25</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> provides a namespace-scope function </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> which takes a std::exception. It calls </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> if its argument can be converted to boost::</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>; otherwise it returns a string that combines the value of std::exception::what and the exception&apos;s dynamic type.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>7</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;The </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-31</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> function must not be called outside of a catch block.&#10;&#10;!!!!Returns:&#10;&#10;If dynamic_cast&lt;boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) const *&gt;(&amp;x) is not null, the returned string is initialized by a call to (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-30</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:); otherwise, the returned string combines the output of x.what() and typeid(x).name().&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include decl:)&#10;&#10;!!!!Effects:&#10;&#10;&#10;&#10;Frees all resources associated with a boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object.&#10;&#10;!!!!Throws:&#10;&#10;&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>17</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;The following example demonstrates how errno can be stored in exception objects using Boost Exception:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-16</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;errno.h&gt;&#10;#include &lt;iostream&gt;&#10;&#10;typedef boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;struct tag_errno,int&gt; errno_info; //(1)&#10;&#10;class my_error: public boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), public std::exception { }; //(2)&#10;&#10;void&#10;f()&#10;    {&#10;    throw my_error() &lt;&lt; errno_info(errno); //(3)&#10;    }&#10;@]&#10;&#10;First, we instantiate the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-9</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) template using a unique identifier -- tag_errno, and the type of the info it identifies -- int. This provides compile-time type safety for the various values stored in exception objects.&#10;&#10;Second, we define class my_error, which derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;Finally, (3) illustrates how the typedef from (1) can be used with (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-13</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>|operator&lt;&lt;:) to store values in exception objects at the point of the throw.&#10;&#10;The stored errno value can be recovered at a later time like this:&#10;&#10;[@// ...continued&#10;&#10;void&#10;g()&#10;    {&#10;    try&#10;        {&#10;        f();&#10;        }&#10;    catch(&#10;    my_error &amp; x )&#10;        {&#10;        if( boost::shared_ptr&lt;int const&gt; err=boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&lt;errno_info&gt;(x) )&#10;            std::cerr &lt;&lt; &quot;Error code: &quot; &lt;&lt; *err;&#10;        }&#10;    }@]&#10;&#10;The (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-6</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function template is instantiated with the typedef from (1), and is passed an exception object of a polymorphic type. If the exception object contains the requested value, the returned (:link http://www.boost.org/libs/smart_ptr/shared_ptr.htm|shared_ptr:) will point to it; otherwise an empty (:link http://www.boost.org/libs/smart_ptr/shared_ptr.htm|shared_ptr:) is returned.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>37</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;When you catch an exception, you can call (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) to get an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) object:&#10;&#10;[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/thread.hpp&gt;&#10;#include &lt;boost/bind.hpp&gt;&#10;&#10;void do_work(); //throws cloning-enabled boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)s&#10;&#10;void&#10;worker_thread( boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) &amp; error )&#10;    {&#10;    try&#10;        {&#10;        do_work();&#10;        error = boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();&#10;        }&#10;    catch(&#10;    ... )&#10;        {&#10;        error = boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)();&#10;        }&#10;    }@]&#10;&#10;In the above example, note that (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) captures the original type of the exception object. The exception can be thrown again using the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) function:&#10;&#10;[@// ...continued&#10;&#10;void&#10;work()&#10;    {&#10;    boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) error;&#10;    boost::(:link http://www.boost.org/doc/html/boost/thread.html|thread:) t( boost::(:link http://www.boost.org/libs/bind/bind.html|bind:)(worker_thread,boost::(:link http://www.boost.org/doc/html/ref.html|ref:)(error)) );&#10;    t.(:link http://www.boost.org/doc/html/boost/thread.html|join:)();&#10;    if( error )&#10;        boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(error);&#10;    }@]&#10;&#10;Note that (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) could fail to copy the original exception object in the following cases:&#10;&#10;* if there is not enough memory, in which case the returned (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) points to an instance of std::bad_alloc, or&#10;* if (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) was not used in the throw-expression passed to the original throw statement and the current implementation does not have the necessary compiler-specific support to copy the exception automatically, in which case the returned (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) points to an instance of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;&#10;Regardless, the use of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-5</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) in the above examples is well-formed.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;This type is used by the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) support in Boost Exception. Please see (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:).&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>21</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;T must be a class with an accessible no-throw copy constructor.&#10;&#10;!!!!Returns:&#10;&#10;An object of &apos;&apos;unspecified&apos;&apos; type which derives publicly from T. That is, the returned object can be intercepted by a catch(T &amp;).&#10;&#10;!!!!Description:&#10;&#10;&#10;&#10;This function is designed to be used directly in a throw-expression to enable the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) support in Boost Exception. For example:&#10;&#10;[@class&#10;my_exception:&#10;    public std::exception&#10;    {&#10;    };&#10;&#10;....&#10;throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(my_exception());@]&#10;&#10;Unless (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) is called at the time an exception object is used in a throw-expression, an attempt to copy it using (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) may return an (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) which refers to an instance of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-37</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). See (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-29</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) for details.&#10;&#10;!!!!Note:&#10;&#10;Instead of using the throw keyword directly, it is preferable to call boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). This is guaranteed to throw an exception that derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and supports the (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-8</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) functionality.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;T must be a class with an accessible no-throw copy constructor as per (15.5.1).&#10;&#10;!!!!Returns:&#10;&#10;* If T derives from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:), the returned object is of type T and is a copy of x.&#10;* Otherwise, the returned object is of an unspecified type that derives publicly from both T and boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:). The T sub-object is initialized from x by the T copy constructor.&#10;&#10;!!!!Throws:&#10;&#10;Nothing.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>11</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;Boost Exception supports transporting of exception objects between threads through cloning. This system is similar to (:link http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2179.html|N2179:), but because Boost Exception can not rely on language support, the use of (:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) at the time of the throw is required in order to use cloning.&#10;&#10;!!!!Note:&#10;&#10;All exceptions emitted by the familiar function boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) are guaranteed to derive from boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-19</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:) and to support cloning.&#10;&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-22</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-34</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>13</size>
													<variant>2</variant>
													<string>(:auto !!!:)&#10;&#10;(:include synopsis:)&#10;&#10;!!!!Requirements:&#10;&#10;E must derive publicly from std::exception.&#10;&#10;!!!!Effects:&#10;&#10;* If BOOST_NO_EXCEPTIONS is not defined, boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e) is equivalent to throw boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-38</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-40</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e)), unless BOOST_EXCEPTION_DISABLE is defined, in which case boost::(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)(e) is equivalent to throw e;&#10;* If BOOST_NO_EXCEPTIONS is defined, the function is left undefined, and the user is expected to supply an appropriate definition. Callers of </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> are allowed to assume that the function never returns; therefore, if the user-defined </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-43</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> returns, the behavior is undefined.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>(:auto !!:)&#10;&#10;!!!Synopsis&#10;&#10;(:include synopsis:)&#10;</string>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>throws</string>
								<shared_ptr>
									<id>49</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>!!!!Throws:&#10;&#10;std::bad_alloc, or any exception emitted by the T copy constructor.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>!!!!Throws:&#10;&#10;std::bad_alloc, or any exception emitted by T1..TN copy constructor.&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
							<pair>
								<string>synopsis</string>
								<shared_ptr>
									<id>50</id>
									<type>
										<string>reno_layer</string>
									</type>
									<object>
										<sorted>
											<size>40</size>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-5</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-6</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;</string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-44</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-7</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-8</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-9</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include def pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-10</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-11</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-12</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-13</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;\\&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-14</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-15</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-16</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@(:include api:)@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-17</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-18</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-19</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include def pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-20</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-27</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-21</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-22</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-23</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-24</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-25</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@#include &lt;exception&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-26</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-27</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-17</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;boost/current_function.hpp&gt;&#10;#include &lt;boost/shared_ptr.hpp&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-28</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-35</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-28</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string> decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-29</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-30</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-31</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-25</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-32</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-33</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-34</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-35</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@#include &lt;boost/tuple/tuple.hpp&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-36</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>5</size>
													<variant>2</variant>
													<string>[@#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;#include &lt;exception&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-37</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-12</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-38</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-10</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-39</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-40</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-14</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-41</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-42</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>0</size>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-43</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>3</size>
													<variant>2</variant>
													<string>`#include &lt;(:link </string>
													<variant>1</variant>
													<weak_ptr>
														<expired>0</expired>
														<shared_ptr>
															<id>-36</id>
														</shared_ptr>
													</weak_ptr>
													<variant>2</variant>
													<string>:)&gt;&#10;&#10;[@namespace&#10;boost&#10;    {&#10;(:include decl pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
											<pair>
												<weak_ptr>
													<expired>0</expired>
													<shared_ptr>
														<id>-44</id>
													</shared_ptr>
												</weak_ptr>
												<container>
													<size>1</size>
													<variant>2</variant>
													<string>[@#include &lt;boost/shared_ptr.hpp&gt;&#10;&#10;namespace&#10;boost&#10;    {&#10;(:include api pre_indent=&quot;4&quot;:)&#10;    }@]&#10;</string>
												</container>
											</pair>
										</sorted>
									</object>
								</shared_ptr>
							</pair>
						</sorted>
					</object>
				</shared_ptr>
			</layers>
			<contexts>
				<shared_ptr>
					<id>51</id>
					<type>
						<string>reno_context_map</string>
					</type>
					<object>
						<contexts>
							<sorted>
								<size>40</size>
								<shared_ptr>
									<id>-5</id>
								</shared_ptr>
								<shared_ptr>
									<id>-6</id>
								</shared_ptr>
								<shared_ptr>
									<id>-7</id>
								</shared_ptr>
								<shared_ptr>
									<id>-8</id>
								</shared_ptr>
								<shared_ptr>
									<id>-9</id>
								</shared_ptr>
								<shared_ptr>
									<id>-10</id>
								</shared_ptr>
								<shared_ptr>
									<id>-11</id>
								</shared_ptr>
								<shared_ptr>
									<id>-12</id>
								</shared_ptr>
								<shared_ptr>
									<id>-13</id>
								</shared_ptr>
								<shared_ptr>
									<id>-14</id>
								</shared_ptr>
								<shared_ptr>
									<id>-15</id>
								</shared_ptr>
								<shared_ptr>
									<id>-16</id>
								</shared_ptr>
								<shared_ptr>
									<id>-17</id>
								</shared_ptr>
								<shared_ptr>
									<id>-18</id>
								</shared_ptr>
								<shared_ptr>
									<id>-19</id>
								</shared_ptr>
								<shared_ptr>
									<id>-20</id>
								</shared_ptr>
								<shared_ptr>
									<id>-21</id>
								</shared_ptr>
								<shared_ptr>
									<id>-22</id>
								</shared_ptr>
								<shared_ptr>
									<id>-23</id>
								</shared_ptr>
								<shared_ptr>
									<id>-24</id>
								</shared_ptr>
								<shared_ptr>
									<id>-25</id>
								</shared_ptr>
								<shared_ptr>
									<id>-26</id>
								</shared_ptr>
								<shared_ptr>
									<id>-27</id>
								</shared_ptr>
								<shared_ptr>
									<id>-28</id>
								</shared_ptr>
								<shared_ptr>
									<id>-29</id>
								</shared_ptr>
								<shared_ptr>
									<id>-30</id>
								</shared_ptr>
								<shared_ptr>
									<id>-31</id>
								</shared_ptr>
								<shared_ptr>
									<id>-32</id>
								</shared_ptr>
								<shared_ptr>
									<id>-33</id>
								</shared_ptr>
								<shared_ptr>
									<id>-34</id>
								</shared_ptr>
								<shared_ptr>
									<id>-35</id>
								</shared_ptr>
								<shared_ptr>
									<id>-36</id>
								</shared_ptr>
								<shared_ptr>
									<id>-37</id>
								</shared_ptr>
								<shared_ptr>
									<id>-38</id>
								</shared_ptr>
								<shared_ptr>
									<id>-39</id>
								</shared_ptr>
								<shared_ptr>
									<id>-40</id>
								</shared_ptr>
								<shared_ptr>
									<id>-41</id>
								</shared_ptr>
								<shared_ptr>
									<id>-42</id>
								</shared_ptr>
								<shared_ptr>
									<id>-43</id>
								</shared_ptr>
								<shared_ptr>
									<id>-44</id>
								</shared_ptr>
							</sorted>
						</contexts>
						<index>
							<sorted>
								<size>40</size>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-42</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-41</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-11</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>0</size>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>1</empty>
										</path>
									</file>
									<shared_ptr>
										<id>-39</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>4DC5257313CB18D2FB860A51C10E0CA1F26C0130EF7884BEA62F2B9202796B14</strong>
												<weak>1113469887</weak>
												<size>1807</size>
												<position>91</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-36</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>FC684D0DD5A9732B4130F2AB3DB6E0491D0F523E14B7FB738B2019EA2C7F8717</strong>
												<weak>2229778754</weak>
												<size>631</size>
												<position>319</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/cloning_2.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-34</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>D9B8E6AA12A4F33953B1A961FA590C5A3840234B6531CA8C04AC985AD5800835</strong>
												<weak>2432554768</weak>
												<size>702</size>
												<position>408</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/enable_error_info.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-26</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>0C00BEB179039380247D771B12C728884E9A3E5B483AC63CD5789852C7A5CC35</strong>
												<weak>2506662970</weak>
												<size>2467</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/enable_error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-14</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>5373E336DC4892A41D31694BCA1146382FC3137819A04689CA1F9FFAF1CFAB3B</strong>
												<weak>4050491732</weak>
												<size>466</size>
												<position>307</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/cloning_1.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-22</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>DA91A64CCC9A5B149DFB580E5466539607C9CE92A93F56CE4C03996A468C1145</strong>
												<weak>2002159572</weak>
												<size>10547</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-12</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>3EFECC50102590C4E9074D4F86B0E8F831D933193CCF70B8D80E8A0CF345C150</strong>
												<weak>877841526</weak>
												<size>4772</size>
												<position>726</position>
												<strong>82BA37021947A2C641B3285537EB8841A6AC59067CE01D873BC19725BAADCFC1</strong>
												<weak>1244314370</weak>
												<size>733</size>
												<position>243</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-9</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>3EFECC50102590C4E9074D4F86B0E8F831D933193CCF70B8D80E8A0CF345C150</strong>
												<weak>877841526</weak>
												<size>4772</size>
												<position>726</position>
												<strong>C552A651ADC0B9506373CC1A78CB4D7D0342BC99BD24F2F2B8CAD3B555037FE7</strong>
												<weak>141521629</weak>
												<size>382</size>
												<position>4384</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-13</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
												<weak>737034355</weak>
												<size>10349</size>
												<position>521</position>
												<strong>F87D7E0321BDDAE23D5A6667CB12116411468AEC54E3B35FB9C8CA94BFECA41E</strong>
												<weak>1149388739</weak>
												<size>296</size>
												<position>9929</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-7</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
												<weak>737034355</weak>
												<size>10349</size>
												<position>521</position>
												<strong>CCBCB5EADA66B82DFC7650F467A0E51CA5B10EFCD3729EDFB038A1C5DCB5722D</strong>
												<weak>1007135774</weak>
												<size>701</size>
												<position>3933</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-37</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
												<weak>737034355</weak>
												<size>10349</size>
												<position>521</position>
												<strong>C84057F7B3954843F5360E9764B35DC5EB1D8ED65CA9F1B6B633D95B417E3AA9</strong>
												<weak>1591300832</weak>
												<size>2322</size>
												<position>1609</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-8</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
												<weak>737034355</weak>
												<size>10349</size>
												<position>521</position>
												<strong>8A536C83AAA6BF19C2B173BE32022C6363004D5F0B88F7982711F5D66F539FE9</strong>
												<weak>3888149824</weak>
												<size>2495</size>
												<position>7432</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-29</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>4546B9848279614FBDF70D0FB35B6D7A3432BF205DC9EC15C6016A77D2124E53</strong>
												<weak>737034355</weak>
												<size>10349</size>
												<position>521</position>
												<strong>4B6ED02EA5B5A3B326838794C37ED01C5DC3E8D89FA78E62B9F7A0C78D4DB6FD</strong>
												<weak>2715164371</weak>
												<size>116</size>
												<position>10227</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception_ptr.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-5</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>49D31376D97691F7C84A134B5D8C7C66EF1ED6901D376CA250D634AE2B38AB5E</strong>
												<weak>549270010</weak>
												<size>163</size>
												<position>561</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-20</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>8DF6E9F9346E2A1297844433695E2BAE1AD14FBDB6D943D81B87200FB9F9AE66</strong>
												<weak>4241576983</weak>
												<size>5175</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-27</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>A0BB65AB464BCD75627D942684603207867D3C5D1BAE93902A812A07677B596F</strong>
												<weak>3668753278</weak>
												<size>646</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/diagnostic_information.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-25</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>285A4D5FBF3D13C5729697E61680A07DC52493A4A964D54F6B21FDAA35A3AC70</strong>
												<weak>3873809619</weak>
												<size>448</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-16</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>3999B09B03466CF6F624CB20689AE32FEFBAF81B2ADDA4D0E6777BC052B1BE70</strong>
												<weak>2497361403</weak>
												<size>3349</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-17</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
												<weak>1525247529</weak>
												<size>3149</size>
												<position>523</position>
												<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
												<weak>1676293364</weak>
												<size>2098</size>
												<position>886</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-19</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>4</size>
												<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
												<weak>1525247529</weak>
												<size>3149</size>
												<position>523</position>
												<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
												<weak>1676293364</weak>
												<size>2098</size>
												<position>886</position>
												<strong>85EE1980CFB24E054EDB1B3BDFA61FD4D65AD0EF248A1A42D4C2552700459327</strong>
												<weak>2238151539</weak>
												<size>428</size>
												<position>928</position>
												<strong>AD3F339F7126003907BCBDB3EF846FCACA895132E1100D202DA67D2B7846EE65</strong>
												<weak>3032091776</weak>
												<size>60</size>
												<position>369</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-32</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>3</size>
												<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
												<weak>1525247529</weak>
												<size>3149</size>
												<position>523</position>
												<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
												<weak>1676293364</weak>
												<size>2098</size>
												<position>886</position>
												<strong>BAC52AC87CFA3174B3352140A8DC10BB7F48C945FC87787C3AC96F0FC2CFDB40</strong>
												<weak>1066412964</weak>
												<size>165</size>
												<position>57</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-30</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>3</size>
												<strong>566065B952135D9C2AAD7609E3CDEC4AE9D21A4EF5C318DE51C476C79EBE8277</strong>
												<weak>1525247529</weak>
												<size>3149</size>
												<position>523</position>
												<strong>9E33ECD747FA0BFFED4D2C8916E3A9B8CD737177200F3A4078DECECC94E3EF24</strong>
												<weak>1676293364</weak>
												<size>2098</size>
												<position>886</position>
												<strong>BACD79DFB4C710C1A67687FC6344DF2251E2379613C2DF5B2729B2CD37E24EA3</strong>
												<weak>458367129</weak>
												<size>154</size>
												<position>246</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-24</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>7ACC4E316D4EDB3EC7AEC35FED3ADB47DDF75D575028D7BCD11C5233E4F4A277</strong>
												<weak>4268848542</weak>
												<size>2333</size>
												<position>457</position>
												<strong>61DE70107961C0B9A65674017F91FF85190CF84B4F3B0CA7AC04A7E16DE80B37</strong>
												<weak>3187961206</weak>
												<size>2301</size>
												<position>26</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/enable_error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-40</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>612485E090D76B2CC43C1A296F813075BA165C2496082E78E939F10B3DA8E09A</strong>
												<weak>1770110914</weak>
												<size>587</size>
												<position>1291</position>
												<strong>60F3F48B87487FA6E0D2CCC0750AF435CC92CEC80BBBF609AC71295031AADD0D</strong>
												<weak>3929437933</weak>
												<size>361</size>
												<position>213</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/throw_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-43</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>86DE119A4A3E9251475D1291AF99B769E304A8E0172409FC2A4E02B8D4BF73A2</strong>
												<weak>767141628</weak>
												<size>1417</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/get_error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-44</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>CAB4D823BD4720B71E1CA5BE482AC95B42A9E07CD5E08671EA23184635F281A2</strong>
												<weak>3077708282</weak>
												<size>89</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-23</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>506A4FDA868A2B69175F6B3CF0FE18C9A87901D397934D3DE90A261C1F8409AA</strong>
												<weak>945649359</weak>
												<size>1603</size>
												<position>367</position>
												<strong>DF9EA87B0140AACF4422F1B76F6A6A409C15F32858BBBA85A35981A824C56BA9</strong>
												<weak>1137981799</weak>
												<size>192</size>
												<position>1405</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/enable_current_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-38</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>CAD6C404CB725D336A44920D2341ECA131149AB02C368B59028F8147F16737BF</strong>
												<weak>2258638601</weak>
												<size>94</size>
												<position>227</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info_tuple.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-35</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>D5ABFC95B9593A7346BF1C09827808A9AE95C161469B25D50305FCD7AC1A6FC2</strong>
												<weak>556762679</weak>
												<size>1647</size>
												<position>323</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/enable_current_exception.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-10</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>0C9E5FE5B32FD3F31875CF6AD87A485CACC42754EE56F0E72D9D9749734959D5</strong>
												<weak>2969409401</weak>
												<size>544</size>
												<position>425</position>
												<strong>1DE66DC4BD5E2E323BA4281B4BAB063AF5E9F7E4A5FE32BA3C0686A844FBA86E</strong>
												<weak>4200042321</weak>
												<size>512</size>
												<position>26</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/diagnostic_information.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-31</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>F4C951B28F7DE500973AA3DFAA99F2BADA6EDAFA2B406C30BEF3B7FBE6FD57D7</strong>
												<weak>2263754923</weak>
												<size>982</size>
												<position>306</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/error_info_2.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-18</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>CE411E21EE9878B55B5906D033A0FC52574FB59D8A8CECB75405E9B1C9D782DB</strong>
												<weak>1173443713</weak>
												<size>308</size>
												<position>302</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/logging.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-15</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>AE3A2E2D2C5F64EF089B5E3B27F1D42E1D0FD99D0CF898C7D5F828D4401090DB</strong>
												<weak>2880991434</weak>
												<size>1268</size>
												<position>472</position>
												<strong>40062E1E97460C1E0AB685CE189F5D6607389A5A533C9E7D28050B4037EE3A50</strong>
												<weak>4283132066</weak>
												<size>1236</size>
												<position>26</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/get_error_info.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-6</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>2</size>
												<strong>F7633FDCF6615C0199645701EE6E7ACE5CBCD7A7CF6838573791E91ABB3C09F2</strong>
												<weak>1668435395</weak>
												<size>1332</size>
												<position>396</position>
												<strong>A1F443AF571973A12005D2F7D4AE09A32AAF686FEEAE272EC21512A65EB943E8</strong>
												<weak>3879093659</weak>
												<size>1300</size>
												<position>26</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../../../boost/exception/info_tuple.hpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-28</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>187BFD2B78A0DD006717B5B06FFD465E2468F521C32A86FB793F7A68AB5417F3</strong>
												<weak>4276724153</weak>
												<size>574</size>
												<position>382</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/error_info_1.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-33</id>
									</shared_ptr>
								</pair>
								<pair>
									<hook>
										<stream_hook_path>
											<container>
												<size>1</size>
												<strong>E444EE9697EEADFDE0767E1D0242FC0E70D98E61FB1F0FFA099648DE509B82F3</strong>
												<weak>94503238</weak>
												<size>773</size>
												<position>374</position>
											</container>
										</stream_hook_path>
									</hook>
									<file>
										<path>
											<empty>0</empty>
											<string>../../example/info_tuple.cpp</string>
											<type>0</type>
											<base>0</base>
										</path>
									</file>
									<shared_ptr>
										<id>-21</id>
									</shared_ptr>
								</pair>
							</sorted>
						</index>
					</object>
				</shared_ptr>
			</contexts>
			<index>
				<shared_ptr>
					<id>52</id>
					<type>
						<string>tag_index</string>
					</type>
					<object>
						<tag_index>
							<sorted>
								<size>41</size>
								<pair>
									<weak_ptr>
										<expired>1</expired>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-5</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-6</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-7</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-8</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-9</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-10</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-11</id>
										</shared_ptr>
									</weak_ptr>
									<string>tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-12</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-13</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-14</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-15</id>
										</shared_ptr>
									</weak_ptr>
									<string>diagnostic_information tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-16</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-17</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-18</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-19</id>
										</shared_ptr>
									</weak_ptr>
									<string>type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-20</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-21</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-22</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-23</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-24</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-25</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-26</id>
										</shared_ptr>
									</weak_ptr>
									<string>tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-27</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-28</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-29</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-30</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-31</id>
										</shared_ptr>
									</weak_ptr>
									<string>diagnostic_information free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-32</id>
										</shared_ptr>
									</weak_ptr>
									<string>function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-33</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-34</id>
										</shared_ptr>
									</weak_ptr>
									<string>noalso noindex tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-35</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-36</id>
										</shared_ptr>
									</weak_ptr>
									<string></string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-37</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr type</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-38</id>
										</shared_ptr>
									</weak_ptr>
									<string>exception_ptr free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-39</id>
										</shared_ptr>
									</weak_ptr>
									<string>index noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-40</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-41</id>
										</shared_ptr>
									</weak_ptr>
									<string>tutorial</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-42</id>
										</shared_ptr>
									</weak_ptr>
									<string>noindex</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-43</id>
										</shared_ptr>
									</weak_ptr>
									<string>free function</string>
								</pair>
								<pair>
									<weak_ptr>
										<expired>0</expired>
										<shared_ptr>
											<id>-44</id>
										</shared_ptr>
									</weak_ptr>
									<string>error_info</string>
								</pair>
							</sorted>
						</tag_index>
					</object>
				</shared_ptr>
			</index>
		</reno_project>
	</object>
</shared_ptr>
