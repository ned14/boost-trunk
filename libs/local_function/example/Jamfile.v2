
# Copyright (C) 2009-2012 Lorenzo Caminiti
# Distributed under the Boost Software License, Version 1.0
# (see accompanying file LICENSE_1_0.txt or a copy at
# http://www.boost.org/LICENSE_1_0.txt)
# Home at http://www.boost.org/libs/local_function

import testing ;

project : requirements <library>/boost//unit_test_framework ;

run add_global_functor.cpp ;
run add_local_functor.cpp ;
# I'm not sure why this does not compile... I've asked Booster.
#run add_phoenix.cpp ;

run const_block.cpp ;
# Compilation fails for debug but not for release builds so commented out.
#compile-fail const_block_err.cpp ;

run expensive_copy_lambda.cpp ;
run expensive_copy_local_function.cpp ;

run gcc_access.cpp ;
run gcc_lambda.cpp ;
run gcc_lambda_cpp11.cpp ;
run gcc_square.cpp ;
run gcc_store.cpp ;

run impl_pp_keyword.cpp ;
run impl_tparam_tricks.cpp ;

run n2529_this.cpp ;
run n2550_find_if.cpp ;

compile-fail noncopyable_lambda_err.cpp ;
run noncopyable_local_function.cpp ;

run phoenix_factorial.cpp ;
run phoenix_factorial_local.cpp ;

exe profile_global_functor : profile_global_functor.cpp
    :   <library>/boost/chrono//boost_chrono
        <library>/boost/system//boost_system
        <link>static
    ;
exe profile_lambda : profile_lambda.cpp
    :   <library>/boost/chrono//boost_chrono
        <library>/boost/system//boost_system
        <link>static
    ;
exe profile_local_function : profile_local_function.cpp
    :   <library>/boost/chrono//boost_chrono
        <library>/boost/system//boost_system
        <link>static
    ;
exe profile_local_function_inline : profile_local_function_inline.cpp
    :   <library>/boost/chrono//boost_chrono
        <library>/boost/system//boost_system
        <link>static
    ;
exe profile_local_functor : profile_local_functor.cpp
    :   <library>/boost/chrono//boost_chrono
        <library>/boost/system//boost_system
        <link>static
    ;
exe profile_phoenix : profile_phoenix.cpp
    :   <library>/boost/chrono//boost_chrono
        <library>/boost/system//boost_system
        <link>static
    ;

run scope_exit.cpp ;

