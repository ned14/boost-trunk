[/==============================================================================
    Copyright (C) 2003-2010 Thorsten Ottosen, Neil Groves

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt
==============================================================================/]
[library Range
    [quickbook 1.5]
    [version 2.0]
    [authors [Ottosen, Thorsten], [Groves, Neil]]
    [copyright 2003-2010 Thorsten Ottosen, Neil Groves]
    [purpose Half-open range library]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
]

[/ Converted to Quickbook format by Darren Garvey, 2007]

[def __note__                   [$images/note.png]]
[def __alert__                  [$images/alert.png]]
[def __tip__                    [$images/tip.png]]
[def __caution__                [$images/caution.png]]

[def __boost_range_home__       [link range Boost.Range]]
[def __ranges__                 [link range.concepts Ranges]]
[def __range_concepts__         [link range.concepts Range concepts]]
[def __forward_range__          [link range.concepts.forward_range Forward Range]]
[def __single_pass_range__      [link range.concepts.single_pass_range Single Pass Range]]
[def __bidirectional_range__    [link range.concepts.bidirectional_range Bidirectional Range]]
[def __random_access_range__    [link range.concepts.random_access_range Random Access Range]]

[def __iterator_range__         [link range.utilities.iterator_range `iterator_range`]]
[def __sub_range__              [link range.utilities.sub_range `sub_range`]]
[def __minimal_interface__      [link range.reference.extending minimal interface]]
[def __range_result_iterator__  [link range.reference.semantics.metafunctions `range_result_iterator`]]
[def __extending_for_udts__ [link range.reference.extending Extending the library for UDTs]]
[def __implementation_of_metafunctions__ [link range.reference.semantics.metafunctions Implementation of metafunctions]]
[def __implementation_of_functions__     [link range.reference.semantics.functions Implementation of functions]]

[def __range_value__            [link range.reference.semantics.metafunctions `range_value`]]
[def __range_iterator__         [link range.reference.semantics.metafunctions `range_iterator`]]
[def __range_difference__       [link range.reference.semantics.metafunctions `range_difference`]]
[def __range_pointer__          [link range.reference.semantics.metafunctions `range_pointer`]]
[def __range_category__         [link range.reference.semantics.metafunctions `range_category`]]
[def __range_reverse_iterator__ [link range.reference.semantics.metafunctions `range_reverse_iterator`]]
[def __begin__                  [link range.reference.semantics.functions `begin`]]
[def __const_begin__            [link range.reference.semantics.functions `const_begin`]]
[def __end__                    [link range.reference.semantics.functions `end`]]
[def __const_end__              [link range.reference.semantics.functions `const_end`]]
[def __empty__                  [link range.reference.semantics.functions `empty`]]
[def __distance__               [link range.reference.semantics.functions `distance`]]
[def __size__                   [link range.reference.semantics.functions `size`]]
[def __rbegin__                 [link range.reference.semantics.functions `rbegin`]]
[def __const_rbegin__           [link range.reference.semantics.functions `const_rbegin`]]
[def __rend__                   [link range.reference.semantics.functions `rend`]]
[def __const_rend__             [link range.reference.semantics.functions `const_rend`]]
[def __as_array__               [link range.reference.semantics.functions `as_array`]]
[def __as_literal__             [link range.reference.semantics.functions `as_literal`]]

[def __range_adaptors__         [link range.reference.adaptors Range adaptors]]
[def __range_algorithms__       [link range.reference.algorithms Range algorithms]]

[def __single_pass_iterator__   [@boost:/libs/iterator/doc/new-iter-concepts.html#singls-pass-iterators-lib-single-pass-iterators Single Pass Iterator]]
[def __forward_traversal_iterator__ [@boost:/libs/iterator/doc/new-iter-concepts.html#forward-traversal-iterators-lib-forward-traversal-iterators Forward Traversal Iterator]]
[def __bidirectional_traversal_iterator__ [@boost:/libs/iterator/doc/new-iter-concepts.html#bidirectional-traversal-iterators-lib-bidirectional-traversal-iterators Bidirectional Traversal Iterator]]
[def __random_access_traversal_iterator__ [@boost:/libs/iterator/doc/new-iter-concepts.html#random-access-traversal-iterators-lib-random-access-traversal-iterators Random Access Traversal Iterator]]
[def __new_style_iterators__    [@boost:/libs/iterator/doc/new-iter-concepts.html new style iterators]]
[def __iterator_concepts__      [@boost:/libs/iterator/doc/iterator_concepts.html Iterator concepts]]

[def __container__              [@http://www.sgi.com/Technology/STL/Container.html Container]]
[def __metafunctions__          [@boost:/libs/mpl/doc/refmanual/metafunction.html metafunctions]]
[def __concept_check__          [@boost:/libs/concept_check/index.html Boost Concept Check library]]
[def __boost_array__            [@boost:/libs/array/index.html boost::array]]
[def __the_forwarding_problem__ [@http://std.dkuug.dk/jtc1/sc22/wg21/docs/papers/2002/n1385.htm The Forwarding Problem]]

[def __sgi_inner_product__      [@http://www.sgi.com/tech/stl/inner_product.html inner_product]]
[def __sgi_partial_sum__        [@http://www.sgi.com/tech/stl/partial_sum.html partial_sum]]

Boost.Range is a collection of concepts and utilities that are particularly useful for specifying and implementing generic algorithms.
[include introduction.qbk]
[include concepts.qbk]
[include reference.qbk]
[include utilities.qbk]
[include style.qbk]
[include headers.qbk]
[include examples.qbk]
[include mfc_atl.qbk]
[include upgrade.qbk]
[include portability.qbk]
[include faq.qbk]
[include history_ack.qbk]

