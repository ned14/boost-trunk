[/
 / Copyright (c) 2007 Andrew Sutton
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[section Clique Visitor]
The clique visitor concept defines requirements for types that act as visitors
of clique-detection algorithms. Objects of this type are passed to these
algorithms and are invoked when a clique is found within a graph.

[heading Refinement Of]
[Visitor]

[heading Expressions]
[table
    [[Name] [Expression] [Result Type] [Description]]
    [
        [Visit Clique]
        [`vis.clique(vs,g)`]
        [`void`]
        [
            The `clique()` member function of the visitor is invoked when a fully
            connected subgraph is identified in the graph `g`.

             *Requirements:* `g` is an object whose type `G` is a refinement of the
            [Graph] concept.

            *Requirements:* `vs` is an object whose type `VS` is a refinement of the
            [SgiContainer] concept. The `value_type` of `VS` must be the `vertex_descriptor`
            of `G`.

            *Precondition:* All vertices in the [SgiContainer] `vs` are connected.
            If `g` is a directed graph, then all vertices, /u/ and /v/, are connected
            by edges /(u,v)/ and /(v,u)/.
        ]
    ]
]

[heading C++0x]
This concept is defined as:

    concept CliqueVisitor<typename T>
    {
        Graph graph_type;

        template<Container VertexSet>
            requires SameType<VertexSet::value_type, graph_type::vertex_descriptor>
        void T::clique(const VertexSet&, graph_type&);
    };

[endsect]
