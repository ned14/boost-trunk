/////////////////////////////////////////////////////////////////////////////
//
// (C) Copyright Ion Gaztanaga  2006-2008
//
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE_1_0.txt or copy at
//          http://www.boost.org/LICENSE_1_0.txt)
//
// See http://www.boost.org/libs/intrusive for documentation.
//
/////////////////////////////////////////////////////////////////////////////
-> Implement C++0x features (variadic templates & rvalue references)
-> Offer bidirectional iterator for hashtables
-> Non-array buckets
-> Document incremental<> option better

-> Revise treap's hooks should be restored if the operation throws
-> Revise treap help to add priority changes (throw, new functions, etc.)
-> Revise make_functions, and any hook tests to add missing containers
-> On exceptions, auto_unlink/safe_link hooks default state should be recovered
   (insert_equal, insert_lower_bound, insert_equal_upper_bound) 
-> insert_unique_check should also compare priorities.
-> test insert_unique_check with hint in tests
-> revise strong exception safety concepts for treap::erase functions.
   What happens with range deletions?
-> Assure stable order for optimize_multikey and inverse order otherwise
-> linear slist's splice_after(..., slist &x) can be optimized if *this is empty
-> optimize slist::merge like list::merge
