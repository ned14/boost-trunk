[library Boost.Math
    [quickbook 1.3]
    [copyright 2001-2002 Daryle Walker, 2001-2003 Hubert Holin, 2005 John Maddock]
    [purpose Various mathematical functions and data types]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt http://www.boost.org/LICENSE_1_0.txt])
    ]
    [authors [Holin, Hubert], [Maddock, John], [Walker, Daryle]]
    [category math]
    [last-revision $Date$]
]

[def __asinh [link boost_math.math_special_functions.asinh asinh]]
[def __acosh [link boost_math.math_special_functions.acosh acosh]]
[def __atanh [link boost_math.math_special_functions.atanh atanh]]
[def __sinc_pi [link boost_math.math_special_functions.sinc_pi sinc_pi]]
[def __sinhc_pi [link boost_math.math_special_functions.sinhc_pi sinhc_pi]]

[def __log1p [link boost_math.math_special_functions.log1p log1p]]
[def __expm1 [link boost_math.math_special_functions.expm1 expm1]]
[def __hypot [link boost_math.math_special_functions.hypot hypot]]


[section Overview]

This documentation is 
[@http://boost-consulting.com/vault/index.php?action=downloadfile&filename=boost_math-1.34.pdf&directory=PDF%20Documentation& also available in printer-friendly PDF format].

The [link boost_math.gcd_lcm Greatest Common Divisor and Least Common Multiple library] 
provides run-time and compile-time evaluation of the greatest common divisor (GCD) 
or least common multiple (LCM) of two integers.

The [link boost_math.math_special_functions Special Functions library] currently provides eight templated special functions, 
in namespace boost. Two of these (__sinc_pi and __sinhc_pi) are needed by our 
implementation of quaternions and octonions.  The functions __acosh, 
__asinh and __atanh are entirely classical, 
the function __sinc_pi sees heavy use in signal processing tasks, 
and the function __sinhc_pi is an ad'hoc function whose naming is modelled on 
__sinc_pi and hyperbolic functions.  The functions __log1p, __expm1 and __hypot are all part of the C99 standard
but not yet C++.  Two of these (__log1p and __hypot) were needed for the
[link boost_math.inverse_complex complex number inverse trigonometric functions].

The [link boost_math.inverse_complex Complex Number Inverse Trigonometric Functions]
are the inverses of trigonometric functions currently present in the C++ standard. 
Equivalents to these functions are part of the C99 standard, and they
will be part of the forthcoming Technical Report on C++ Standard Library Extensions.

[link boost_math.quaternions Quaternions] are a relative of  
complex numbers often used to parameterise rotations in three  
dimentional space.

[link boost_math.octonions Octonions], like [link boost_math.quaternions quaternions], 
are a relative of complex numbers.  [link boost_math.octonions Octonions] 
see some use in theoretical physics. 

[endsect]

[include math-gcd.qbk]
[include math-sf.qbk]
[include math-tr1.qbk]
[include math-quaternion.qbk]
[include math-octonion.qbk]
[include math-background.qbk]


