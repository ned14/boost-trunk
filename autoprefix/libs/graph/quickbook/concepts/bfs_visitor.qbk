[/
 / Copyright (C) 2007-2009 Andrew Sutton
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[section Breadth-First Search Visitor]
This concept defines the visitor interface for [booost_breadth_first_search] algorithm. Users
can define a class with the BFS Visitor interface and pass and object of the class to
[breadth_first_search], thereby augmenting the actions taken during the graph search.

[h4 Refinement Of]
[Visitor]

[h4 Valid Expressions]
[table
    [[Expression] [Description]]
    [
        [`vis.initialize_vertex(v,g)`]
        [
            This is invoked on every vertex of the graph before the start of the graph search.

            *Returns* `void`
        ]
    ]
    [
        [`vis.discover_vertex(v,g)`]
        [
            This is invoked when a vertex is encountered for the first time.

            *Returns* `void`
        ]
    ]
    [
        [`vis.examine_vertex(v,g)`]
        [
            This is invoked on a vertex as it is popped from the queue. This happens immediately
            before `examine_edge(v,g)` s invoked on each of the out-edges of vertex `v`.

            *Returns* `void`
        ]
    ]
    [
        [`vis.examine_edge(e,g)`]
        [
            This is invoked on every out-edge of each vertex after it is discovered.

            *Returns* `void`
        ]
    ]
    [
        [`vis.tree_edge(e,g)`]
        [
            This is invoked on each edge as it becomes a member of the eges that the form the
            search tree.

            *Returns* `void`
        ]
    ]
    [
        [`vis.non_tree_edge(v,g)`]
        [
            This is invoked on back or cross edges for directed graphs and cross edges
            for undirected graphs.

            *Returns* `void`
        ]
    ]
    [
        [`vis.gray_target(e,g)`]
        [
            This is invoked on the subset of non-tree-edges who's target vertex is colored gray
            at the time of examination. The color gray indicates that the vertex is currently
            in the queue.

            *Returns* `void`
        ]
    ]
    [
        [`vis.black_target(v,g)`]
        [
            This is invoked on the subset of non-tree edges who's target vertex is colored black
            at the time of examination. The color black indicates that the vertex has been removed
            from the queue.

            *Returns* `void`
        ]
    ]
    [
        [`vis.finish_vertex(v,g)`]
        [
            This is invoked on a vertex after all of its out edges have been added to the search
            tree and all of the adjacenct vertices have been discovered, but before the out-edges
            of the adjacent vertices have been examined.

            *Returns* `void`
        ]
    ]
]

[h4 Models]
* [bfs_visitor]

[endsect]
