[/
 / Copyright (C) 2007-2009 Andrew Sutton
 /
 / Distributed under the Boost Software License, Version 1.0. (See accompanying
 / file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 /]

[section Property Graph]
A PropertyGraph is a graph that has some property associated with each of the vertices or edges
in the graph. As a given graph may have several properties associated with each vertex or edge,
a /tag/ is used to identity which property is being accessed. The graph provides a function which
returns a property map object and also the value corresponding to a vertex or edge and its
indicated property.

[h4 Refinement Of]
[Graph]

[h4 Associated Types]
[table
    [[Type] [Description]]
    [
        [`property_map<G, Property>::type`]
        [
            The type of the property map for the property specified by `Property`. This type must
            be a model of [ReadWritePropertyMap] with a key type the same as the graph's
            `vertex_descriptor` or `edge_descriptor` types.
        ]
    ]
    [
        [`property_map<G, Property>::const_type`]
        [
            The type of the property map for the property specified by `Property`. This type must
            be a model of [ReadablePropertyMap] with a key type the same as the graph\'s
            `vertex_descriptor` or `edge_descriptor` types.
        ]
    ]
]

[h4 Valid Expressions]
[table
    [[Expression] [Description]]
    [
        [`get(p,g)`]
        [
            Returns the property map specified by the property identified by the tag `p`. The parameter
            `p` is only used to convey type information and has no value.

            *Returns* `property_map<G,Property>::type` if `g` is mutable and
            `property_map<G,Property>::const_type` otherwise.
        ]
    ]
    [
        [`get(p,g,x)`]
        [
            Returns the property /value/ specified by the type of property tag `p` for the given
            vertex or edge descriptor `x`. The object `p` is only used to convey type information
            and has no value. This function is equivalent to `get(get(p,g),x)`.

            *Returns* `property_traits<property_map<G,Property>::const_type>::value_type`
        ]
    ]
    [
        [`put(p,g,x,v)`]
        [
            Set the property /value/ specified by the type of property tag `p` for the given
            vertex or edge descriptor `x` to the value `v`. The object `p` is only used to
            convey type information and has no value.

            *Returns* `void`
        ]
    ]
    [
        [`out_degree(v,g)`]
        [
            Returns the number of out-edges (for directed graphs) or the number of incident
            edges (for undirected graphs) of the vertex `v`.

            *Returns* `degree_size_type`.
        ]
    ]
]

[h4 Complexity Guarantees]
The `get(p,g)` function must return in constant time.

[endsect]
