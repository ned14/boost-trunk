# generate_base_units.jam
#
# Copyright (c) 2008
# Steven Watanabe
#
# Distributed under the Boost Software License, Version 1.0. (See
# accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt

import quickbook ;
import type ;
import generators ;
import print ;
import path ;
import regex ;
import sequence ;

rule less ( a b ) {
    if [ path.basename $(a) ]  < [ path.basename $(b) ]  {
        return true ;
    }
}

rule generate_qbk ( target : sources * : properties * ) {
    print.output $(target) ;
    local as-path = [ sequence.transform path.make : $(sources:G=) ] ;
    local known = ;
    local duplicated = ;
    for local file in $(as-path) {
        local base = [ path.basename $(file) ] ;
        if $(base) in $(known) {
            if ! $(base) in $(duplicated) {
                duplicated += $(base) ;
            }
        } else {
            known += $(base) ;
        }
    }
    for local file in [ sequence.insertion-sort $(as-path) : less ] {
        local output_filename = [ regex.replace $(file) "\\.\\./" "" ] ;
        local base_filename = [ path.basename $(file) ] ;
        local base_unit = [ regex.replace $(base_filename) "\\.hpp" "" ] ;
        if $(base_filename) in $(duplicated) {
            # tack the directory name onto the end
            local dir-name = [ path.basename [ path.parent $(file) ] ] ;
            base_unit = "$(base_unit) ($(dir-name))" ;
        }
# this looks better, but it won't work until my boostbook patch for
# annotation.xsl gets applied.
#        print.text "[headerref $(output_filename) $(base_unit)]\\n" : overwrite ;
        print.text "[headerref $(output_filename)]\\n" : overwrite ;
    }
}

type.register GENERATED_QBK : : QUICKBOOK ;
generators.register-composing generate_base_units.generate_qbk : HPP : GENERATED_QBK ;
